{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/list-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\n\tgetProto = Object.getPrototypeOf,\n\tsetProto = Object.setPrototypeOf,\n\n\thas = (o, prop) => o.hasOwnProperty(prop),\n\tis = (Constructor, obj) => obj instanceof Constructor,\n\tisFunction = f => typeof f === \"function\",\n\tisObject = o => typeof o === \"object\",\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\n\tisIterable = x => x && isFunction(x[Symbol.iterator]),\n\n\tproxifyFn = (fn, apply) => new Proxy(fn, { apply }),\n\tproxifyModel = (val, model, traps) => new Proxy(val, { getPrototypeOf: () => model.prototype, ...traps }),\n\n\tmerge = (target, src = {}) => {\n\t\tfor (let key in src) {\n\t\t\tif (isPlainObject(src[key])) {\n\t\t\t\tlet o = {}\n\t\t\t\tmerge(o, target[key])\n\t\t\t\tmerge(o, src[key])\n\t\t\t\ttarget[key] = o\n\t\t\t} else {\n\t\t\t\ttarget[key] = src[key]\n\t\t\t}\n\t\t}\n\t\treturn target\n\t},\n\n\tdefine = (obj, key, value, enumerable = false) => {\n\t\tObject.defineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\n\t},\n\n\tsetConstructor = (model, constructor) => {\n\t\tsetProto(model, constructor.prototype)\n\t\tdefine(model, \"constructor\", constructor)\n\t},\n\n\textend = (child, parent, props) => {\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\n\t\t\tconstructor: {\n\t\t\t\tvalue: child,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t}\n\t\t}), props)\n\t\tsetProto(child, parent)\n\t}","import {\n\tbettertypeof, define, extend, getProto, has, is, isFunction, isObject, isPlainObject,\n\tmerge, proxifyFn, setConstructor\n} from \"./helpers.js\"\n\nexport const\n\t_validate = Symbol(),\n\t_original = Symbol(), // used to bypass proxy\n\n\tSKIP_VALIDATE = Symbol(), // used to skip validation at instanciation for perf\n\n\tinitModel = (model, constructor, def, base) => {\n\t\tif (base) extend(model, base)\n\t\tsetConstructor(model, constructor)\n\t\tmodel.definition = def\n\t\tmodel.assertions = [...model.assertions]\n\t\tdefine(model, \"errors\", [])\n\t\tdelete model.name\n\t\treturn model\n\t},\n\n\textendModel = (child, parent, newProps) => {\n\t\textend(child, parent, newProps)\n\t\tchild.assertions.push(...parent.assertions)\n\t\treturn child\n\t},\n\n\tstackError = (errors, expected, received, path, message) => {\n\t\terrors.push({ expected, received, path, message })\n\t},\n\n\tunstackErrors = (model, collector = model.errorCollector) => {\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors > 0) {\n\t\t\tlet errors = model.errors.map(err => {\n\t\t\t\tif (!err.message) {\n\t\t\t\t\tlet def = [].concat(err.expected)\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\n\t\t\t\t}\n\t\t\t\treturn err\n\t\t\t})\n\n\t\t\tmodel.errors.length = 0\n\t\t\tcollector.call(model, errors) // throw all errors collected\n\t\t}\n\t\treturn nbErrors\n\t},\n\n\tisModelInstance = i => i && is(Model, getProto(i).constructor),\n\n\tparseDefinition = (def) => {\n\t\tif (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => { def[key] = parseDefinition(def[key]) })\n\t\t}\n\t\telse if (!Array.isArray(def)) return [def]\n\t\telse if (def.length === 1) return [...def, undefined, null]\n\n\t\treturn def\n\t},\n\n\tformatDefinition = (def, stack) => {\n\t\tlet parts = parseDefinition(def).map(d => format(d, stack))\n\t\treturn parts.length > 1 ? `(${parts.join(\" or \")})` : parts[0]\n\t},\n\n\textendDefinition = (def, newParts = []) => {\n\t\tnewParts = [].concat(newParts)\n\t\tif (newParts.length > 0) {\n\t\t\tdef = newParts\n\t\t\t\t.reduce((def, ext) => def.concat(ext), [].concat(def)) // clone to lose ref\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\n\t\t}\n\n\t\treturn def\n\t},\n\n\tcheckDefinition = (obj, def, path, errors, stack, shouldCast) => {\n\t\tlet indexFound = stack.indexOf(def)\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\n\t\t\treturn obj //if found twice in call stack, cycle detected, skip validation\n\n\t\tif (is(Model, def)) {\n\t\t\tif (shouldCast) obj = cast(obj, def)\n\t\t\tdef[_validate](obj, path, errors, stack.concat(def))\n\t\t}\n\t\telse if (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => {\n\t\t\t\tlet val = obj ? obj[key] : undefined\n\t\t\t\tcheckDefinition(val, def[key], formatPath(path, key), errors, stack, shouldCast)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tlet pdef = parseDefinition(def)\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack))) {\n\t\t\t\tif (shouldCast) obj = cast(obj, def)\n\t\t\t\treturn obj\n\t\t\t}\n\n\t\t\tstackError(errors, def, obj, path)\n\t\t}\n\n\t\treturn obj\n\t},\n\n\tcheckDefinitionPart = (obj, def, path, stack, shouldCast) => {\n\t\tif (obj == null) return obj === def\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\n\t\t\tlet errors = []\n\t\t\tcheckDefinition(obj, def, path, errors, stack, shouldCast)\n\t\t\treturn !errors.length\n\t\t}\n\t\tif (is(RegExp, def)) return def.test(obj)\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\n\t\treturn obj === def\n\t\t\t|| (isFunction(def) && is(def, obj))\n\t\t\t|| obj.constructor === def\n\t},\n\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\n\t\tfor (let assertion of model.assertions) {\n\t\t\tlet result\n\t\t\ttry {\n\t\t\t\tresult = assertion.call(model, obj)\n\t\t\t} catch (err) {\n\t\t\t\tresult = err\n\t\t\t}\n\t\t\tif (result !== true) {\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\n\t\t\t\t\t+ `for ${path ? path + \" =\" : \"value\"} ${format(value)}`\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\n\t\t\t}\n\t\t}\n\t},\n\n\tformat = (obj, stack = []) => {\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\n\t\tif (obj === null || obj === undefined) return String(obj)\n\t\tif (typeof obj === \"string\") return `\"${obj}\"`\n\t\tif (is(Model, obj)) return obj.toString(stack)\n\n\t\tstack.unshift(obj)\n\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\n\t\tif (Array.isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\n\t\tif (obj && isObject(obj)) {\n\t\t\tlet props = Object.keys(obj),\n\t\t\t\tindent = '\\t'.repeat(stack.length)\n\t\t\treturn `{${props.map(\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], [...stack])}`\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\n\t\t}\n\n\t\treturn String(obj)\n\t},\n\n\tformatPath = (path, key) => path ? path + '.' + key : key,\n\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\n\t\tlet newPath = formatPath(path, key),\n\t\t\tisPrivate = model.conventionForPrivate(key),\n\t\t\tisConstant = model.conventionForConstant(key),\n\t\t\tisOwnProperty = has(o, key),\n\t\t\tinitialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\n\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\n\n\t\tapplyMutation(newPath)\n\t\tif (has(def, key)) checkDefinition(o[key], def[key], newPath, model.errors, [])\n\t\tcheckAssertions(o, model, newPath)\n\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors) {\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\n\n\t\t\tunstackErrors(model)\n\t\t}\n\n\t\treturn !nbErrors\n\t},\n\n\tcannot = (msg, model) => {\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\n\t},\n\n\tcast = (obj, defNode = []) => {\n\t\tif (!obj || isPlainObject(defNode) || is(BasicModel, defNode) || isModelInstance(obj))\n\t\t\treturn obj // no value or not leaf or already a model instance\n\n\t\tlet def = parseDefinition(defNode),\n\t\t\tsuitableModels = []\n\n\t\tfor (let part of def) {\n\t\t\tif (is(Model, part) && !is(BasicModel, part) && part.test(obj))\n\t\t\t\tsuitableModels.push(part)\n\t\t}\n\n\t\tif (suitableModels.length === 1) {\n\t\t\t// automatically cast to suitable model when explicit (duck typing)\n\t\t\treturn new suitableModels[0](obj, SKIP_VALIDATE)\n\t\t}\n\n\t\tif (suitableModels.length > 1)\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\n\n\t\treturn obj\n\t},\n\n\tgetProxy = (model, obj, def, path, privateAccess) => {\n\t\tif (!isPlainObject(def)) return cast(obj, def)\n\n\t\tconst grantPrivateAccess = f => proxifyFn(f, (fn, ctx, args) => {\n\t\t\tprivateAccess = true\n\t\t\tlet result = Reflect.apply(fn, ctx, args)\n\t\t\tprivateAccess = false\n\t\t\treturn result\n\t\t})\n\n\t\treturn new Proxy(obj, {\n\n\t\t\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\n\n\t\t\tget(o, key) {\n\t\t\t\tif (key === _original) return o\n\n\t\t\t\tif (typeof key !== \"string\") return Reflect.get(o, key)\n\n\t\t\t\tlet newPath = formatPath(path, key),\n\t\t\t\t\tdefPart = def[key]\n\n\t\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\n\t\t\t\t\tcannot(`access to private property ${newPath}`, model)\n\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\n\t\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(o[key]) && key !== \"constructor\" && !privateAccess) {\n\t\t\t\t\treturn grantPrivateAccess(o[key])\n\t\t\t\t}\n\n\t\t\t\tif (isPlainObject(defPart) && !o[key]) {\n\t\t\t\t\to[key] = {} // null-safe traversal\n\t\t\t\t}\n\n\t\t\t\treturn getProxy(model, o[key], defPart, newPath, privateAccess)\n\t\t\t},\n\n\t\t\tset(o, key, val) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\n\t\t\t\t\tnewPath => Reflect.set(o, key, getProxy(model, val, def[key], newPath))\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tdeleteProperty(o, key) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\n\t\t\t},\n\n\t\t\tdefineProperty(o, key, args) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\n\t\t\t},\n\n\t\t\thas(o, key) {\n\t\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\n\t\t\t},\n\n\t\t\townKeys(o) {\n\t\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\n\t\t\t},\n\n\t\t\tgetOwnPropertyDescriptor(o, key) {\n\t\t\t\tlet descriptor\n\t\t\t\tif (!model.conventionForPrivate(key)) {\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key)\n\t\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key]\n\t\t\t\t}\n\n\t\t\t\treturn descriptor\n\t\t\t}\n\t\t})\n\t}\n\n\nexport function Model(def, params) {\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\n}\n\nObject.assign(Model.prototype, {\n\tname: \"Model\",\n\tassertions: [],\n\n\tconventionForConstant: key => key.toUpperCase() === key,\n\tconventionForPrivate: key => key[0] === \"_\",\n\n\ttoString(stack) {\n\t\treturn formatDefinition(this.definition, stack)\n\t},\n\n\tas(name) {\n\t\tdefine(this, \"name\", name)\n\t\treturn this\n\t},\n\n\tdefaultTo(val) {\n\t\tthis.default = val\n\t\treturn this\n\t},\n\n\t[_validate](obj, path, errors, stack) {\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\n\t\tcheckAssertions(obj, this, path, errors)\n\t},\n\n\tvalidate(obj, errorCollector) {\n\t\tthis[_validate](obj, null, this.errors, [])\n\t\treturn !unstackErrors(this, errorCollector)\n\t},\n\n\ttest(obj) {\n\t\tlet model = this\n\t\twhile (!has(model, \"errorCollector\")) {\n\t\t\tmodel = getProto(model)\n\t\t}\n\n\t\tlet initialErrorCollector = model.errorCollector,\n\t\t\tfailed\n\n\t\tmodel.errorCollector = () => {\n\t\t\tfailed = true\n\t\t}\n\n\t\tnew this(obj) // may trigger this.errorCollector\n\n\t\tmodel.errorCollector = initialErrorCollector\n\t\treturn !failed\n\t},\n\n\terrorCollector(errors) {\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\n\t\tthrow e\n\t},\n\n\tassert(assertion, description = format(assertion)) {\n\t\tdefine(assertion, \"description\", description)\n\t\tthis.assertions = this.assertions.concat(assertion)\n\t\treturn this\n\t}\n})\n\n\nexport function BasicModel(def) {\n\tlet model = function (val = model.default) {\n\t\treturn model.validate(val) ? val : undefined\n\t}\n\n\treturn initModel(model, BasicModel, def)\n}\n\nextend(BasicModel, Model, {\n\textend(...newParts) {\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\n\t\tfor (let part of newParts) {\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\n\t\t}\n\n\t\treturn child\n\t}\n})\n\n\nexport function ObjectModel(def) {\n\tlet model = function (obj, mode) {\n\t\tif (!is(model, this)) return new model(obj)\n\t\tif (is(model, obj)) return obj\n\n\t\tif (!is(Object, obj) && obj !== undefined) {\n\t\t\tstackError(model.errors, Object, obj)\n\t\t}\n\n\t\tmerge(this, model.default)\n\t\tif (model.parentClass) merge(obj, new model.parentClass(obj))\n\t\tmerge(this, obj)\n\n\t\tif (mode !== SKIP_VALIDATE) {\n\t\t\tmodel[_validate](this, null, model.errors, [], true)\n\t\t\tunstackErrors(model)\n\t\t}\n\n\t\treturn getProxy(model, this, model.definition)\n\t}\n\n\treturn initModel(model, ObjectModel, def, Object)\n}\n\nextend(ObjectModel, Model, {\n\tdefaultTo(obj) {\n\t\tlet def = this.definition\n\t\tfor (let key in obj) {\n\t\t\tif (has(def, key)) {\n\t\t\t\tobj[key] = checkDefinition(obj[key], def[key], key, this.errors, [], true)\n\t\t\t}\n\t\t}\n\t\tunstackErrors(this)\n\t\tthis.default = obj;\n\t\treturn this\n\t},\n\n\ttoString(stack) {\n\t\treturn format(this.definition, stack)\n\t},\n\n\textend(...newParts) {\n\t\tlet definition = { ...this.definition },\n\t\t\tproto = { ...this.prototype },\n\t\t\tdefaults = { ...this.default },\n\t\t\tnewAssertions = []\n\n\t\tfor (let part of newParts) {\n\t\t\tif (is(Model, part)) {\n\t\t\t\tmerge(definition, part.definition)\n\t\t\t\tmerge(defaults, part.default)\n\t\t\t\tnewAssertions.push(...part.assertions)\n\t\t\t}\n\t\t\tif (isFunction(part)) merge(proto, part.prototype)\n\t\t\tif (isObject(part)) merge(definition, part)\n\t\t}\n\n\t\tlet submodel = extendModel(new ObjectModel(definition), this, proto).defaultTo(defaults)\n\t\tsubmodel.assertions = [...this.assertions, ...newAssertions]\n\n\t\tif (getProto(this) !== ObjectModel.prototype) { // extended class\n\t\t\tsubmodel.parentClass = this\n\t\t}\n\n\t\treturn submodel\n\t},\n\n\t[_validate](obj, path, errors, stack, shouldCast) {\n\t\tif (isObject(obj)) {\n\t\t\tlet def = this.definition\n\t\t\tcheckDefinition(obj[_original] || obj, def, path, errors, stack, shouldCast)\n\t\t}\n\t\telse stackError(errors, this, obj, path)\n\n\t\tcheckAssertions(obj, this, path, errors)\n\t}\n})","import { _original, checkAssertions, checkDefinition, initModel, unstackErrors, SKIP_VALIDATE } from \"./object-model.js\"\nimport { has, isFunction, proxifyFn, proxifyModel } from \"./helpers.js\"\n\nexport const initListModel = (base, constructor, def, init, clone, mutators, otherTraps = {}) => {\n\n\tlet model = function (list = model.default, mode) {\n\t\tlist = init(list)\n\n\t\tif (mode === SKIP_VALIDATE || model.validate(list)) {\n\t\t\treturn proxifyModel(list, model, {\n\t\t\t\tget(l, key) {\n\t\t\t\t\tif (key === _original) return l\n\n\t\t\t\t\tlet val = l[key]\n\t\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\n\t\t\t\t\t\tif (has(mutators, key)) {\n\t\t\t\t\t\t\t// indexes of arguments to check def + cast\n\t\t\t\t\t\t\tlet [begin, end = args.length - 1, getArgDef] = mutators[key]\n\t\t\t\t\t\t\tfor (let i = begin; i <= end; i++) {\n\t\t\t\t\t\t\t\tlet argDef = getArgDef ? getArgDef(i) : model.definition\n\t\t\t\t\t\t\t\targs[i] = checkDefinition(\n\t\t\t\t\t\t\t\t\targs[i],\n\t\t\t\t\t\t\t\t\targDef,\n\t\t\t\t\t\t\t\t\t`${base.name}.${key} arguments[${i}]`,\n\t\t\t\t\t\t\t\t\tmodel.errors,\n\t\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (model.assertions.length > 0) {\n\t\t\t\t\t\t\t\tlet testingClone = clone(l)\n\t\t\t\t\t\t\t\tfn.apply(testingClone, args)\n\t\t\t\t\t\t\t\tcheckAssertions(testingClone, model, `after ${key} mutation`)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn fn.apply(l, args)\n\t\t\t\t\t}) : val\n\t\t\t\t},\n\t\t\t\t...otherTraps\n\t\t\t})\n\t\t}\n\t}\n\n\treturn initModel(model, constructor, def, base)\n}","import {\n\t_original, _validate, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, formatDefinition, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { extend } from \"./helpers.js\"\nimport { initListModel } from \"./list-model.js\"\n\nexport default function ArrayModel(initialDefinition) {\n\tlet model = initListModel(\n\t\tArray,\n\t\tArrayModel,\n\t\tinitialDefinition,\n\t\ta => Array.isArray(a) ? a.map(arg => cast(arg, model.definition)) : a,\n\t\ta => [...a],\n\t\t{\n\t\t\t\"copyWithin\": [],\n\t\t\t\"fill\": [0, 0],\n\t\t\t\"pop\": [],\n\t\t\t\"push\": [0],\n\t\t\t\"reverse\": [],\n\t\t\t\"shift\": [],\n\t\t\t\"sort\": [],\n\t\t\t\"splice\": [2],\n\t\t\t\"unshift\": [0]\n\t\t},\n\t\t{\n\t\t\tset(arr, key, val) {\n\t\t\t\treturn controlMutation(model, arr, key, val, (a, v) => a[key] = v, true)\n\t\t\t},\n\n\t\t\tdeleteProperty(arr, key) {\n\t\t\t\treturn controlMutation(model, arr, key, undefined, a => delete a[key])\n\t\t\t}\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(ArrayModel, Model, {\n\ttoString(stack) {\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](arr, path, errors, stack) {\n\t\tif (Array.isArray(arr))\n\t\t\t(arr[_original] || arr).forEach((a, i) => checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack))\n\t\telse stackError(errors, this, arr, path)\n\n\t\tcheckAssertions(arr, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})\n\nlet controlMutation = (model, array, key, value, applyMutation, canBeExtended) => {\n\tlet path = `Array[${key}]`\n\tlet isInDef = (+key >= 0 && (canBeExtended || key in array))\n\tif (isInDef) value = checkDefinition(value, model.definition, path, model.errors, [], true)\n\n\tlet testArray = [...array]\n\tapplyMutation(testArray)\n\tcheckAssertions(testArray, model, path)\n\tlet isSuccess = !unstackErrors(model)\n\tif (isSuccess) applyMutation(array, value)\n\treturn isSuccess\n}","import {\n\t_original, _validate, checkAssertions, checkDefinition, extendDefinition, extendModel,\n\tformat, formatDefinition, initModel, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { extend, isFunction, proxifyModel } from \"./helpers.js\"\n\n\nexport default function FunctionModel(...argsDef) {\n\n\tlet model = function (fn = model.default) {\n\t\tif (!model.validate(fn)) return\n\t\treturn proxifyModel(fn, model, {\n\t\t\tget(fn, key) {\n\t\t\t\treturn key === _original ? fn : fn[key]\n\t\t\t},\n\n\t\t\tapply(fn, ctx, args) {\n\t\t\t\tlet def = model.definition\n\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\n\t\t\t\t})\n\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\n\n\t\t\t\tlet result\n\t\t\t\tif (!model.errors.length) {\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\n\t\t\t\t\tif (\"return\" in def)\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\n\t\t\t\t}\n\t\t\t\tunstackErrors(model)\n\t\t\t\treturn result\n\t\t\t}\n\t\t})\n\t}\n\n\treturn initModel(model, FunctionModel, { arguments: argsDef }, Function)\n}\n\nextend(FunctionModel, Model, {\n\ttoString(stack = []) {\n\t\tlet out = `Function(${this.definition.arguments.map(\n\t\t\targDef => formatDefinition(argDef, [...stack])\n\t\t).join(\", \")})`\n\n\t\tif (\"return\" in this.definition) {\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\n\t\t}\n\t\treturn out\n\t},\n\n\treturn(def) {\n\t\tthis.definition.return = def\n\t\treturn this\n\t},\n\n\textend(newArgs, newReturns) {\n\t\tlet args = this.definition.arguments,\n\t\t\tmixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\n\t\t\tmixedReturns = extendDefinition(this.definition.return, newReturns)\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\n\t},\n\n\t[_validate](f, path, errors) {\n\t\tif (!isFunction(f)) stackError(errors, \"Function\", f, path)\n\t}\n})\n\nFunctionModel.prototype.assert(function numberOfArgs(args) {\n\treturn (args.length > this.definition.arguments.length) ? args : true\n}, function (args) {\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\n})","import {\n\t_validate, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, format, formatDefinition, Model, stackError\n} from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function MapModel(initialKeyDefinition, initialValueDefinition) {\n\tlet getDef = i => i === 0 ? model.definition.key : model.definition.value,\n\t\tmodel = initListModel(\n\t\t\tMap,\n\t\t\tMapModel,\n\t\t\t{ key: initialKeyDefinition, value: initialValueDefinition },\n\t\t\tit => isIterable(it) ? new Map([...it].map(pair => pair.map((x, i) => cast(x, getDef(i))))) : it,\n\t\t\tmap => new Map(map),\n\t\t\t{\n\t\t\t\t\"set\": [0, 1, getDef],\n\t\t\t\t\"delete\": [],\n\t\t\t\t\"clear\": []\n\t\t\t}\n\t\t)\n\n\treturn model\n}\n\nextend(MapModel, Model, {\n\ttoString(stack) {\n\t\treturn `Map of ${formatDefinition(this.definition.key, stack)} : ${formatDefinition(this.definition.value, stack)}`\n\t},\n\n\t[_validate](map, path, errors, stack) {\n\t\tif (is(Map, map)) {\n\t\t\tpath = path || 'Map'\n\t\t\tfor (let [key, value] of map) {\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, map, path)\n\n\t\tcheckAssertions(map, this, path, errors)\n\t},\n\n\textend(keyParts, valueParts) {\n\t\treturn extendModel(new MapModel(\n\t\t\textendDefinition(this.definition.key, keyParts),\n\t\t\textendDefinition(this.definition.value, valueParts)\n\t\t), this)\n\t}\n})","import {\n\t_validate, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, formatDefinition, Model, stackError\n} from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function SetModel(initialDefinition) {\n\tlet model = initListModel(\n\t\tSet,\n\t\tSetModel,\n\t\tinitialDefinition,\n\t\tit => isIterable(it) ? new Set([...it].map(val => cast(val, model.definition))) : it,\n\t\tset => new Set(set),\n\t\t{\n\t\t\t\"add\": [0, 0],\n\t\t\t\"delete\": [],\n\t\t\t\"clear\": []\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(SetModel, Model, {\n\ttoString(stack) {\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](set, path, errors, stack) {\n\t\tif (is(Set, set)) {\n\t\t\tfor (let item of set.values()) {\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, set, path)\n\t\tcheckAssertions(set, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})"],"names":["getProto","Object","getPrototypeOf","setProto","setPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isFunction","f","isObject","isPlainObject","prototype","isIterable","x","Symbol","iterator","proxifyFn","fn","apply","Proxy","proxifyModel","val","model","traps","merge","target","src","key","define","value","enumerable","defineProperty","writable","configurable","extend","child","parent","props","assign","create","constructor","_validate","_original","SKIP_VALIDATE","initModel","def","base","setConstructor","definition","assertions","name","extendModel","newProps","push","stackError","errors","expected","received","path","message","unstackErrors","collector","errorCollector","nbErrors","length","map","err","concat","d","format","join","toString","call","match","bettertypeof","isModelInstance","i","Model","parseDefinition","keys","Array","isArray","undefined","formatDefinition","stack","parts","extendDefinition","newParts","reduce","ext","filter","index","self","indexOf","checkDefinition","shouldCast","indexFound","cast","formatPath","some","part","checkDefinitionPart","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","slice","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","msg","defNode","BasicModel","suitableModels","console","warn","getProxy","[object Object]","Reflect","get","defPart","ctx","args","grantPrivateAccess","set","deleteProperty","ownKeys","descriptor","params","ObjectModel","default","validate","mode","this","parentClass","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","proto","defaults","newAssertions","submodel","defaultTo","initListModel","init","clone","mutators","otherTraps","list","l","begin","end","getArgDef","argDef","testingClone","ArrayModel","initialDefinition","a","arg","copyWithin","fill","pop","reverse","shift","sort","splice","arr","v","forEach","array","canBeExtended","testArray","isSuccess","FunctionModel","argsDef","arguments","return","Function","MapModel","initialKeyDefinition","initialValueDefinition","getDef","it","pair","delete","clear","SetModel","add","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","keyParts","valueParts","values"],"mappings":"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"}