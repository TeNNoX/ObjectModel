{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/list-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\n\tgetProto = Object.getPrototypeOf,\n\tsetProto = Object.setPrototypeOf,\n\n\thas = (o, prop) => o.hasOwnProperty(prop),\n\tis = (Constructor, obj) => obj instanceof Constructor,\n\tisFunction = f => typeof f === \"function\",\n\tisObject = o => typeof o === \"object\",\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\n\tisIterable = x => x && isFunction(x[Symbol.iterator]),\n\n\tproxifyFn = (fn, apply) => new Proxy(fn, { apply }),\n\tproxifyModel = (val, model, traps) => new Proxy(val, Object.assign({ getPrototypeOf: () => model.prototype }, traps)),\n\n\tmerge = (target, src = {}) => {\n\t\tfor (let key in src) {\n\t\t\tif (isPlainObject(src[key])) {\n\t\t\t\tlet o = {}\n\t\t\t\tmerge(o, target[key])\n\t\t\t\tmerge(o, src[key])\n\t\t\t\ttarget[key] = o\n\t\t\t} else {\n\t\t\t\ttarget[key] = src[key]\n\t\t\t}\n\t\t}\n\t\treturn target\n\t},\n\n\tdefine = (obj, key, value, enumerable = false) => {\n\t\tObject.defineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\n\t},\n\n\tsetConstructor = (model, constructor) => {\n\t\tsetProto(model, constructor.prototype)\n\t\tdefine(model, \"constructor\", constructor)\n\t},\n\n\textend = (child, parent, props) => {\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\n\t\t\tconstructor: {\n\t\t\t\tvalue: child,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t}\n\t\t}), props)\n\t\tsetProto(child, parent)\n\t}","import {\n\tbettertypeof, define, extend, getProto, has, is, isFunction, isObject, isPlainObject,\n\tmerge, proxifyFn, setConstructor\n} from \"./helpers.js\"\n\nexport const\n\t_check = Symbol(),\n\t_validate = Symbol(),\n\t_original = Symbol(), // used to bypass proxy\n\n\tSKIP_VALIDATE = Symbol(), // used to skip validation at instanciation for perf\n\n\tinitModel = (model, constructor, def, base) => {\n\t\tif (base) extend(model, base)\n\t\tsetConstructor(model, constructor)\n\t\tmodel.definition = def\n\t\tmodel.assertions = [...model.assertions]\n\t\tdefine(model, \"errors\", [])\n\t\tdelete model.name\n\t\treturn model\n\t},\n\n\textendModel = (child, parent, newProps) => {\n\t\textend(child, parent, newProps)\n\t\tchild.assertions.push(...parent.assertions)\n\t\treturn child\n\t},\n\n\tstackError = (errors, expected, received, path, message) => {\n\t\terrors.push({ expected, received, path, message })\n\t},\n\n\tunstackErrors = (model, collector = model.errorCollector) => {\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors > 0) {\n\t\t\tlet errors = model.errors.map(err => {\n\t\t\t\tif (!err.message) {\n\t\t\t\t\tlet def = [].concat(err.expected)\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\n\t\t\t\t}\n\t\t\t\treturn err\n\t\t\t})\n\n\t\t\tmodel.errors.length = 0\n\t\t\tcollector.call(model, errors) // throw all errors collected\n\t\t}\n\t\treturn nbErrors\n\t},\n\n\tisModelInstance = i => i && is(Model, getProto(i).constructor),\n\n\tparseDefinition = (def) => {\n\t\tif (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => { def[key] = parseDefinition(def[key]) })\n\t\t}\n\t\telse if (!Array.isArray(def)) return [def]\n\t\telse if (def.length === 1) return [...def, undefined, null]\n\n\t\treturn def\n\t},\n\n\tformatDefinition = (def, stack) => {\n\t\tlet parts = parseDefinition(def).map(d => format(d, stack))\n\t\treturn parts.length > 1 ? `(${parts.join(\" or \")})` : parts[0]\n\t},\n\n\textendDefinition = (def, newParts = []) => {\n\t\tnewParts = [].concat(newParts)\n\t\tif (newParts.length > 0) {\n\t\t\tdef = newParts\n\t\t\t\t.reduce((def, ext) => def.concat(ext), [].concat(def)) // clone to lose ref\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\n\t\t}\n\n\t\treturn def\n\t},\n\n\tcheckDefinition = (obj, def, path, errors, stack, shouldCast) => {\n\t\tlet indexFound = stack.indexOf(def)\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\n\t\t\treturn obj // if found twice in call stack, cycle detected, skip validation\n\n\t\tif (is(Model, def)) {\n\t\t\tif (shouldCast) obj = cast(obj, def)\n\t\t\tdef[_check](obj, path, errors, stack.concat(def))\n\t\t}\n\t\telse if (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => {\n\t\t\t\tlet val = obj ? obj[key] : undefined\n\t\t\t\tcheckDefinition(val, def[key], formatPath(path, key), errors, stack, shouldCast)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tlet pdef = parseDefinition(def)\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack))) {\n\t\t\t\tif (shouldCast) obj = cast(obj, def)\n\t\t\t\treturn obj\n\t\t\t}\n\n\t\t\tstackError(errors, def, obj, path)\n\t\t}\n\n\t\treturn obj\n\t},\n\n\tcheckDefinitionPart = (obj, def, path, stack, shouldCast) => {\n\t\tif (obj == null) return obj === def\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\n\t\t\tlet errors = []\n\t\t\tcheckDefinition(obj, def, path, errors, stack, shouldCast)\n\t\t\treturn !errors.length\n\t\t}\n\t\tif (is(RegExp, def)) return def.test(obj)\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\n\t\treturn obj === def\n\t\t\t|| (isFunction(def) && is(def, obj))\n\t\t\t|| obj.constructor === def\n\t},\n\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\n\t\tfor (let assertion of model.assertions) {\n\t\t\tlet result\n\t\t\ttry {\n\t\t\t\tresult = assertion.call(model, obj)\n\t\t\t} catch (err) {\n\t\t\t\tresult = err\n\t\t\t}\n\t\t\tif (result !== true) {\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\n\t\t\t\t\t+ `for ${path ? path + \" =\" : \"value\"} ${format(value)}`\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\n\t\t\t}\n\t\t}\n\t},\n\n\tformat = (obj, stack = []) => {\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\n\t\tif (obj === null || obj === undefined) return String(obj)\n\t\tif (typeof obj === \"string\") return `\"${obj}\"`\n\t\tif (is(Model, obj)) return obj.toString(stack)\n\n\t\tstack.unshift(obj)\n\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\n\t\tif (Array.isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\n\t\tif (obj && isObject(obj)) {\n\t\t\tlet props = Object.keys(obj),\n\t\t\t\tindent = '\\t'.repeat(stack.length)\n\t\t\treturn `{${props.map(\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], [...stack])}`\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\n\t\t}\n\n\t\treturn String(obj)\n\t},\n\n\tformatPath = (path, key) => path ? path + '.' + key : key,\n\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\n\t\tlet newPath = formatPath(path, key),\n\t\t\tisPrivate = model.conventionForPrivate(key),\n\t\t\tisConstant = model.conventionForConstant(key),\n\t\t\tisOwnProperty = has(o, key),\n\t\t\tinitialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\n\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\n\n\t\tapplyMutation(newPath)\n\t\tif (has(def, key)) checkDefinition(o[key], def[key], newPath, model.errors, [])\n\t\tcheckAssertions(o, model, newPath)\n\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors) {\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\n\n\t\t\tunstackErrors(model)\n\t\t}\n\n\t\treturn !nbErrors\n\t},\n\n\tcannot = (msg, model) => {\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\n\t},\n\n\tcast = (obj, defNode = []) => {\n\t\tif (!obj || isPlainObject(defNode) || is(BasicModel, defNode) || isModelInstance(obj))\n\t\t\treturn obj // no value or not leaf or already a model instance\n\n\t\tlet def = parseDefinition(defNode),\n\t\t\tsuitableModels = []\n\n\t\tfor (let part of def) {\n\t\t\tif (is(Model, part) && !is(BasicModel, part) && part.test(obj))\n\t\t\t\tsuitableModels.push(part)\n\t\t}\n\n\t\tif (suitableModels.length === 1) {\n\t\t\t// automatically cast to suitable model when explicit (autocasting)\n\t\t\treturn new suitableModels[0](obj, SKIP_VALIDATE)\n\t\t}\n\n\t\tif (suitableModels.length > 1)\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\n\n\t\treturn obj\n\t},\n\n\tgetProxy = (model, obj, def, path, privateAccess) => {\n\t\tif (!isPlainObject(def)) return cast(obj, def)\n\n\t\tconst grantPrivateAccess = f => proxifyFn(f, (fn, ctx, args) => {\n\t\t\tprivateAccess = true\n\t\t\tlet result = Reflect.apply(fn, ctx, args)\n\t\t\tprivateAccess = false\n\t\t\treturn result\n\t\t})\n\n\t\treturn new Proxy(obj, {\n\n\t\t\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\n\n\t\t\tget(o, key) {\n\t\t\t\tif (key === _original) return o\n\n\t\t\t\tif (typeof key !== \"string\") return Reflect.get(o, key)\n\n\t\t\t\tlet newPath = formatPath(path, key),\n\t\t\t\t\tdefPart = def[key]\n\n\t\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\n\t\t\t\t\tcannot(`access to private property ${newPath}`, model)\n\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\n\t\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(o[key]) && key !== \"constructor\" && !privateAccess) {\n\t\t\t\t\treturn grantPrivateAccess(o[key])\n\t\t\t\t}\n\n\t\t\t\tif (isPlainObject(defPart) && !o[key]) {\n\t\t\t\t\to[key] = {} // null-safe traversal\n\t\t\t\t}\n\n\t\t\t\treturn getProxy(model, o[key], defPart, newPath, privateAccess)\n\t\t\t},\n\n\t\t\tset(o, key, val) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\n\t\t\t\t\tnewPath => Reflect.set(o, key, getProxy(model, val, def[key], newPath))\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tdeleteProperty(o, key) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\n\t\t\t},\n\n\t\t\tdefineProperty(o, key, args) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\n\t\t\t},\n\n\t\t\thas(o, key) {\n\t\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\n\t\t\t},\n\n\t\t\townKeys(o) {\n\t\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\n\t\t\t},\n\n\t\t\tgetOwnPropertyDescriptor(o, key) {\n\t\t\t\tlet descriptor\n\t\t\t\tif (!model.conventionForPrivate(key)) {\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key)\n\t\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key]\n\t\t\t\t}\n\n\t\t\t\treturn descriptor\n\t\t\t}\n\t\t})\n\t}\n\n\nexport function Model(def, params) {\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\n}\n\nObject.assign(Model.prototype, {\n\tname: \"Model\",\n\tassertions: [],\n\n\tconventionForConstant: key => key.toUpperCase() === key,\n\tconventionForPrivate: key => key[0] === \"_\",\n\n\ttoString(stack) {\n\t\treturn formatDefinition(this.definition, stack)\n\t},\n\n\tas(name) {\n\t\tdefine(this, \"name\", name)\n\t\treturn this\n\t},\n\n\tdefaultTo(val) {\n\t\tthis.default = val\n\t\treturn this\n\t},\n\n\t[_check](obj, path, errors, stack) {\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\n\t\tcheckAssertions(obj, this, path, errors)\n\t},\n\n\t[_validate](obj) {\n\t\tthis[_check](obj, null, this.errors, [], true);\n\t\treturn !unstackErrors(this)\n\t},\n\n\ttest(obj, errorCollector) {\n\t\tlet model = this\n\t\twhile (!has(model, \"errorCollector\")) {\n\t\t\tmodel = getProto(model)\n\t\t}\n\n\t\tlet initialErrorCollector = model.errorCollector,\n\t\t\tfailed\n\n\t\tmodel.errorCollector = errors => {\n\t\t\tfailed = true\n\t\t\tif (errorCollector) errorCollector.call(this, errors)\n\t\t}\n\n\t\tnew this(obj) // may trigger errorCollector\n\n\t\tmodel.errorCollector = initialErrorCollector\n\t\treturn !failed\n\t},\n\n\terrorCollector(errors) {\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\n\t\tthrow e\n\t},\n\n\tassert(assertion, description = format(assertion)) {\n\t\tdefine(assertion, \"description\", description)\n\t\tthis.assertions = this.assertions.concat(assertion)\n\t\treturn this\n\t}\n})\n\n\nexport function BasicModel(def) {\n\tlet model = function (val = model.default) {\n\t\treturn model[_validate](val) ? val : undefined\n\t}\n\n\treturn initModel(model, BasicModel, def)\n}\n\nextend(BasicModel, Model, {\n\textend(...newParts) {\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\n\t\tfor (let part of newParts) {\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\n\t\t}\n\n\t\treturn child\n\t}\n})\n\n\nexport function ObjectModel(def) {\n\tlet model = function (obj, mode) {\n\t\tif (!is(model, this)) return new model(obj)\n\t\tif (is(model, obj)) return obj\n\n\t\tif (!is(Object, obj) && obj !== undefined) {\n\t\t\tstackError(model.errors, Object, obj)\n\t\t}\n\n\t\tmerge(this, model.default)\n\t\tif (model.parentClass) merge(obj, new model.parentClass(obj))\n\t\tmerge(this, obj)\n\n\t\tif (mode !== SKIP_VALIDATE) model[_validate](this)\n\n\t\treturn getProxy(model, this, model.definition)\n\t}\n\n\treturn initModel(model, ObjectModel, def, Object)\n}\n\nextend(ObjectModel, Model, {\n\tdefaultTo(obj) {\n\t\tlet def = this.definition\n\t\tfor (let key in obj) {\n\t\t\tif (has(def, key)) {\n\t\t\t\tobj[key] = checkDefinition(obj[key], def[key], key, this.errors, [], true)\n\t\t\t}\n\t\t}\n\t\tunstackErrors(this)\n\t\tthis.default = obj;\n\t\treturn this\n\t},\n\n\ttoString(stack) {\n\t\treturn format(this.definition, stack)\n\t},\n\n\textend(...newParts) {\n\t\tlet definition = { ...this.definition },\n\t\t\tproto = { ...this.prototype },\n\t\t\tdefaults = { ...this.default },\n\t\t\tnewAssertions = []\n\n\t\tfor (let part of newParts) {\n\t\t\tif (is(Model, part)) {\n\t\t\t\tmerge(definition, part.definition)\n\t\t\t\tmerge(defaults, part.default)\n\t\t\t\tnewAssertions.push(...part.assertions)\n\t\t\t}\n\t\t\tif (isFunction(part)) merge(proto, part.prototype)\n\t\t\tif (isObject(part)) merge(definition, part)\n\t\t}\n\n\t\tlet submodel = extendModel(new ObjectModel(definition), this, proto).defaultTo(defaults)\n\t\tsubmodel.assertions = [...this.assertions, ...newAssertions]\n\n\t\tif (getProto(this) !== ObjectModel.prototype) { // extended class\n\t\t\tsubmodel.parentClass = this\n\t\t}\n\n\t\treturn submodel\n\t},\n\n\t[_check](obj, path, errors, stack, shouldCast) {\n\t\tif (isObject(obj)) {\n\t\t\tlet def = this.definition\n\t\t\tcheckDefinition(obj[_original] || obj, def, path, errors, stack, shouldCast)\n\t\t}\n\t\telse stackError(errors, this, obj, path)\n\n\t\tcheckAssertions(obj, this, path, errors)\n\t}\n})","import { _original, _validate, checkAssertions, checkDefinition, initModel, unstackErrors, SKIP_VALIDATE } from \"./object-model.js\"\nimport { has, isFunction, proxifyFn, proxifyModel } from \"./helpers.js\"\n\nexport const initListModel = (base, constructor, def, init, clone, mutators, otherTraps = {}) => {\n\n\tlet model = function (list = model.default, mode) {\n\t\tlist = init(list)\n\n\t\tif (mode === SKIP_VALIDATE || model[_validate](list)) {\n\t\t\treturn proxifyModel(list, model, Object.assign({\n\t\t\t\tget(l, key) {\n\t\t\t\t\tif (key === _original) return l\n\n\t\t\t\t\tlet val = l[key]\n\t\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\n\t\t\t\t\t\tif (has(mutators, key)) {\n\t\t\t\t\t\t\t// indexes of arguments to check def + cast\n\t\t\t\t\t\t\tlet [begin, end = args.length - 1, getArgDef] = mutators[key]\n\t\t\t\t\t\t\tfor (let i = begin; i <= end; i++) {\n\t\t\t\t\t\t\t\tlet argDef = getArgDef ? getArgDef(i) : model.definition\n\t\t\t\t\t\t\t\targs[i] = checkDefinition(\n\t\t\t\t\t\t\t\t\targs[i],\n\t\t\t\t\t\t\t\t\targDef,\n\t\t\t\t\t\t\t\t\t`${base.name}.${key} arguments[${i}]`,\n\t\t\t\t\t\t\t\t\tmodel.errors,\n\t\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (model.assertions.length > 0) {\n\t\t\t\t\t\t\t\tlet testingClone = clone(l)\n\t\t\t\t\t\t\t\tfn.apply(testingClone, args)\n\t\t\t\t\t\t\t\tcheckAssertions(testingClone, model, `after ${key} mutation`)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn fn.apply(l, args)\n\t\t\t\t\t}) : val\n\t\t\t\t}\n\t\t\t}, otherTraps))\n\t\t}\n\t}\n\n\treturn initModel(model, constructor, def, base)\n}","import {\n\t_original, _check, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, formatDefinition, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { extend } from \"./helpers.js\"\nimport { initListModel } from \"./list-model.js\"\n\nexport default function ArrayModel(initialDefinition) {\n\tlet model = initListModel(\n\t\tArray,\n\t\tArrayModel,\n\t\tinitialDefinition,\n\t\ta => Array.isArray(a) ? a.map(arg => cast(arg, model.definition)) : a,\n\t\ta => [...a],\n\t\t{\n\t\t\t\"copyWithin\": [],\n\t\t\t\"fill\": [0, 0],\n\t\t\t\"pop\": [],\n\t\t\t\"push\": [0],\n\t\t\t\"reverse\": [],\n\t\t\t\"shift\": [],\n\t\t\t\"sort\": [],\n\t\t\t\"splice\": [2],\n\t\t\t\"unshift\": [0]\n\t\t},\n\t\t{\n\t\t\tset(arr, key, val) {\n\t\t\t\treturn controlMutation(model, arr, key, val, (a, v) => a[key] = v, true)\n\t\t\t},\n\n\t\t\tdeleteProperty(arr, key) {\n\t\t\t\treturn controlMutation(model, arr, key, undefined, a => delete a[key])\n\t\t\t}\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(ArrayModel, Model, {\n\ttoString(stack) {\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\n\t},\n\n\t[_check](arr, path, errors, stack) {\n\t\tif (Array.isArray(arr))\n\t\t\t(arr[_original] || arr).forEach((a, i) => checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack))\n\t\telse stackError(errors, this, arr, path)\n\n\t\tcheckAssertions(arr, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})\n\nlet controlMutation = (model, array, key, value, applyMutation, canBeExtended) => {\n\tlet path = `Array[${key}]`\n\tlet isInDef = (+key >= 0 && (canBeExtended || key in array))\n\tif (isInDef) value = checkDefinition(value, model.definition, path, model.errors, [], true)\n\n\tlet testArray = [...array]\n\tapplyMutation(testArray)\n\tcheckAssertions(testArray, model, path)\n\tlet isSuccess = !unstackErrors(model)\n\tif (isSuccess) applyMutation(array, value)\n\treturn isSuccess\n}","import {\n\t_check, _original, _validate, checkAssertions, checkDefinition, extendDefinition, extendModel,\n\tformat, formatDefinition, initModel, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { extend, isFunction, proxifyModel } from \"./helpers.js\"\n\n\nexport default function FunctionModel(...argsDef) {\n\n\tlet model = function (fn = model.default) {\n\t\tif (model[_validate](fn)) {\n\t\t\treturn proxifyModel(fn, model, {\n\t\t\t\tget(fn, key) {\n\t\t\t\t\treturn key === _original ? fn : fn[key]\n\t\t\t\t},\n\n\t\t\t\tapply(fn, ctx, args) {\n\t\t\t\t\tlet def = model.definition\n\n\t\t\t\t\tdef.arguments.forEach((argDef, i) => {\n\t\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\n\t\t\t\t\t})\n\n\t\t\t\t\tcheckAssertions(args, model, \"arguments\")\n\n\t\t\t\t\tlet result\n\t\t\t\t\tif (!model.errors.length) {\n\t\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\n\t\t\t\t\t\tif (\"return\" in def)\n\t\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\n\t\t\t\t\t}\n\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\treturn result\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\treturn initModel(model, FunctionModel, { arguments: argsDef }, Function)\n}\n\nextend(FunctionModel, Model, {\n\ttoString(stack = []) {\n\t\tlet out = `Function(${this.definition.arguments.map(\n\t\t\targDef => formatDefinition(argDef, [...stack])\n\t\t).join(\", \")})`\n\n\t\tif (\"return\" in this.definition) {\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\n\t\t}\n\t\treturn out\n\t},\n\n\treturn(def) {\n\t\tthis.definition.return = def\n\t\treturn this\n\t},\n\n\textend(newArgs, newReturns) {\n\t\tlet args = this.definition.arguments,\n\t\t\tmixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\n\t\t\tmixedReturns = extendDefinition(this.definition.return, newReturns)\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\n\t},\n\n\t[_check](f, path, errors) {\n\t\tif (!isFunction(f)) stackError(errors, \"Function\", f, path)\n\t}\n})\n\nFunctionModel.prototype.assert(function numberOfArgs(args) {\n\treturn (args.length > this.definition.arguments.length) ? args : true\n}, function (args) {\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\n})","import {\n\t_check, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, format, formatDefinition, Model, stackError\n} from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function MapModel(initialKeyDefinition, initialValueDefinition) {\n\tlet getDef = i => i === 0 ? model.definition.key : model.definition.value,\n\t\tmodel = initListModel(\n\t\t\tMap,\n\t\t\tMapModel,\n\t\t\t{ key: initialKeyDefinition, value: initialValueDefinition },\n\t\t\tit => isIterable(it) ? new Map([...it].map(pair => pair.map((x, i) => cast(x, getDef(i))))) : it,\n\t\t\tmap => new Map(map),\n\t\t\t{\n\t\t\t\t\"set\": [0, 1, getDef],\n\t\t\t\t\"delete\": [],\n\t\t\t\t\"clear\": []\n\t\t\t}\n\t\t)\n\n\treturn model\n}\n\nextend(MapModel, Model, {\n\ttoString(stack) {\n\t\treturn `Map of ${formatDefinition(this.definition.key, stack)} : ${formatDefinition(this.definition.value, stack)}`\n\t},\n\n\t[_check](map, path, errors, stack) {\n\t\tif (is(Map, map)) {\n\t\t\tpath = path || 'Map'\n\t\t\tfor (let [key, value] of map) {\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, map, path)\n\n\t\tcheckAssertions(map, this, path, errors)\n\t},\n\n\textend(keyParts, valueParts) {\n\t\treturn extendModel(new MapModel(\n\t\t\textendDefinition(this.definition.key, keyParts),\n\t\t\textendDefinition(this.definition.value, valueParts)\n\t\t), this)\n\t}\n})","import {\n\t_check, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, formatDefinition, Model, stackError\n} from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function SetModel(initialDefinition) {\n\tlet model = initListModel(\n\t\tSet,\n\t\tSetModel,\n\t\tinitialDefinition,\n\t\tit => isIterable(it) ? new Set([...it].map(val => cast(val, model.definition))) : it,\n\t\tset => new Set(set),\n\t\t{\n\t\t\t\"add\": [0, 0],\n\t\t\t\"delete\": [],\n\t\t\t\"clear\": []\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(SetModel, Model, {\n\ttoString(stack) {\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\n\t},\n\n\t[_check](set, path, errors, stack) {\n\t\tif (is(Set, set)) {\n\t\t\tfor (let item of set.values()) {\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, set, path)\n\t\tcheckAssertions(set, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})"],"names":["getProto","Object","getPrototypeOf","setProto","setPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isFunction","f","isObject","isPlainObject","prototype","isIterable","x","Symbol","iterator","proxifyFn","fn","apply","Proxy","proxifyModel","val","model","traps","assign","merge","target","src","key","define","value","enumerable","defineProperty","writable","configurable","extend","child","parent","props","create","constructor","_check","_validate","_original","SKIP_VALIDATE","initModel","def","base","setConstructor","definition","assertions","name","extendModel","newProps","push","stackError","errors","expected","received","path","message","unstackErrors","collector","errorCollector","nbErrors","length","map","err","concat","d","format","join","toString","call","match","bettertypeof","isModelInstance","i","Model","parseDefinition","keys","Array","isArray","undefined","formatDefinition","stack","parts","extendDefinition","newParts","reduce","ext","filter","index","self","indexOf","checkDefinition","shouldCast","indexFound","cast","formatPath","some","part","checkDefinitionPart","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","slice","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","msg","defNode","BasicModel","suitableModels","console","warn","getProxy","[object Object]","Reflect","get","defPart","ctx","args","grantPrivateAccess","set","deleteProperty","ownKeys","descriptor","params","ObjectModel","default","mode","this","parentClass","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","proto","defaults","newAssertions","submodel","defaultTo","initListModel","init","clone","mutators","otherTraps","list","l","begin","end","getArgDef","argDef","testingClone","ArrayModel","initialDefinition","a","arg","copyWithin","fill","pop","reverse","shift","sort","splice","arr","v","forEach","array","canBeExtended","testArray","isSuccess","FunctionModel","argsDef","arguments","return","Function","MapModel","initialKeyDefinition","initialValueDefinition","getDef","it","pair","delete","clear","SetModel","add","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","keyParts","valueParts","values"],"mappings":"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"}