{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\r\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\r\n\tgetProto     = x => Object.getPrototypeOf(x),\r\n\r\n\thas           = (o, prop) => o.hasOwnProperty(prop),\r\n\tis            = (Constructor, obj) => obj instanceof Constructor,\r\n\tisString      = s => typeof s === \"string\",\r\n\tisFunction    = f => typeof f === \"function\",\r\n\tisObject      = o => typeof o === \"object\",\r\n\tisArray       = a => Array.isArray(a),\r\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\r\n\r\n\tproxify      = (val, traps) => new Proxy(val, traps),\r\n\tproxifyFn    = (fn, apply) => proxify(fn, {apply}),\r\n\tproxifyModel = (val, model, traps) => proxify(val, Object.assign({getPrototypeOf: () => model.prototype}, traps)),\r\n\r\n\tmapProps = (o, fn) => Object.keys(o).map(fn),\r\n\r\n\tmerge = (target, src = {}, deep) => {\r\n\t\tfor (let key in src) {\r\n\t\t\tif (deep && isPlainObject(src[key])) {\r\n\t\t\t\tlet o = {}\r\n\t\t\t\tmerge(o, target[key], deep)\r\n\t\t\t\tmerge(o, src[key], deep)\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tdefine = (obj, key, value, enumerable = false) => {\r\n\t\tObject.defineProperty(obj, key, {value, enumerable, writable: true, configurable: true})\r\n\t},\r\n\r\n\tsetConstructor = (model, constructor) => {\r\n\t\tObject.setPrototypeOf(model, constructor.prototype)\r\n\t\tdefine(model, \"constructor\", constructor)\r\n\t},\r\n\r\n\textend = (child, parent, props) => {\r\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\r\n\t\t\tconstructor: {\r\n\t\t\t\tvalue: child,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t}\r\n\t\t}), props)\r\n\t\tObject.setPrototypeOf(child, parent)\r\n\t}","import {bettertypeof, define, extend, getProto, has, is, isArray, isFunction, isObject, isPlainObject, isString, mapProps, merge, proxify, setConstructor} from \"./helpers.js\"\r\n\r\nexport const\r\n\t_constructor = Symbol(),\r\n\t_validate = Symbol(),\r\n\r\n\tinitModel = (model, def) => {\r\n\t\tmodel.definition = def\r\n\t\tmodel.assertions = [...model.assertions]\r\n\t\tdefine(model, \"errors\", [])\r\n\t\tdelete model.name;\r\n\t},\r\n\r\n\textendModel = (child, parent, newProps) => {\r\n\t\textend(child, parent, newProps)\r\n\t\tchild.assertions.push(...parent.assertions)\r\n\t\treturn child\r\n\t},\r\n\r\n\tstackError = (errors, expected, received, path, message) => {\r\n\t\terrors.push({expected, received, path, message})\r\n\t},\r\n\r\n\tunstackErrors = (model, errorCollector = model.errorCollector) => {\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors > 0) {\r\n\t\t\tlet errors = model.errors.map(err => {\r\n\t\t\t\tif (!err.message) {\r\n\t\t\t\t\tlet def = isArray(err.expected) ? err.expected : [err.expected]\r\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\r\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\r\n\t\t\t\t}\r\n\t\t\t\treturn err\r\n\t\t\t})\r\n\t\t\tmodel.errors = []\r\n\t\t\terrorCollector.call(model, errors) // throw all errors collected\r\n\t\t}\r\n\t\treturn nbErrors\r\n\t},\r\n\r\n\tisModelInstance = i => i && is(Model, getProto(i).constructor),\r\n\r\n\tparseDefinition = (def) => {\r\n\t\tif (isPlainObject(def)) {\r\n\t\t\tmapProps(def, key => { def[key] = parseDefinition(def[key]) })\r\n\t\t}\r\n\t\telse if (!isArray(def)) return [def]\r\n\t\telse if (def.length === 1) return [...def, undefined, null]\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tformatDefinition = (def, stack) => parseDefinition(def).map(d => format(d, stack)).join(\" or \"),\r\n\r\n\textendDefinition = (def, newParts = []) => {\r\n\t\tif (!isArray(newParts)) newParts = [newParts]\r\n\t\tif (newParts.length > 0) {\r\n\t\t\tdef = newParts\r\n\t\t\t\t.reduce((def, ext) => def.concat(ext), isArray(def) ? def.slice() : [def]) // clone to lose ref\r\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\r\n\t\t}\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tcheckDefinition = (obj, def, path, errors, stack) => {\r\n\t\tlet indexFound = stack.indexOf(def)\r\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\r\n\t\t\treturn obj //if found twice in call stack, cycle detected, skip validation\r\n\r\n\t\tobj = cast(obj, def)\r\n\r\n\t\tif (is(Model, def)) {\r\n\t\t\tdef[_validate](obj, path, errors, stack.concat(def))\r\n\t\t}\r\n\t\telse if (isPlainObject(def)) {\r\n\t\t\tmapProps(def, key => {\r\n\t\t\t\tcheckDefinition(obj ? obj[key] : undefined, def[key], formatPath(path, key), errors, stack)\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet pdef = parseDefinition(def)\r\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack)))\r\n\t\t\t\treturn obj\r\n\r\n\t\t\tstackError(errors, def, obj, path)\r\n\t\t}\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\tcheckDefinitionPart = (obj, def, path, stack) => {\r\n\t\tif (obj == null) return obj === def\r\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\r\n\t\t\tlet errors = []\r\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\r\n\t\t\treturn !errors.length\r\n\t\t}\r\n\t\tif (is(RegExp, def)) return def.test(obj)\r\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\t\treturn obj === def\r\n\t\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t\t|| obj.constructor === def\r\n\t},\r\n\r\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\r\n\t\tfor (let assertion of model.assertions) {\r\n\t\t\tlet result\r\n\t\t\ttry {\r\n\t\t\t\tresult = assertion.call(model, obj)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tresult = err\r\n\t\t\t}\r\n\t\t\tif (result !== true) {\r\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\r\n\t\t\t\t\t+`for ${path ? path+\" =\" : \"value\"} ${format(value)}`\r\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tformat = (obj, stack = []) => {\r\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\r\n\t\tif (obj === null || obj === undefined) return String(obj)\r\n\t\tif (isString(obj)) return `\"${obj}\"`\r\n\t\tif (is(Model, obj)) return obj.toString(stack)\r\n\r\n\t\tstack.unshift(obj)\r\n\r\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\r\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\r\n\t\tif (isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\r\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\r\n\t\tif (obj && isObject(obj)) {\r\n\t\t\tlet props  = Object.keys(obj),\r\n\t\t\t    indent = '\\t'.repeat(stack.length)\r\n\t\t\treturn `{${props.map(\r\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], stack.slice())}`\r\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\r\n\t\t}\r\n\r\n\t\treturn String(obj)\r\n\t},\r\n\r\n\tformatPath = (path, key) => path ? path + '.' + key : key,\r\n\r\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\r\n\t\tlet newPath       = formatPath(path, key),\r\n\t\t    isPrivate     = model.conventionForPrivate(key),\r\n\t\t    isConstant    = model.conventionForConstant(key),\r\n\t\t    isOwnProperty = has(o, key),\r\n\t\t    initialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\r\n\r\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\r\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} ${key}`, model)\r\n\r\n\t\tlet isInDefinition = has(def, key);\r\n\t\tif (isInDefinition || !model.sealed) {\r\n\t\t\tapplyMutation(newPath)\r\n\t\t\tisInDefinition && checkDefinition(o[key], def[key], newPath, model.errors, [])\r\n\t\t\tcheckAssertions(o, model, newPath)\r\n\t\t}\r\n\t\telse rejectUndeclaredProp(newPath, o[key], model.errors)\r\n\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors) {\r\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\r\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\r\n\r\n\t\t\tunstackErrors(model)\r\n\t\t}\r\n\r\n\t\treturn !nbErrors\r\n\t},\r\n\r\n\tcannot = (msg, model) => {\r\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\r\n\t},\r\n\r\n\trejectUndeclaredProp = (path, received, errors) => {\r\n\t\terrors.push({\r\n\t\t\tpath,\r\n\t\t\treceived,\r\n\t\t\tmessage: `property ${path} is not declared in the sealed model definition`\r\n\t\t})\r\n\t},\r\n\r\n\tcast = (obj, defNode = []) => {\r\n\t\tif (!obj || isPlainObject(defNode) || isModelInstance(obj))\r\n\t\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\t\tlet def = parseDefinition(defNode),\r\n\t\t    suitableModels = []\r\n\r\n\t\tfor (let part of def) {\r\n\t\t\tif (is(Model, part) && part.test(obj))\r\n\t\t\t\tsuitableModels.push(part)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length === 1){\r\n\t\t\t// automatically cast to suitable model when explicit (duck typing)\r\n\t\t\tlet duck = suitableModels[0];\r\n\t\t\treturn duck instanceof ObjectModel ? new duck(obj) : duck(obj)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length > 1)\r\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\tcheckUndeclaredProps = (obj, def, errors, path) => {\r\n\t\tmapProps(obj, key => {\r\n\t\t\tlet val = obj[key],\r\n\t\t\t    subpath = formatPath(path, key)\r\n\t\t\tif(!has(def, key)) rejectUndeclaredProp(subpath, val, errors)\r\n\t\t\telse if(isPlainObject(val))\tcheckUndeclaredProps(val, def[key], errors, subpath)\r\n\t\t})\r\n\t},\r\n\r\n\tgetProxy = (model, obj, def, path, privateAccess) => !isPlainObject(def) ? cast(obj, def) : proxify(obj, {\r\n\r\n\t\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\r\n\r\n\t\tget(o, key) {\r\n\t\t\tif (!isString(key))\r\n\t\t\t\treturn Reflect.get(o, key)\r\n\r\n\t\t\tlet newPath = formatPath(path, key),\r\n\t\t\t    defPart = def[key];\r\n\r\n\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\r\n\t\t\t\tcannot(`access to private property ${newPath}`, model)\r\n\t\t\t\tunstackErrors(model)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\r\n\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\r\n\t\t\t}\r\n\r\n\t\t\tif (isFunction(o[key])){\r\n\t\t\t\tprivateAccess = true;\r\n\t\t\t}\r\n\r\n\t\t\tif(isPlainObject(defPart) && !o[key]){\r\n\t\t\t\to[key] = {} // null-safe traversal\r\n\t\t\t}\r\n\r\n\t\t\treturn getProxy(model, o[key], defPart, newPath, privateAccess)\r\n\t\t},\r\n\r\n\t\tset(o, key, val) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\r\n\t\t\t\tnewPath => Reflect.set(o, key, getProxy(model, val, def[key], newPath))\r\n\t\t\t)\r\n\t\t},\r\n\r\n\t\tdeleteProperty(o, key) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\r\n\t\t},\r\n\r\n\t\tdefineProperty(o, key, args){\r\n\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\r\n\t\t},\r\n\r\n\t\thas(o, key){\r\n\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t\t},\r\n\r\n\t\townKeys(o){\r\n\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\r\n\t\t},\r\n\r\n\t\tgetOwnPropertyDescriptor(o, key){\r\n\t\t\tlet descriptor;\r\n\t\t\tif (!model.conventionForPrivate(key)) {\r\n\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn descriptor\r\n\t\t}\r\n\t})\r\n\r\n\r\nexport function Model(def, params) {\r\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\r\n}\r\n\r\nObject.assign(Model.prototype, {\r\n\tname: \"Model\",\r\n\tassertions: [],\r\n\r\n\tconventionForConstant: key => key.toUpperCase() === key,\r\n\tconventionForPrivate: key => key[0] === \"_\",\r\n\r\n\ttoString(stack){\r\n\t\treturn formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\tas(name){\r\n\t\tdefine(this, \"name\", name);\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val){\r\n\t\tthis.default = val\r\n\t\treturn this\r\n\t},\r\n\r\n\t[_validate](obj, path, errors, stack){\r\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t},\r\n\r\n\tvalidate(obj, errorCollector){\r\n\t\tthis[_validate](obj, null, this.errors, [])\r\n\t\treturn !unstackErrors(this, errorCollector)\r\n\t},\r\n\r\n\ttest(obj){\r\n\t\tlet model = this;\r\n\t\twhile(!has(model, \"errorCollector\")){\r\n\t\t\tmodel = getProto(model)\r\n\t\t}\r\n\r\n\t\tlet initialErrorCollector = model.errorCollector,\r\n\t\t    failed;\r\n\r\n\t\tmodel.errorCollector = () => {\r\n\t\t\tfailed = true\r\n\t\t}\r\n\r\n\t\tnew this(obj) // may trigger this.errorCollector\r\n\r\n\t\tmodel.errorCollector = initialErrorCollector\r\n\t\treturn !failed\r\n\t},\r\n\r\n\terrorCollector(errors){\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\tassert(assertion, description = format(assertion)){\r\n\t\tdefine(assertion, \"description\", description);\r\n\t\tthis.assertions = this.assertions.concat(assertion)\r\n\t\treturn this\r\n\t}\r\n})\r\n\r\n\r\nexport function BasicModel(def) {\r\n\tlet model = function (val = model.default) {\r\n\t\treturn model.validate(val) ? val : undefined\r\n\t}\r\n\r\n\tsetConstructor(model, BasicModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(BasicModel, Model, {\r\n\textend(...newParts) {\r\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\r\n\t\t}\r\n\r\n\t\treturn child\r\n\t}\r\n})\r\n\r\n\r\nexport function ObjectModel(def, params) {\r\n\tlet model = function (obj = model.default) {\r\n\t\tlet instance = this\r\n\t\tif (!is(model, instance)) return new model(obj)\r\n\t\tif (is(model, obj)) return obj\r\n\r\n\t\tmerge(instance, model[_constructor](obj), true)\r\n\t\tif (!model.validate(instance)) return\r\n\t\treturn getProxy(model, instance, model.definition)\r\n\t}\r\n\r\n\tObject.assign(model, params)\r\n\textend(model, Object)\r\n\tsetConstructor(model, ObjectModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(ObjectModel, Model, {\r\n\tsealed: false,\r\n\r\n\tdefaults(p){\r\n\t\tObject.assign(this.prototype, p)\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack){\r\n\t\treturn format(this.definition, stack)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\tlet parent = this,\r\n\t\t    def = Object.assign({}, this.definition),\r\n\t\t    newAssertions = [],\r\n\t\t    proto = {}\r\n\r\n\t\tmerge(proto, parent.prototype, false)\r\n\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(Model, part)) {\r\n\t\t\t\tmerge(def, part.definition, true)\r\n\t\t\t\tnewAssertions.push(...part.assertions)\r\n\t\t\t}\r\n\t\t\tif (isFunction(part)) merge(proto, part.prototype, true)\r\n\t\t\tif (isObject(part)) merge(def, part, true)\r\n\t\t}\r\n\r\n\t\tlet submodel = extendModel(new ObjectModel(def), parent, proto)\r\n\t\tsubmodel.assertions = parent.assertions.concat(newAssertions)\r\n\r\n\t\tif(getProto(parent) !== ObjectModel.prototype) { // extended class\r\n\t\t\tsubmodel[_constructor] = (obj) => {\r\n\t\t\t\tlet parentInstance = new parent(obj)\r\n\t\t\t\tmerge(obj, parentInstance, true) // get modified props from parent class constructor\r\n\t\t\t\treturn obj\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t[_constructor]: o => o,\r\n\r\n\t[_validate](obj, path, errors, stack){\r\n\t\tif (isObject(obj)){\r\n\t\t\tlet def = this.definition\r\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\r\n\t\t\tif(this.sealed) checkUndeclaredProps(obj, def, errors)\r\n\t\t}\r\n\t\telse stackError(errors, this, obj, path)\r\n\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t}\r\n})","import {_validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, formatDefinition, initModel, Model, stackError, unstackErrors} from \"./object-model.js\"\r\nimport {extend, isArray, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\nlet ARRAY_MUTATORS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"]\r\n\r\nexport default function ArrayModel(def) {\r\n\r\n\tlet model = function (array = model.default) {\r\n\t\tif (model.validate(array)) return proxifyModel(array, model, {\r\n\t\t\tget(arr, key) {\r\n\t\t\t\tlet val = arr[key];\r\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\r\n\t\t\t\t\tif (ARRAY_MUTATORS.includes(key)) {\r\n\t\t\t\t\t\tlet testArray = arr.slice()\r\n\t\t\t\t\t\tfn.apply(testArray, args)\r\n\t\t\t\t\t\tmodel.validate(testArray)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet returnValue = fn.apply(arr, args)\r\n\t\t\t\t\tarray.forEach((a, i) => arr[i] = cast(a, model.definition))\r\n\t\t\t\t\treturn returnValue\r\n\t\t\t\t}) : val\r\n\t\t\t},\r\n\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\treturn setArrayKey(arr, key, val, model)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(arr, key){\r\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Array)\r\n\tsetConstructor(model, ArrayModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(ArrayModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_validate](arr, path, errors, stack){\r\n\t\tif (isArray(arr))\r\n\t\t\tarr.forEach((a, i) => {\r\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack)\r\n\t\t\t})\r\n\t\telse stackError(errors, this, arr, path)\r\n\r\n\t\tcheckAssertions(arr, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})\r\n\r\nlet setArrayKey = (array, key, value, model) => {\r\n\tlet path = `Array[${key}]`;\r\n\tif (parseInt(key) === +key && key >= 0)\r\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [])\r\n\r\n\tlet testArray = array.slice()\r\n\ttestArray[key] = value\r\n\tcheckAssertions(testArray, model, path)\r\n\tlet isSuccess = !unstackErrors(model)\r\n\tif (isSuccess) array[key] = value\r\n\treturn isSuccess\r\n}","import {_validate, checkAssertions, checkDefinition, extendDefinition, extendModel, format, formatDefinition, initModel, Model, stackError, unstackErrors} from \"./object-model.js\"\r\nimport {extend, isFunction, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\n\r\nexport default function FunctionModel(...argsDef) {\r\n\r\n\tlet model = function (fn = model.default) {\r\n\t\tif (!model.validate(fn)) return\r\n\t\treturn proxifyModel(fn, model, {\r\n\t\t\tapply (fn, ctx, args) {\r\n\t\t\t\tlet def = model.definition\r\n\r\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\r\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [])\r\n\t\t\t\t})\r\n\r\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\r\n\r\n\t\t\t\tlet result\r\n\t\t\t\tif (!model.errors.length) {\r\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\r\n\t\t\t\t\tif (\"return\" in def)\r\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [])\r\n\t\t\t\t}\r\n\t\t\t\tunstackErrors(model)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\textend(model, Function)\r\n\tsetConstructor(model, FunctionModel)\r\n\tinitModel(model, {arguments: argsDef})\r\n\r\n\treturn model\r\n}\r\n\r\nextend(FunctionModel, Model, {\r\n\ttoString(stack = []){\r\n\t\tlet out = `Function(${this.definition.arguments.map(\r\n\t\t\targDef => formatDefinition(argDef, stack.slice())\r\n\t\t).join(\",\")})`\r\n\r\n\t\tif (\"return\" in this.definition) {\r\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\r\n\t\t}\r\n\t\treturn out\r\n\t},\r\n\r\n\treturn(def){\r\n\t\tthis.definition.return = def\r\n\t\treturn this\r\n\t},\r\n\r\n\textend(newArgs, newReturns) {\r\n\t\tlet args = this.definition.arguments,\r\n\t\t    mixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\r\n\t\t    mixedReturns = extendDefinition(this.definition.return, newReturns)\r\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\r\n\t},\r\n\r\n\t[_validate](f, path, errors){\r\n\t\tif (!isFunction(f)) {\r\n\t\t\tstackError(errors, \"Function\", f, path)\r\n\t\t}\r\n\t}\r\n})\r\n\r\nFunctionModel.prototype.assert(function (args) {\r\n\treturn (args.length > this.definition.arguments.length) ? args : true\r\n}, function (args) {\r\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\r\n})","import {_validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, format, formatDefinition, initModel, Model, stackError} from \"./object-model.js\";\r\nimport {extend, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\nlet MAP_MUTATORS = [\"set\", \"delete\", \"clear\"]\r\n\r\nexport default function MapModel(key, value) {\r\n\r\n\tlet model = function (iterable = model.default) {\r\n\t\tlet castKeyValue = pair => [\"key\", \"value\"].map((prop, i) => cast(pair[i], model.definition[prop])),\r\n\t\t    map = new Map([...iterable].map(castKeyValue))\r\n\r\n\t\tif (!model.validate(map)) return\r\n\r\n\t\treturn proxifyModel(map, model, {\r\n\t\t\tget(map, key) {\r\n\t\t\t\tlet val = map[key];\r\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\r\n\t\t\t\t\tif (key === \"set\") {\r\n\t\t\t\t\t\targs = castKeyValue(args)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (MAP_MUTATORS.includes(key)) {\r\n\t\t\t\t\t\tlet testMap = new Map(map)\r\n\t\t\t\t\t\tfn.apply(testMap, args)\r\n\t\t\t\t\t\tmodel.validate(testMap)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn fn.apply(map, args)\r\n\t\t\t\t}) : val\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Map)\r\n\tsetConstructor(model, MapModel)\r\n\tinitModel(model, {key, value})\r\n\treturn model\r\n}\r\n\r\nextend(MapModel, Model, {\r\n\ttoString(stack) {\r\n\t\tlet {key, value} = this.definition\r\n\t\treturn `Map of ${formatDefinition(key, stack)} : ${formatDefinition(value, stack)}`\r\n\t},\r\n\r\n\t[_validate](map, path, errors, stack) {\r\n\t\tif (map instanceof Map) {\r\n\t\t\tpath = path || 'Map'\r\n\t\t\tfor (let [key, value] of map) {\r\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\r\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, map, path)\r\n\r\n\t\tcheckAssertions(map, this, path, errors)\r\n\t},\r\n\r\n\textend(keyPart, valuePart){\r\n\t\tlet {key, value} = this.definition\r\n\t\treturn extendModel(new MapModel(extendDefinition(key, keyPart), extendDefinition(value, valuePart)), this)\r\n\t}\r\n})","import {_validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, formatDefinition, initModel, Model, stackError} from \"./object-model.js\"\r\nimport {extend, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\nlet SET_MUTATORS = [\"add\", \"delete\", \"clear\"]\r\n\r\nexport default function SetModel(def) {\r\n\r\n\tlet model = function (iterable = model.default) {\r\n\t\tlet castValue = val => cast(val, model.definition),\r\n\t\t    set = new Set([...iterable].map(castValue))\r\n\r\n\t\tif (!model.validate(set)) return\r\n\r\n\t\treturn proxifyModel(set, model, {\r\n\t\t\tget(set, key) {\r\n\t\t\t\tlet val = set[key]\r\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\r\n\t\t\t\t\tif (key === \"add\") {\r\n\t\t\t\t\t\targs[0] = castValue(args[0])\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (SET_MUTATORS.includes(key)) {\r\n\t\t\t\t\t\tlet testSet = new Set(set)\r\n\t\t\t\t\t\tfn.apply(testSet, args)\r\n\t\t\t\t\t\tmodel.validate(testSet)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn fn.apply(set, args)\r\n\t\t\t\t}) : val\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Set)\r\n\tsetConstructor(model, SetModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(SetModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_validate](set, path, errors, stack){\r\n\t\tif (set instanceof Set) {\r\n\t\t\tfor (let item of set.values()) {\r\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, set, path)\r\n\t\tcheckAssertions(set, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})"],"names":["getProto","x","Object","getPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isString","s","isFunction","f","isObject","isArray","a","Array","isPlainObject","prototype","proxify","val","traps","Proxy","proxifyFn","fn","apply","proxifyModel","model","assign","mapProps","keys","map","merge","target","src","deep","key","define","value","enumerable","defineProperty","writable","configurable","setConstructor","constructor","setPrototypeOf","extend","child","parent","props","create","_constructor","Symbol","_validate","initModel","def","definition","assertions","name","extendModel","newProps","push","stackError","errors","expected","received","path","message","unstackErrors","errorCollector","nbErrors","length","err","d","format","join","toString","call","match","bettertypeof","isModelInstance","i","Model","parseDefinition","undefined","formatDefinition","stack","extendDefinition","newParts","reduce","ext","concat","slice","filter","index","self","indexOf","checkDefinition","indexFound","cast","formatPath","some","part","checkDefinitionPart","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","isInDefinition","sealed","rejectUndeclaredProp","msg","defNode","suitableModels","duck","ObjectModel","console","warn","checkUndeclaredProps","subpath","getProxy","[object Object]","Reflect","get","defPart","set","deleteProperty","args","ownKeys","descriptor","params","BasicModel","default","validate","this","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","p","newAssertions","proto","submodel","parentInstance","ARRAY_MUTATORS","ArrayModel","array","arr","ctx","testArray","returnValue","forEach","setArrayKey","parseInt","isSuccess","FunctionModel","argsDef","arguments","argDef","return","Function","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","MAP_MUTATORS","MapModel","iterable","castKeyValue","pair","testMap","keyPart","valuePart","SET_MUTATORS","SetModel","castValue","testSet","values"],"mappings":"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"}