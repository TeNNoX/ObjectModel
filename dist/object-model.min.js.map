{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/formatter.js","../src/definition.js","../src/basic-model.js","../src/object-model.js","../src/model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\r\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\r\n\tgetProto     = x => Object.getPrototypeOf(x),\r\n\r\n\thas           = (o, prop) => o.hasOwnProperty(prop),\r\n\tis            = (Constructor, obj) => obj instanceof Constructor,\r\n\tisString      = s => typeof s === \"string\",\r\n\tisFunction    = f => typeof f === \"function\",\r\n\tisObject      = o => typeof o === \"object\",\r\n\tisArray       = a => Array.isArray(a),\r\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\r\n\r\n\tproxify      = (val, traps) => new Proxy(val, traps),\r\n\tproxifyFn    = (fn, apply) => proxify(fn, {apply}),\r\n\tproxifyModel = (val, model, traps) => proxify(val, Object.assign({getPrototypeOf: () => model.prototype}, traps)),\r\n\r\n\tmapProps = (o, fn) => Object.keys(o).map(fn),\r\n\r\n\tmerge = (target, src = {}, deep) => {\r\n\t\tfor (let key in src) {\r\n\t\t\tif (deep && isPlainObject(src[key])) {\r\n\t\t\t\tlet o = {}\r\n\t\t\t\tmerge(o, target[key], deep)\r\n\t\t\t\tmerge(o, src[key], deep)\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tdefine = (obj, key, value, enumerable = false) => {\r\n\t\tObject.defineProperty(obj, key, {value, enumerable, writable: true, configurable: true})\r\n\t},\r\n\r\n\tsetConstructor = (model, constructor) => {\r\n\t\tObject.setPrototypeOf(model, constructor.prototype)\r\n\t\tdefine(model, \"constructor\", constructor)\r\n\t},\r\n\r\n\textend = (child, parent, props) => {\r\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\r\n\t\t\tconstructor: {\r\n\t\t\t\tvalue: child,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t}\r\n\t\t}), props)\r\n\t\tObject.setPrototypeOf(child, parent)\r\n\t}","import {is, isArray, isFunction, isObject, isString} from \"./helpers.js\"\nimport Model from \"./model.js\"\n\nexport const\n\tformat = (obj, stack = []) => {\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\n\t\tif (obj === null || obj === undefined) return String(obj)\n\t\tif (isString(obj)) return `\"${obj}\"`\n\t\tif (is(Model, obj)) return obj.toString(stack)\n\n\t\tstack.unshift(obj)\n\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\n\t\tif (isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\n\t\tif (obj && isObject(obj)) {\n\t\t\tlet props  = Object.keys(obj),\n\t\t\t    indent = '\\t'.repeat(stack.length)\n\t\t\treturn `{${props.map(\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], stack.slice())}`\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\n\t\t}\n\n\t\treturn String(obj)\n\t},\n\n\tformatPath = (path, key) => path ? path + '.' + key : key","import {is, isArray, isFunction, isPlainObject, mapProps} from \"./helpers.js\"\nimport {format, formatPath} from \"./formatter.js\"\nimport {isModelInstance, Model, stackError} from \"./model.js\"\n\nexport const\n\t_validate = Symbol(),\n\n\tparseDefinition = (def) => {\n\t\tif (isPlainObject(def)) {\n\t\t\tmapProps(def, key => { def[key] = parseDefinition(def[key]) })\n\t\t}\n\t\telse if (!isArray(def)) return [def]\n\t\telse if (def.length === 1) return [...def, undefined, null]\n\n\t\treturn def\n\t},\n\n\tformatDefinition = (def, stack) => parseDefinition(def).map(d => format(d, stack)).join(\" or \"),\n\n\textendDefinition = (def, newParts = []) => {\n\t\tif (!isArray(newParts)) newParts = [newParts]\n\t\tif (newParts.length > 0) {\n\t\t\tdef = newParts\n\t\t\t\t.reduce((def, ext) => def.concat(ext), isArray(def) ? def.slice() : [def]) // clone to lose ref\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\n\t\t}\n\n\t\treturn def\n\t},\n\n\tcheckDefinition = (obj, def, path, errors, stack) => {\n\t\tlet indexFound = stack.indexOf(def)\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\n\t\t\treturn obj //if found twice in call stack, cycle detected, skip validation\n\n\t\tobj = cast(obj, def)\n\n\t\tif (is(Model, def)) {\n\t\t\tdef[_validate](obj, path, errors, stack.concat(def))\n\t\t}\n\t\telse if (isPlainObject(def)) {\n\t\t\tmapProps(def, key => {\n\t\t\t\tcheckDefinition(obj ? obj[key] : undefined, def[key], formatPath(path, key), errors, stack)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tlet pdef = parseDefinition(def)\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack)))\n\t\t\t\treturn obj\n\n\t\t\tstackError(errors, def, obj, path)\n\t\t}\n\n\t\treturn obj\n\t},\n\n\tcheckDefinitionPart = (obj, def, path, stack) => {\n\t\tif (obj == null) return obj === def\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\n\t\t\tlet errors = []\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\n\t\t\treturn !errors.length\n\t\t}\n\t\tif (is(RegExp, def)) return def.test(obj)\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\n\t\treturn obj === def\n\t\t\t|| (isFunction(def) && is(def, obj))\n\t\t\t|| obj.constructor === def\n\t},\n\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\n\t\tfor (let assertion of model.assertions) {\n\t\t\tlet result\n\t\t\ttry {\n\t\t\t\tresult = assertion.call(model, obj)\n\t\t\t} catch (err) {\n\t\t\t\tresult = err\n\t\t\t}\n\t\t\tif (result !== true) {\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\n\t\t\t\t\t+`for ${path ? path+\" =\" : \"value\"} ${format(value)}`\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\n\t\t\t}\n\t\t}\n\t},\n\n\tcast = (obj, defNode = []) => {\n\t\tif (!obj || isPlainObject(defNode) || isModelInstance(obj))\n\t\t\treturn obj // no value or not leaf or already a model instance\n\n\t\tlet def = parseDefinition(defNode),\n\t\t    suitableModels = []\n\n\t\tfor (let part of def) {\n\t\t\tif (is(Model, part) && part.test(obj))\n\t\t\t\tsuitableModels.push(part)\n\t\t}\n\n\t\tif (suitableModels.length === 1)\n\t\t\treturn suitableModels[0](obj) // automatically cast to suitable model when explicit\n\n\t\tif (suitableModels.length > 1)\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\n\n\t\treturn obj\n\t}","import {extend, is, setConstructor} from \"./helpers.js\"\nimport {extendDefinition} from \"./definition.js\"\nimport {extendModel, initModel, Model} from \"./model.js\"\n\n\nexport default function BasicModel(def) {\n\tlet model = function (val = model.default) {\n\t\treturn model.validate(val) ? val : undefined\n\t}\n\n\tsetConstructor(model, BasicModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(BasicModel, Model, {\n\textend(...newParts) {\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\n\t\tfor (let part of newParts) {\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\n\t\t}\n\n\t\treturn child\n\t}\n})","import {extendModel, initModel, isModelInstance, Model, stackError, unstackErrors} from \"./model.js\"\r\nimport {_validate, cast, checkAssertions, checkDefinition} from \"./definition.js\"\r\nimport {format, formatPath} from \"./formatter.js\"\r\nimport {extend, getProto, has, is, isFunction, isObject, isPlainObject, isString, mapProps, merge, proxify, setConstructor} from \"./helpers.js\"\r\n\r\nconst _constructor = Symbol();\r\n\r\nexport default function ObjectModel(def, params) {\r\n\tlet model = function (obj = model.default) {\r\n\t\tlet instance = this\r\n\t\tif (!is(model, instance)) return new model(obj)\r\n\t\tif (is(model, obj)) return obj\r\n\r\n\t\tmerge(instance, model[_constructor](obj), true)\r\n\t\tif (!model.validate(instance)) return\r\n\t\treturn getProxy(model, instance, model.definition)\r\n\t}\r\n\r\n\tObject.assign(model, params)\r\n\textend(model, Object)\r\n\tsetConstructor(model, ObjectModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(ObjectModel, Model, {\r\n\tsealed: false,\r\n\r\n\tdefaults(p){\r\n\t\tObject.assign(this.prototype, p)\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack){\r\n\t\treturn format(this.definition, stack)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\tlet parent = this,\r\n\t\t    def = Object.assign({}, this.definition),\r\n\t\t    newAssertions = [],\r\n\t\t    proto = {}\r\n\r\n\t\tmerge(proto, parent.prototype, false)\r\n\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(Model, part)) {\r\n\t\t\t\tmerge(def, part.definition, true)\r\n\t\t\t\tnewAssertions.push(...part.assertions)\r\n\t\t\t}\r\n\t\t\tif (isFunction(part)) merge(proto, part.prototype, true)\r\n\t\t\tif (isObject(part)) merge(def, part, true)\r\n\t\t}\r\n\r\n\t\tlet submodel = extendModel(new ObjectModel(def), parent, proto)\r\n\t\tsubmodel.assertions = parent.assertions.concat(newAssertions)\r\n\r\n\t\tif(getProto(parent) !== ObjectModel.prototype) { // extended class\r\n\t\t\tsubmodel[_constructor] = (obj) => {\r\n\t\t\t\tlet parentInstance = new parent(obj)\r\n\t\t\t\tmerge(obj, parentInstance, true) // get modified props from parent class constructor\r\n\t\t\t\treturn obj\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t[_constructor]: o => o,\r\n\r\n\t[_validate](obj, path, errors, stack){\r\n\t\tif (isObject(obj)){\r\n\t\t\tlet def = this.definition\r\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\r\n\t\t\tif(this.sealed) checkUndeclaredProps(obj, def, errors)\r\n\t\t}\r\n\t\telse stackError(errors, this, obj, path)\r\n\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t}\r\n})\r\n\r\nlet cannot = (msg, model) => {\r\n\tmodel.errors.push({ message: \"cannot \" + msg })\r\n}\r\n\r\nlet getProxy = (model, obj, def, path) => !isPlainObject(def) ? cast(obj, def) : proxify(obj, {\r\n\r\n\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\r\n\r\n\tget(o, key) {\r\n\t\tif(key === Model.Name)\r\n\t\t\treturn def[Model.Name]\r\n\r\n\t\tif (!isString(key))\r\n\t\t\treturn Reflect.get(o, key)\r\n\r\n\t\tlet newPath = formatPath(path, key),\r\n\t\t    defPart = def[key];\r\n\r\n\t\tif (key in def && model.conventionForPrivate(key)) {\r\n\t\t\tcannot(`access to private property ${newPath}`, model)\r\n\t\t\tunstackErrors(model)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\r\n\t\t\to[key] = cast(o[key], defPart) // cast nested models\r\n\t\t}\r\n\r\n\t\tif (isFunction(o[key]) && o[key].bind)\r\n\t\t\treturn o[key].bind(o); // auto-bind methods to original object, so they can access private props\r\n\r\n\t\tif(isPlainObject(defPart) && !o[key]){\r\n\t\t\to[key] = {} // null-safe traversal\r\n\t\t}\r\n\r\n\t\treturn getProxy(model, o[key], defPart, newPath)\r\n\t},\r\n\r\n\tset(o, key, val) {\r\n\t\treturn controlMutation(model, def, path, o, key, (newPath) => Reflect.set(o, key, getProxy(model, val, def[key], newPath)))\r\n\t},\r\n\r\n\tdeleteProperty(o, key) {\r\n\t\treturn controlMutation(model, def, path, o, key, () => Reflect.deleteProperty(o, key))\r\n\t},\r\n\r\n\tdefineProperty(o, key, args){\r\n\t\treturn controlMutation(model, def, path, o, key, () => Reflect.defineProperty(o, key, args))\r\n\t},\r\n\r\n\thas(o, key){\r\n\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t},\r\n\r\n\townKeys(o){\r\n\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\r\n\t},\r\n\r\n\tgetOwnPropertyDescriptor(o, key){\r\n\t\tlet descriptor;\r\n\t\tif (!model.conventionForPrivate(key)) {\r\n\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\tif (descriptor !== undefined) descriptor.value = o[key];\r\n\t\t}\r\n\r\n\t\treturn descriptor\r\n\t}\r\n})\r\n\r\nlet controlMutation = (model, def, path, o, key, applyMutation) => {\r\n\tlet newPath       = formatPath(path, key),\r\n\t    isPrivate     = model.conventionForPrivate(key),\r\n\t    isConstant    = model.conventionForConstant(key),\r\n\t    isOwnProperty = has(o, key),\r\n\t    initialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\r\n\r\n\tif (key in def && (isPrivate || (isConstant && o[key] !== undefined)))\r\n\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} ${key}`, model)\r\n\r\n\tlet isInDefinition = has(def, key);\r\n\tif (isInDefinition || !model.sealed) {\r\n\t\tapplyMutation(newPath)\r\n\t\tisInDefinition && checkDefinition(o[key], def[key], newPath, model.errors, [])\r\n\t\tcheckAssertions(o, model, newPath)\r\n\t}\r\n\telse rejectUndeclaredProp(newPath, o[key], model.errors)\r\n\r\n\tlet nbErrors = model.errors.length\r\n\tif (nbErrors) {\r\n\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\r\n\t\telse delete o[key] // back to the initial property defined in prototype chain\r\n\r\n\t\tunstackErrors(model)\r\n\t}\r\n\r\n\treturn !nbErrors\r\n}\r\n\r\nlet checkUndeclaredProps = (obj, def, errors, path) => {\r\n\tmapProps(obj, key => {\r\n\t\tlet val = obj[key],\r\n\t\t    subpath = formatPath(path, key)\r\n\t\tif(!has(def, key)) rejectUndeclaredProp(subpath, val, errors)\r\n\t\telse if(isPlainObject(val))\tcheckUndeclaredProps(val, def[key], errors, subpath)\r\n\t})\r\n}\r\n\r\nlet rejectUndeclaredProp = (path, received, errors) => {\r\n\terrors.push({\r\n\t\tpath,\r\n\t\treceived,\r\n\t\tmessage: `property ${path} is not declared in the sealed model definition`\r\n\t})\r\n}","import {bettertypeof, define, extend, getProto, is, isArray, isPlainObject} from \"./helpers.js\"\r\nimport {format} from \"./formatter.js\"\r\nimport {_validate, checkAssertions, checkDefinition, formatDefinition} from \"./definition.js\"\r\nimport BasicModel from \"./basic-model.js\"\r\nimport ObjectModel from \"./object-model.js\"\r\n\r\nexport function Model(def, params) {\r\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\r\n}\r\n\r\nObject.assign(Model.prototype, {\r\n\tname: \"Model\",\r\n\tassertions: [],\r\n\r\n\tconventionForConstant: key => key.toUpperCase() === key,\r\n\tconventionForPrivate: key => key[0] === \"_\",\r\n\r\n\ttoString(stack){\r\n\t\treturn formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\tas(name){\r\n\t\tdefine(this, \"name\", name);\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val){\r\n\t\tthis.default = val\r\n\t\treturn this\r\n\t},\r\n\r\n\t[_validate](obj, path, errors, stack){\r\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t},\r\n\r\n\tvalidate(obj, errorCollector){\r\n\t\tthis[_validate](obj, null, this.errors, [])\r\n\t\treturn !unstackErrors(this, errorCollector)\r\n\t},\r\n\r\n\ttest(obj){\r\n\t\tlet failed,\r\n\t\t    initialErrorCollector = this.errorCollector\r\n\r\n\t\tthis.errorCollector = () => {\r\n\t\t\tfailed = true\r\n\t\t}\r\n\r\n\t\tnew this(obj) // may trigger this.errorCollector\r\n\r\n\t\tthis.errorCollector = initialErrorCollector\r\n\t\treturn !failed\r\n\t},\r\n\r\n\terrorCollector(errors){\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\tassert(assertion, description = format(assertion)){\r\n\t\tdefine(assertion, \"description\", description);\r\n\t\tthis.assertions = this.assertions.concat(assertion)\r\n\t\treturn this\r\n\t}\r\n})\r\n\r\nexport let initModel = (model, def) => {\r\n\tmodel.definition = def\r\n\tmodel.assertions = [...model.assertions]\r\n\tdefine(model, \"errors\", [])\r\n\tdelete model.name;\r\n}\r\n\r\nexport let extendModel = (child, parent, newProps) => {\r\n\textend(child, parent, newProps)\r\n\tchild.assertions.push(...parent.assertions)\r\n\treturn child\r\n}\r\n\r\nexport let stackError = (errors, expected, received, path, message) => {\r\n\terrors.push({expected, received, path, message})\r\n}\r\n\r\nexport let unstackErrors = (model, errorCollector = model.errorCollector) => {\r\n\tlet nbErrors = model.errors.length\r\n\tif (nbErrors > 0) {\r\n\t\tlet errors = model.errors.map(err => {\r\n\t\t\tif (!err.message) {\r\n\t\t\t\tlet def = isArray(err.expected) ? err.expected : [err.expected]\r\n\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\r\n\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\r\n\t\t\t}\r\n\t\t\treturn err\r\n\t\t})\r\n\t\tmodel.errors = []\r\n\t\terrorCollector.call(model, errors) // throw all errors collected\r\n\t}\r\n\treturn nbErrors\r\n}\r\n\r\nexport let isModelInstance = i => i && is(Model, getProto(i).constructor)\r\n\r\nModel.Name = Symbol();\r\n\r\nexport default Model","import {extendModel, initModel, Model, stackError, unstackErrors} from \"./model.js\"\nimport {_validate, cast, checkAssertions, checkDefinition, extendDefinition, formatDefinition} from \"./definition.js\"\nimport {extend, isArray, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\n\nlet ARRAY_MUTATORS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"]\n\nexport default function ArrayModel(def) {\n\n\tlet model = function (array = model.default) {\n\t\tif (model.validate(array)) return proxifyModel(array, model, {\n\t\t\tget(arr, key) {\n\t\t\t\tlet val = arr[key];\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\n\t\t\t\t\tif (ARRAY_MUTATORS.includes(key)) {\n\t\t\t\t\t\tlet testArray = arr.slice()\n\t\t\t\t\t\tfn.apply(testArray, args)\n\t\t\t\t\t\tmodel.validate(testArray)\n\t\t\t\t\t}\n\n\t\t\t\t\tlet returnValue = fn.apply(arr, args)\n\t\t\t\t\tarray.forEach((a, i) => arr[i] = cast(a, model.definition))\n\t\t\t\t\treturn returnValue\n\t\t\t\t}) : val\n\t\t\t},\n\n\t\t\tset(arr, key, val) {\n\t\t\t\treturn setArrayKey(arr, key, val, model)\n\t\t\t},\n\n\t\t\tdeleteProperty(arr, key){\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\n\t\t\t}\n\t\t})\n\t}\n\n\textend(model, Array)\n\tsetConstructor(model, ArrayModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(ArrayModel, Model, {\n\ttoString(stack){\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](arr, path, errors, stack){\n\t\tif (isArray(arr))\n\t\t\tarr.forEach((a, i) => {\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack)\n\t\t\t})\n\t\telse stackError(errors, this, arr, path)\n\n\t\tcheckAssertions(arr, this, path, errors)\n\t},\n\n\textend(...newParts){\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})\n\nlet setArrayKey = (array, key, value, model) => {\n\tlet path = `Array[${key}]`;\n\tif (parseInt(key) === +key && key >= 0)\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [])\n\n\tlet testArray = array.slice()\n\ttestArray[key] = value\n\tcheckAssertions(testArray, model, path)\n\tlet isSuccess = !unstackErrors(model)\n\tif (isSuccess) array[key] = value\n\treturn isSuccess\n}","import {extendModel, initModel, Model, stackError, unstackErrors} from \"./model.js\"\nimport {_validate, checkAssertions, checkDefinition, extendDefinition, formatDefinition} from \"./definition.js\"\nimport {extend, isFunction, proxifyModel, setConstructor} from \"./helpers.js\"\nimport {format} from \"./formatter.js\"\n\n\nexport default function FunctionModel(...argsDef) {\n\n\tlet model = function (fn = model.default) {\n\t\tif (!model.validate(fn)) return\n\t\treturn proxifyModel(fn, model, {\n\t\t\tapply (fn, ctx, args) {\n\t\t\t\tlet def = model.definition\n\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [])\n\t\t\t\t})\n\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\n\n\t\t\t\tlet result\n\t\t\t\tif (!model.errors.length) {\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\n\t\t\t\t\tif (\"return\" in def)\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [])\n\t\t\t\t}\n\t\t\t\tunstackErrors(model)\n\t\t\t\treturn result\n\t\t\t}\n\t\t});\n\t}\n\n\textend(model, Function)\n\tsetConstructor(model, FunctionModel)\n\tinitModel(model, {arguments: argsDef})\n\n\treturn model\n}\n\nextend(FunctionModel, Model, {\n\ttoString(stack = []){\n\t\tlet out = `Function(${this.definition.arguments.map(\n\t\t\targDef => formatDefinition(argDef, stack.slice())\n\t\t).join(\",\")})`\n\n\t\tif (\"return\" in this.definition) {\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\n\t\t}\n\t\treturn out\n\t},\n\n\treturn(def){\n\t\tthis.definition.return = def\n\t\treturn this\n\t},\n\n\textend(newArgs, newReturns) {\n\t\tlet args = this.definition.arguments,\n\t\t    mixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\n\t\t    mixedReturns = extendDefinition(this.definition.return, newReturns)\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\n\t},\n\n\t[_validate](f, path, errors){\n\t\tif (!isFunction(f)) {\n\t\t\tstackError(errors, \"Function\", f, path)\n\t\t}\n\t}\n})\n\nFunctionModel.prototype.assert(function (args) {\n\treturn (args.length > this.definition.arguments.length) ? args : true\n}, function (args) {\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\n})","import {extendModel, initModel, Model, stackError} from \"./model.js\"\nimport {_validate, cast, checkAssertions, checkDefinition, extendDefinition, formatDefinition} from \"./definition.js\"\nimport {format} from \"./formatter.js\"\nimport {extend, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\n\nlet MAP_MUTATORS = [\"set\", \"delete\", \"clear\"]\n\nexport default function MapModel(key, value) {\n\n\tlet model = function (iterable = model.default) {\n\t\tlet castKeyValue = pair => [\"key\", \"value\"].map((prop, i) => cast(pair[i], model.definition[prop])),\n\t\t    map = new Map([...iterable].map(castKeyValue))\n\n\t\tif (!model.validate(map)) return\n\n\t\treturn proxifyModel(map, model, {\n\t\t\tget(map, key) {\n\t\t\t\tlet val = map[key];\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\n\t\t\t\t\tif (key === \"set\") {\n\t\t\t\t\t\targs = castKeyValue(args)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (MAP_MUTATORS.includes(key)) {\n\t\t\t\t\t\tlet testMap = new Map(map)\n\t\t\t\t\t\tfn.apply(testMap, args)\n\t\t\t\t\t\tmodel.validate(testMap)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn fn.apply(map, args)\n\t\t\t\t}) : val\n\t\t\t}\n\t\t})\n\t}\n\n\textend(model, Map)\n\tsetConstructor(model, MapModel)\n\tinitModel(model, {key, value})\n\treturn model\n}\n\nextend(MapModel, Model, {\n\ttoString(stack) {\n\t\tlet {key, value} = this.definition\n\t\treturn `Map of ${formatDefinition(key, stack)} : ${formatDefinition(value, stack)}`\n\t},\n\n\t[_validate](map, path, errors, stack) {\n\t\tif (map instanceof Map) {\n\t\t\tpath = path || 'Map'\n\t\t\tfor (let [key, value] of map) {\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, map, path)\n\n\t\tcheckAssertions(map, this, path, errors)\n\t},\n\n\textend(keyPart, valuePart){\n\t\tlet {key, value} = this.definition\n\t\treturn extendModel(new MapModel(extendDefinition(key, keyPart), extendDefinition(value, valuePart)), this)\n\t}\n})","import {extendModel, initModel, Model, stackError} from \"./model.js\"\nimport {_validate, cast, checkAssertions, checkDefinition, extendDefinition, formatDefinition} from \"./definition.js\"\nimport {extend, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\n\nlet SET_MUTATORS = [\"add\", \"delete\", \"clear\"]\n\nexport default function SetModel(def) {\n\n\tlet model = function (iterable = model.default) {\n\t\tlet castValue = val => cast(val, model.definition),\n\t\t    set = new Set([...iterable].map(castValue))\n\n\t\tif (!model.validate(set)) return\n\n\t\treturn proxifyModel(set, model, {\n\t\t\tget(set, key) {\n\t\t\t\tlet val = set[key]\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\n\t\t\t\t\tif (key === \"add\") {\n\t\t\t\t\t\targs[0] = castValue(args[0])\n\t\t\t\t\t}\n\n\t\t\t\t\tif (SET_MUTATORS.includes(key)) {\n\t\t\t\t\t\tlet testSet = new Set(set)\n\t\t\t\t\t\tfn.apply(testSet, args)\n\t\t\t\t\t\tmodel.validate(testSet)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn fn.apply(set, args)\n\t\t\t\t}) : val\n\t\t\t}\n\t\t})\n\t}\n\n\textend(model, Set)\n\tsetConstructor(model, SetModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(SetModel, Model, {\n\ttoString(stack){\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](set, path, errors, stack){\n\t\tif (set instanceof Set) {\n\t\t\tfor (let item of set.values()) {\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, set, path)\n\t\tcheckAssertions(set, this, path, errors)\n\t},\n\n\textend(...newParts){\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})"],"names":["getProto","x","Object","getPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isString","s","isFunction","f","isObject","isArray","a","Array","isPlainObject","prototype","proxify","val","traps","Proxy","proxifyFn","fn","apply","proxifyModel","model","assign","mapProps","keys","map","merge","target","src","deep","key","define","value","enumerable","defineProperty","writable","configurable","setConstructor","constructor","setPrototypeOf","extend","child","parent","props","create","format","stack","length","includes","undefined","String","Model","toString","unshift","name","Map","Set","item","join","indent","repeat","slice","formatPath","path","_validate","Symbol","parseDefinition","def","formatDefinition","d","extendDefinition","newParts","reduce","ext","concat","filter","index","self","indexOf","checkDefinition","errors","indexFound","cast","some","part","checkDefinitionPart","stackError","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","assertions","result","call","err","onFail","description","assertionResult","defNode","isModelInstance","suitableModels","push","console","warn","BasicModel","default","validate","initModel","[object Object]","extendModel","this","definition","_constructor","ObjectModel","params","getProxy","sealed","p","newAssertions","proto","submodel","parentInstance","checkUndeclaredProps","cannot","msg","message","Name","Reflect","get","newPath","defPart","conventionForPrivate","unstackErrors","bind","set","controlMutation","deleteProperty","args","ownKeys","descriptor","getOwnPropertyDescriptor","applyMutation","isPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","isInDefinition","rejectUndeclaredProp","nbErrors","subpath","received","toUpperCase","errorCollector","failed","initialErrorCollector","e","TypeError","replace","newProps","expected","match","bettertypeof","i","ARRAY_MUTATORS","ArrayModel","array","arr","ctx","testArray","returnValue","forEach","setArrayKey","parseInt","isSuccess","FunctionModel","argsDef","arguments","argDef","return","Function","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","MAP_MUTATORS","MapModel","iterable","castKeyValue","pair","testMap","keyPart","valuePart","SET_MUTATORS","SetModel","castValue","testSet","values"],"mappings":"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"}