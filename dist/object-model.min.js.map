{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/list-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\n\tgetProto = x => Object.getPrototypeOf(x),\n\tsetProto = (x, p) => Object.setPrototypeOf(x, p),\n\n\thas = (o, prop) => o.hasOwnProperty(prop),\n\tis = (Constructor, obj) => obj instanceof Constructor,\n\tisFunction = f => typeof f === \"function\",\n\tisObject = o => typeof o === \"object\",\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\n\tisIterable = x => x && isFunction(x[Symbol.iterator]),\n\n\tproxifyFn = (fn, apply) => new Proxy(fn, { apply }),\n\tproxifyModel = (val, model, traps) => new Proxy(val, Object.assign({ getPrototypeOf: () => model.prototype }, traps)),\n\n\tmerge = (target, src = {}, deep) => {\n\t\tfor (let key in src) {\n\t\t\tif (deep && isPlainObject(src[key])) {\n\t\t\t\tlet o = {}\n\t\t\t\tmerge(o, target[key], deep)\n\t\t\t\tmerge(o, src[key], deep)\n\t\t\t\ttarget[key] = o\n\t\t\t} else {\n\t\t\t\ttarget[key] = src[key]\n\t\t\t}\n\t\t}\n\t},\n\n\tdefine = (obj, key, value, enumerable = false) => {\n\t\tObject.defineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\n\t},\n\n\tsetConstructor = (model, constructor) => {\n\t\tsetProto(model, constructor.prototype)\n\t\tdefine(model, \"constructor\", constructor)\n\t},\n\n\textend = (child, parent, props) => {\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\n\t\t\tconstructor: {\n\t\t\t\tvalue: child,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t}\n\t\t}), props)\n\t\tsetProto(child, parent)\n\t}","import {\n\tbettertypeof, define, extend, getProto, has, is, isFunction, isObject, isPlainObject,\n\tmerge, proxifyFn, setConstructor\n} from \"./helpers.js\"\n\nexport const\n\t_constructor = Symbol(),\n\t_validate = Symbol(),\n\t_original = Symbol(),\n\t_get = Symbol(), // used to bypass private access\n\n\tinitModel = (model, def) => {\n\t\tmodel.definition = def\n\t\tmodel.assertions = [...model.assertions]\n\t\tdefine(model, \"errors\", [])\n\t\tdelete model.name;\n\t},\n\n\textendModel = (child, parent, newProps) => {\n\t\textend(child, parent, newProps)\n\t\tchild.assertions.push(...parent.assertions)\n\t\treturn child\n\t},\n\n\tstackError = (errors, expected, received, path, message) => {\n\t\terrors.push({ expected, received, path, message })\n\t},\n\n\tunstackErrors = (model, errorCollector = model.errorCollector) => {\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors > 0) {\n\t\t\tlet errors = model.errors.map(err => {\n\t\t\t\tif (!err.message) {\n\t\t\t\t\tlet def = Array.isArray(err.expected) ? err.expected : [err.expected]\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\n\t\t\t\t}\n\t\t\t\treturn err\n\t\t\t})\n\t\t\tmodel.errors = []\n\t\t\terrorCollector.call(model, errors) // throw all errors collected\n\t\t}\n\t\treturn nbErrors\n\t},\n\n\tisModelInstance = i => i && is(Model, getProto(i).constructor),\n\n\tparseDefinition = (def) => {\n\t\tif (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => { def[key] = parseDefinition(def[key]) })\n\t\t}\n\t\telse if (!Array.isArray(def)) return [def]\n\t\telse if (def.length === 1) return [...def, undefined, null]\n\n\t\treturn def\n\t},\n\n\tformatDefinition = (def, stack) => {\n\t\tlet parts = parseDefinition(def).map(d => format(d, stack));\n\t\treturn parts.length > 1 ? `(${parts.join(\" or \")})` : parts[0]\n\t},\n\n\textendDefinition = (def, newParts = []) => {\n\t\tif (!Array.isArray(newParts)) newParts = [newParts]\n\t\tif (newParts.length > 0) {\n\t\t\tdef = newParts\n\t\t\t\t.reduce((def, ext) => def.concat(ext), Array.isArray(def) ? [...def] : [def]) // clone to lose ref\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\n\t\t}\n\n\t\treturn def\n\t},\n\n\tcheckDefinition = (obj, def, path, errors, stack) => {\n\t\tlet indexFound = stack.indexOf(def)\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\n\t\t\treturn obj //if found twice in call stack, cycle detected, skip validation\n\n\t\tobj = cast(obj, def)\n\n\t\tif (is(Model, def)) {\n\t\t\tdef[_validate](obj, path, errors, stack.concat(def))\n\t\t}\n\t\telse if (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => {\n\t\t\t\tlet val = obj ? obj[_get] ? obj[_get](key) : obj[key] : undefined;\n\t\t\t\tcheckDefinition(val, def[key], formatPath(path, key), errors, stack)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tlet pdef = parseDefinition(def)\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack)))\n\t\t\t\treturn obj\n\n\t\t\tstackError(errors, def, obj, path)\n\t\t}\n\n\t\treturn obj\n\t},\n\n\tcheckDefinitionPart = (obj, def, path, stack) => {\n\t\tif (obj == null) return obj === def\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\n\t\t\tlet errors = []\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\n\t\t\treturn !errors.length\n\t\t}\n\t\tif (is(RegExp, def)) return def.test(obj)\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\n\t\treturn obj === def\n\t\t\t|| (isFunction(def) && is(def, obj))\n\t\t\t|| obj.constructor === def\n\t},\n\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\n\t\tfor (let assertion of model.assertions) {\n\t\t\tlet result\n\t\t\ttry {\n\t\t\t\tresult = assertion.call(model, obj)\n\t\t\t} catch (err) {\n\t\t\t\tresult = err\n\t\t\t}\n\t\t\tif (result !== true) {\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\n\t\t\t\t\t+ `for ${path ? path + \" =\" : \"value\"} ${format(value)}`\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\n\t\t\t}\n\t\t}\n\t},\n\n\tformat = (obj, stack = []) => {\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\n\t\tif (obj === null || obj === undefined) return String(obj)\n\t\tif (typeof obj === 'string') return `\"${obj}\"`\n\t\tif (is(Model, obj)) return obj.toString(stack)\n\n\t\tstack.unshift(obj)\n\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\n\t\tif (Array.isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\n\t\tif (obj && isObject(obj)) {\n\t\t\tlet props = Object.keys(obj),\n\t\t\t\tindent = '\\t'.repeat(stack.length)\n\t\t\treturn `{${props.map(\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], [...stack])}`\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\n\t\t}\n\n\t\treturn String(obj)\n\t},\n\n\tformatPath = (path, key) => path ? path + '.' + key : key,\n\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\n\t\tlet newPath = formatPath(path, key),\n\t\t\tisPrivate = model.conventionForPrivate(key),\n\t\t\tisConstant = model.conventionForConstant(key),\n\t\t\tisOwnProperty = has(o, key),\n\t\t\tinitialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\n\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\n\n\t\tlet isInDefinition = has(def, key);\n\t\tif (isInDefinition || !model.sealed) {\n\t\t\tapplyMutation(newPath)\n\t\t\tif (isInDefinition) checkDefinition(o[key], def[key], newPath, model.errors, [])\n\t\t\tcheckAssertions(o, model, newPath)\n\t\t}\n\t\telse rejectUndeclaredProp(newPath, o[key], model.errors)\n\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors) {\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\n\n\t\t\tunstackErrors(model)\n\t\t}\n\n\t\treturn !nbErrors\n\t},\n\n\tcannot = (msg, model) => {\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\n\t},\n\n\trejectUndeclaredProp = (path, received, errors) => {\n\t\terrors.push({\n\t\t\tpath,\n\t\t\treceived,\n\t\t\tmessage: `property ${path} is not declared in the sealed model definition`\n\t\t})\n\t},\n\n\tcast = (obj, defNode = []) => {\n\t\tif (!obj || isPlainObject(defNode) || isModelInstance(obj))\n\t\t\treturn obj // no value or not leaf or already a model instance\n\n\t\tlet def = parseDefinition(defNode),\n\t\t\tsuitableModels = []\n\n\t\tfor (let part of def) {\n\t\t\tif (is(Model, part) && part.test(obj))\n\t\t\t\tsuitableModels.push(part)\n\t\t}\n\n\t\tif (suitableModels.length === 1) {\n\t\t\t// automatically cast to suitable model when explicit (duck typing)\n\t\t\tlet duck = suitableModels[0];\n\t\t\treturn is(ObjectModel, duck) ? new duck(obj) : duck(obj)\n\t\t}\n\n\t\tif (suitableModels.length > 1)\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\n\n\t\treturn obj\n\t},\n\n\tcheckUndeclaredProps = (obj, def, errors, path) => {\n\t\tObject.keys(obj).map(key => {\n\t\t\tlet val = obj[key],\n\t\t\t\tsubpath = formatPath(path, key)\n\t\t\tif (!has(def, key)) rejectUndeclaredProp(subpath, val, errors)\n\t\t\telse if (isPlainObject(val)) checkUndeclaredProps(val, def[key], errors, subpath)\n\t\t})\n\t},\n\n\tgetProxy = (model, obj, def, path, privateAccess) => {\n\t\tif (!isPlainObject(def)) return cast(obj, def)\n\n\t\tconst grantTemporaryPrivateAccess = f => proxifyFn(f, (fn, ctx, args) => {\n\t\t\tprivateAccess = true;\n\t\t\tlet result = Reflect.apply(fn, ctx, args);\n\t\t\tprivateAccess = false;\n\t\t\treturn result\n\t\t})\n\n\t\treturn new Proxy(obj, {\n\n\t\t\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\n\n\t\t\tget(o, key) {\n\t\t\t\tif (key === _original) return o\n\t\t\t\tif (key === _get) return grantTemporaryPrivateAccess(prop => o[prop])\n\n\t\t\t\tif (typeof key !== \"string\") return Reflect.get(o, key)\n\n\t\t\t\tlet newPath = formatPath(path, key),\n\t\t\t\t\tdefPart = def[key];\n\n\t\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\n\t\t\t\t\tcannot(`access to private property ${newPath}`, model)\n\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\n\t\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(o[key]) && key !== \"constructor\") {\n\t\t\t\t\treturn grantTemporaryPrivateAccess(o[key])\n\t\t\t\t}\n\n\t\t\t\tif (isPlainObject(defPart) && !o[key]) {\n\t\t\t\t\to[key] = {} // null-safe traversal\n\t\t\t\t}\n\n\t\t\t\treturn getProxy(model, o[key], defPart, newPath, privateAccess)\n\t\t\t},\n\n\t\t\tset(o, key, val) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\n\t\t\t\t\tnewPath => Reflect.set(o, key, getProxy(model, val, def[key], newPath))\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tdeleteProperty(o, key) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\n\t\t\t},\n\n\t\t\tdefineProperty(o, key, args) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\n\t\t\t},\n\n\t\t\thas(o, key) {\n\t\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\n\t\t\t},\n\n\t\t\townKeys(o) {\n\t\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\n\t\t\t},\n\n\t\t\tgetOwnPropertyDescriptor(o, key) {\n\t\t\t\tlet descriptor;\n\t\t\t\tif (!model.conventionForPrivate(key)) {\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\n\t\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key];\n\t\t\t\t}\n\n\t\t\t\treturn descriptor\n\t\t\t}\n\t\t})\n\t}\n\n\nexport function Model(def, params) {\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\n}\n\nObject.assign(Model.prototype, {\n\tname: \"Model\",\n\tassertions: [],\n\n\tconventionForConstant: key => key.toUpperCase() === key,\n\tconventionForPrivate: key => key[0] === \"_\",\n\n\ttoString(stack) {\n\t\treturn formatDefinition(this.definition, stack)\n\t},\n\n\tas(name) {\n\t\tdefine(this, \"name\", name);\n\t\treturn this\n\t},\n\n\tdefaultTo(val) {\n\t\tthis.default = val\n\t\treturn this\n\t},\n\n\t[_validate](obj, path, errors, stack) {\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\n\t\tcheckAssertions(obj, this, path, errors)\n\t},\n\n\tvalidate(obj, errorCollector) {\n\t\tthis[_validate](obj, null, this.errors, [])\n\t\treturn !unstackErrors(this, errorCollector)\n\t},\n\n\ttest(obj) {\n\t\tlet model = this;\n\t\twhile (!has(model, \"errorCollector\")) {\n\t\t\tmodel = getProto(model)\n\t\t}\n\n\t\tlet initialErrorCollector = model.errorCollector,\n\t\t\tfailed;\n\n\t\tmodel.errorCollector = () => {\n\t\t\tfailed = true\n\t\t}\n\n\t\tnew this(obj) // may trigger this.errorCollector\n\n\t\tmodel.errorCollector = initialErrorCollector\n\t\treturn !failed\n\t},\n\n\terrorCollector(errors) {\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\n\t\tthrow e\n\t},\n\n\tassert(assertion, description = format(assertion)) {\n\t\tdefine(assertion, \"description\", description)\n\t\tthis.assertions = this.assertions.concat(assertion)\n\t\treturn this\n\t}\n})\n\n\nexport function BasicModel(def) {\n\tlet model = function (val = model.default) {\n\t\treturn model.validate(val) ? val : undefined\n\t}\n\n\tsetConstructor(model, BasicModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(BasicModel, Model, {\n\textend(...newParts) {\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\n\t\tfor (let part of newParts) {\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\n\t\t}\n\n\t\treturn child\n\t}\n})\n\n\nexport function ObjectModel(def, params) {\n\tlet model = function (obj = model.default) {\n\t\tif (!is(model, this)) return new model(obj)\n\t\tif (is(model, obj)) return obj\n\n\t\tif (!is(Object, obj) && obj !== undefined) {\n\t\t\tstackError(model.errors, Object, obj);\n\t\t}\n\n\t\tmerge(this, model[_constructor](obj), true)\n\n\t\tif (!model.validate(this)) return\n\t\treturn getProxy(model, this, model.definition)\n\t}\n\n\tObject.assign(model, params)\n\textend(model, Object)\n\tsetConstructor(model, ObjectModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(ObjectModel, Model, {\n\tsealed: false,\n\n\tdefaults(p) {\n\t\tObject.assign(this.prototype, p)\n\t\treturn this\n\t},\n\n\ttoString(stack) {\n\t\treturn format(this.definition, stack)\n\t},\n\n\textend(...newParts) {\n\t\tlet def = Object.assign({}, this.definition),\n\t\t\tnewAssertions = [],\n\t\t\tproto = {}\n\n\t\tmerge(proto, this.prototype, false)\n\n\t\tfor (let part of newParts) {\n\t\t\tif (is(Model, part)) {\n\t\t\t\tmerge(def, part.definition, true)\n\t\t\t\tnewAssertions.push(...part.assertions)\n\t\t\t}\n\t\t\tif (isFunction(part)) merge(proto, part.prototype, true)\n\t\t\tif (isObject(part)) merge(def, part, true)\n\t\t}\n\n\t\tlet submodel = extendModel(new ObjectModel(def), this, proto)\n\t\tsubmodel.assertions = [...this.assertions, ...newAssertions]\n\n\t\tif (getProto(this) !== ObjectModel.prototype) { // extended class\n\t\t\tsubmodel[_constructor] = (obj) => {\n\t\t\t\tlet parentInstance = new this(obj)\n\t\t\t\tmerge(obj, parentInstance, true) // get modified props from parent class constructor\n\t\t\t\treturn obj\n\t\t\t}\n\t\t}\n\n\t\treturn submodel\n\t},\n\n\t[_constructor]: o => o,\n\n\t[_validate](obj, path, errors, stack) {\n\t\tif (isObject(obj)) {\n\t\t\tlet def = this.definition\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\n\t\t\tif (this.sealed) checkUndeclaredProps(obj, def, errors)\n\t\t}\n\t\telse stackError(errors, this, obj, path)\n\n\t\tcheckAssertions(obj, this, path, errors)\n\t}\n})","import { _original, initModel } from \"./object-model.js\"\nimport { extend, has, isFunction, proxifyFn, proxifyModel, setConstructor } from \"./helpers.js\"\n\nexport const initListModel = (base, constructor, def, init, clone, mutators, otherTraps = {}) => {\n\n\tlet model = function (list = model.default) {\n\t\tlist = init(list)\n\n\t\tif (model.validate(list)) return proxifyModel(list, model, Object.assign({\n\t\t\tget(l, key) {\n\t\t\t\tif (key === _original) return l\n\n\t\t\t\tlet val = l[key];\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\n\t\t\t\t\tif (has(mutators, key)) {\n\t\t\t\t\t\tif (mutators[key]) args = mutators[key](args) // autocast method args\n\n\t\t\t\t\t\tlet testingClone = clone(l)\n\t\t\t\t\t\tfn.apply(testingClone, args)\n\t\t\t\t\t\tmodel.validate(testingClone)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn fn.apply(l, args)\n\t\t\t\t}) : val\n\t\t\t}\n\t\t}, otherTraps))\n\t}\n\n\textend(model, base)\n\tsetConstructor(model, constructor)\n\tinitModel(model, def)\n\treturn model\n}","import { _validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, formatDefinition, Model, stackError, unstackErrors } from \"./object-model.js\"\nimport { extend } from \"./helpers.js\"\nimport { initListModel } from \"./list-model.js\";\n\nexport default function ArrayModel(def) {\n\tlet castAll = args => args.map(arg => cast(arg, def))\n\n\tlet model = initListModel(\n\t\tArray,\n\t\tArrayModel,\n\t\tdef,\n\t\ta => Array.isArray(a) ? castAll(a) : a,\n\t\ta => [...a],\n\t\t{\n\t\t\t\"copyWithin\": 0,\n\t\t\t\"fill\": ([val, ...rest]) => [cast(val, def), ...rest],\n\t\t\t\"pop\": 0,\n\t\t\t\"push\": castAll,\n\t\t\t\"reverse\": 0,\n\t\t\t\"shift\": 0,\n\t\t\t\"sort\": 0,\n\t\t\t\"splice\": ([start, end, ...vals]) => [start, end, ...castAll(vals)],\n\t\t\t\"unshift\": castAll,\n\t\t},\n\t\t{\n\t\t\tset(arr, key, val) {\n\t\t\t\treturn setArrayKey(arr, key, val, model)\n\t\t\t},\n\n\t\t\tdeleteProperty(arr, key) {\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\n\t\t\t}\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(ArrayModel, Model, {\n\ttoString(stack) {\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](arr, path, errors, stack) {\n\t\tif (Array.isArray(arr))\n\t\t\tarr.forEach((a, i) => {\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack)\n\t\t\t})\n\t\telse stackError(errors, this, arr, path)\n\n\t\tcheckAssertions(arr, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})\n\nlet setArrayKey = (array, key, value, model) => {\n\tlet path = `Array[${key}]`;\n\tif (parseInt(key) === +key && key >= 0)\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [])\n\n\tlet testArray = [...array]\n\ttestArray[key] = value\n\tcheckAssertions(testArray, model, path)\n\tlet isSuccess = !unstackErrors(model)\n\tif (isSuccess) array[key] = value\n\treturn isSuccess\n}","import { _original, _validate, checkAssertions, checkDefinition, extendDefinition, extendModel, format, formatDefinition, initModel, Model, stackError, unstackErrors } from \"./object-model.js\"\nimport { extend, isFunction, proxifyModel, setConstructor } from \"./helpers.js\"\n\n\nexport default function FunctionModel(...argsDef) {\n\n\tlet model = function (fn = model.default) {\n\t\tif (!model.validate(fn)) return\n\t\treturn proxifyModel(fn, model, {\n\t\t\tget(fn, key) {\n\t\t\t\tif (key === _original) return fn\n\t\t\t\treturn fn[key]\n\t\t\t},\n\n\t\t\tapply(fn, ctx, args) {\n\t\t\t\tlet def = model.definition\n\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [])\n\t\t\t\t})\n\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\n\n\t\t\t\tlet result\n\t\t\t\tif (!model.errors.length) {\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\n\t\t\t\t\tif (\"return\" in def)\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [])\n\t\t\t\t}\n\t\t\t\tunstackErrors(model)\n\t\t\t\treturn result\n\t\t\t}\n\t\t});\n\t}\n\n\textend(model, Function)\n\tsetConstructor(model, FunctionModel)\n\tinitModel(model, { arguments: argsDef })\n\n\treturn model\n}\n\nextend(FunctionModel, Model, {\n\ttoString(stack = []) {\n\t\tlet out = `Function(${this.definition.arguments.map(\n\t\t\targDef => formatDefinition(argDef, [...stack])\n\t\t).join(\", \")})`\n\n\t\tif (\"return\" in this.definition) {\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\n\t\t}\n\t\treturn out\n\t},\n\n\treturn(def) {\n\t\tthis.definition.return = def\n\t\treturn this\n\t},\n\n\textend(newArgs, newReturns) {\n\t\tlet args = this.definition.arguments,\n\t\t\tmixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\n\t\t\tmixedReturns = extendDefinition(this.definition.return, newReturns)\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\n\t},\n\n\t[_validate](f, path, errors) {\n\t\tif (!isFunction(f)) stackError(errors, \"Function\", f, path)\n\t}\n})\n\nFunctionModel.prototype.assert(function numberOfArgs(args) {\n\treturn (args.length > this.definition.arguments.length) ? args : true\n}, function (args) {\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\n})","import { _validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, format, formatDefinition, Model, stackError } from \"./object-model.js\";\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function MapModel(key, value) {\n\n\tlet castKeyValue = ([k, v]) => [cast(k, key), cast(v, value)]\n\n\treturn initListModel(\n\t\tMap,\n\t\tMapModel,\n\t\t{ key, value },\n\t\tit => isIterable(it) ? new Map([...it].map(castKeyValue)) : it,\n\t\tmap => new Map(map),\n\t\t{\n\t\t\t\"set\": castKeyValue,\n\t\t\t\"delete\": 0,\n\t\t\t\"clear\": 0\n\t\t}\n\t)\n}\n\nextend(MapModel, Model, {\n\ttoString(stack) {\n\t\tlet { key, value } = this.definition\n\t\treturn `Map of ${formatDefinition(key, stack)} : ${formatDefinition(value, stack)}`\n\t},\n\n\t[_validate](map, path, errors, stack) {\n\t\tif (is(Map, map)) {\n\t\t\tpath = path || 'Map'\n\t\t\tfor (let [key, value] of map) {\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, map, path)\n\n\t\tcheckAssertions(map, this, path, errors)\n\t},\n\n\textend(keyPart, valuePart) {\n\t\tlet { key, value } = this.definition\n\t\treturn extendModel(new MapModel(extendDefinition(key, keyPart), extendDefinition(value, valuePart)), this)\n\t}\n})","import { _validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, formatDefinition, Model, stackError } from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function SetModel(def) {\n\treturn initListModel(\n\t\tSet,\n\t\tSetModel,\n\t\tdef,\n\t\tit => isIterable(it) ? new Set([...it].map(val => cast(val, def))) : it,\n\t\tset => new Set(set),\n\t\t{\n\t\t\t\"add\": ([val]) => [cast(val, def)],\n\t\t\t\"delete\": 0,\n\t\t\t\"clear\": 0\n\t\t}\n\t)\n}\n\nextend(SetModel, Model, {\n\ttoString(stack) {\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](set, path, errors, stack) {\n\t\tif (is(Set, set)) {\n\t\t\tfor (let item of set.values()) {\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, set, path)\n\t\tcheckAssertions(set, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})"],"names":["getProto","x","Object","getPrototypeOf","setProto","p","setPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isFunction","f","isObject","isPlainObject","prototype","isIterable","Symbol","iterator","proxifyFn","fn","apply","Proxy","proxifyModel","val","model","traps","assign","merge","target","src","deep","key","define","value","enumerable","defineProperty","writable","configurable","setConstructor","constructor","extend","child","parent","props","create","_constructor","_validate","_original","_get","initModel","def","definition","assertions","name","extendModel","newProps","push","stackError","errors","expected","received","path","message","unstackErrors","errorCollector","nbErrors","length","map","err","Array","isArray","d","format","join","toString","call","match","bettertypeof","isModelInstance","i","Model","parseDefinition","keys","undefined","formatDefinition","stack","parts","extendDefinition","newParts","reduce","ext","concat","filter","index","self","indexOf","checkDefinition","indexFound","cast","formatPath","some","part","checkDefinitionPart","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","slice","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","isInDefinition","sealed","rejectUndeclaredProp","msg","defNode","suitableModels","duck","ObjectModel","console","warn","checkUndeclaredProps","subpath","getProxy","grantTemporaryPrivateAccess","ctx","args","Reflect","[object Object]","get","defPart","set","deleteProperty","ownKeys","descriptor","params","BasicModel","default","validate","this","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","newAssertions","proto","submodel","parentInstance","initListModel","base","init","clone","mutators","otherTraps","list","l","testingClone","ArrayModel","castAll","arg","a","copyWithin","fill","rest","pop","reverse","shift","sort","splice","start","end","vals","arr","setArrayKey","forEach","array","parseInt","testArray","isSuccess","FunctionModel","argsDef","arguments","argDef","return","Function","MapModel","castKeyValue","k","v","it","delete","clear","SetModel","add","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","keyPart","valuePart","values"],"mappings":"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"}