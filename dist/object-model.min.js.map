{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/list-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\r\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\r\n\tgetProto = Object.getPrototypeOf,\r\n\tsetProto = Object.setPrototypeOf,\r\n\r\n\thas = (o, prop) => Object.prototype.hasOwnProperty.call(o, prop),\r\n\tis = (Constructor, obj) => obj instanceof Constructor,\r\n\tisFunction = f => typeof f === \"function\",\r\n\tisObject = o => o && typeof o === \"object\",\r\n\tisPlainObject = o => isObject(o) && getProto(o) === Object.prototype,\r\n\tisIterable = x => x && isFunction(x[Symbol.iterator]),\r\n\r\n\tproxify = (val, traps) => new Proxy(val, traps),\r\n\r\n\tmerge = (target, src = {}) => {\r\n\t\tfor (let key in src) {\r\n\t\t\tif (isPlainObject(src[key])) {\r\n\t\t\t\tlet o = {}\r\n\t\t\t\tmerge(o, target[key])\r\n\t\t\t\tmerge(o, src[key])\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target\r\n\t},\r\n\r\n\tdefine = (obj, key, value, enumerable = false) => {\r\n\t\tObject.defineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\r\n\t},\r\n\r\n\textend = (child, parent, props) => {\r\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\r\n\t\t\tconstructor: {\r\n\t\t\t\tvalue: child,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t}\r\n\t\t}), props)\r\n\t\tsetProto(child, parent)\r\n\t}","import {\r\n\tbettertypeof, define, extend, getProto, has, is, isFunction, isObject, isPlainObject,\r\n\tmerge, proxify, setProto\r\n} from \"./helpers.js\"\r\n\r\nexport const\r\n\t_check = Symbol(),\r\n\t_checked = Symbol(), // used to skip validation at instanciation for perf\r\n\t_original = Symbol(), // used to bypass proxy\r\n\r\n\tinitModel = (def, constructor, parent, init, getTraps, useNew) => {\r\n\t\tlet model = function (val = model.default, mode) {\r\n\t\t\tif (useNew && !is(model, this)) return new model(val)\r\n\t\t\tif (init) val = init(val, model, this)\r\n\r\n\t\t\tif (mode === _checked || check(model, val))\r\n\t\t\t\treturn getTraps ? proxify(val, getTraps(model)) : val\r\n\t\t}\r\n\r\n\t\tif (parent) extend(model, parent)\r\n\t\tsetProto(model, constructor.prototype)\r\n\t\tmodel.constructor = constructor\r\n\t\tmodel.definition = def\r\n\t\tmodel.assertions = [...model.assertions]\r\n\t\tdefine(model, \"errors\", [])\r\n\t\tdelete model.name\r\n\t\treturn model\r\n\t},\r\n\r\n\tinitObjectModel = (obj, model, _this) => {\r\n\t\tif (is(model, obj)) return obj\r\n\r\n\t\tif (!isObject(obj) && !isFunction(obj) && obj !== undefined) {\r\n\t\t\tstackError(model.errors, Object, obj)\r\n\t\t}\r\n\r\n\t\tmerge(_this, model.default)\r\n\t\tif (model.parentClass) merge(obj, new model.parentClass(obj))\r\n\t\tmerge(_this, obj)\r\n\t\treturn _this\r\n\t},\r\n\r\n\textendModel = (child, parent, newProps) => {\r\n\t\textend(child, parent, newProps)\r\n\t\tchild.assertions.push(...parent.assertions)\r\n\t\treturn child\r\n\t},\r\n\r\n\tstackError = (errors, expected, received, path, message) => {\r\n\t\terrors.push({ expected, received, path, message })\r\n\t},\r\n\r\n\tunstackErrors = (model, collector = model.errorCollector) => {\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors > 0) {\r\n\t\t\tlet errors = model.errors.map(err => {\r\n\t\t\t\tif (!err.message) {\r\n\t\t\t\t\tlet def = [].concat(err.expected)\r\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\r\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\r\n\t\t\t\t}\r\n\t\t\t\treturn err\r\n\t\t\t})\r\n\r\n\t\t\tmodel.errors.length = 0\r\n\t\t\tcollector.call(model, errors) // throw all errors collected\r\n\t\t}\r\n\t\treturn nbErrors\r\n\t},\r\n\r\n\tisModelInstance = i => i && getProto(i) && is(Model, getProto(i).constructor),\r\n\r\n\tparseDefinition = (def) => {\r\n\t\tif (isPlainObject(def)) {\r\n\t\t\tObject.keys(def).map(key => { def[key] = parseDefinition(def[key]) })\r\n\t\t}\r\n\t\telse if (!Array.isArray(def)) return [def]\r\n\t\telse if (def.length === 1) return [...def, undefined, null]\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tformatDefinition = (def, stack) => {\r\n\t\tlet parts = parseDefinition(def).map(d => format(d, stack))\r\n\t\treturn parts.length > 1 ? `(${parts.join(\" or \")})` : parts[0]\r\n\t},\r\n\r\n\textendDefinition = (def, newParts = []) => {\r\n\t\tnewParts = [].concat(newParts)\r\n\t\tif (newParts.length > 0) {\r\n\t\t\tdef = newParts\r\n\t\t\t\t.reduce((def, ext) => def.concat(ext), [].concat(def)) // clone to lose ref\r\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\r\n\t\t}\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tcheck = (model, obj) => {\r\n\t\tmodel[_check](obj, null, model.errors, [], true);\r\n\t\treturn !unstackErrors(model)\r\n\t},\r\n\r\n\tcheckDefinition = (obj, def, path, errors, stack, shouldCast) => {\r\n\t\tlet indexFound = stack.indexOf(def)\r\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\r\n\t\t\treturn obj // if found twice in call stack, cycle detected, skip validation\r\n\r\n\t\tif (is(Model, def)) {\r\n\t\t\tif (shouldCast) obj = cast(obj, def)\r\n\t\t\tdef[_check](obj, path, errors, stack.concat(def))\r\n\t\t}\r\n\t\telse if (isPlainObject(def)) {\r\n\t\t\tObject.keys(def).map(key => {\r\n\t\t\t\tlet val = obj ? obj[key] : undefined\r\n\t\t\t\tcheckDefinition(val, def[key], formatPath(path, key), errors, stack, shouldCast)\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet pdef = parseDefinition(def)\r\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack))) {\r\n\t\t\t\treturn shouldCast ? cast(obj, def) : obj\r\n\t\t\t}\r\n\r\n\t\t\tstackError(errors, def, obj, path)\r\n\t\t}\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\tcheckDefinitionPart = (obj, def, path, stack, shouldCast) => {\r\n\t\tif (def === Any) return true\r\n\t\tif (obj == null) return obj === def\r\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\r\n\t\t\tlet errors = []\r\n\t\t\tcheckDefinition(obj, def, path, errors, stack, shouldCast)\r\n\t\t\treturn !errors.length\r\n\t\t}\r\n\t\tif (is(RegExp, def)) return def.test(obj)\r\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\t\treturn obj === def\r\n\t\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t\t|| obj.constructor === def\r\n\t},\r\n\r\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\r\n\t\tfor (let assertion of model.assertions) {\r\n\t\t\tlet result\r\n\t\t\ttry {\r\n\t\t\t\tresult = assertion.call(model, obj)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tresult = err\r\n\t\t\t}\r\n\t\t\tif (result !== true) {\r\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\r\n\t\t\t\t\t+ `for ${path ? path + \" =\" : \"value\"} ${format(value)}`\r\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tformat = (obj, stack = []) => {\r\n\t\tif (stack.length > 15 || stack.includes(obj)) return \"...\"\r\n\t\tif (obj === null || obj === undefined) return String(obj)\r\n\t\tif (typeof obj === \"string\") return `\"${obj}\"`\r\n\t\tif (is(Model, obj)) return obj.toString(stack)\r\n\r\n\t\tstack.unshift(obj)\r\n\r\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\r\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\r\n\t\tif (Array.isArray(obj)) return `[${obj.map(item => format(item, stack)).join(\", \")}]`\r\n\t\tif (obj.toString && obj.toString !== Object.prototype.toString) return obj.toString()\r\n\t\tif (isObject(obj)) {\r\n\t\t\tlet props = Object.keys(obj),\r\n\t\t\t\tindent = \"\\t\".repeat(stack.length)\r\n\t\t\treturn `{${props.map(\r\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], [...stack])}`\r\n\t\t\t).join(\", \")} ${props.length ? `\\n${indent.slice(1)}` : \"\"}}`\r\n\t\t}\r\n\r\n\t\treturn String(obj)\r\n\t},\r\n\r\n\tformatPath = (path, key) => path ? path + \".\" + key : key,\r\n\r\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\r\n\t\tlet newPath = formatPath(path, key),\r\n\t\t\tisPrivate = model.conventionForPrivate(key),\r\n\t\t\tisConstant = model.conventionForConstant(key),\r\n\t\t\tisOwnProperty = has(o, key),\r\n\t\t\tinitialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\r\n\r\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\r\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\r\n\r\n\t\tapplyMutation(newPath)\r\n\t\tif (has(def, key)) checkDefinition(o[key], def[key], newPath, model.errors, [])\r\n\t\tcheckAssertions(o, model, newPath)\r\n\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors) {\r\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\r\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\r\n\r\n\t\t\tunstackErrors(model)\r\n\t\t}\r\n\r\n\t\treturn !nbErrors\r\n\t},\r\n\r\n\tcannot = (msg, model) => {\r\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\r\n\t},\r\n\r\n\tcast = (obj, defNode = []) => {\r\n\t\tif (!obj || isPlainObject(defNode) || is(BasicModel, defNode) || isModelInstance(obj))\r\n\t\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\t\tlet def = parseDefinition(defNode),\r\n\t\t\tsuitableModels = []\r\n\r\n\t\tfor (let part of def) {\r\n\t\t\tif (is(Model, part) && !is(BasicModel, part) && part.test(obj))\r\n\t\t\t\tsuitableModels.push(part)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length === 1) {\r\n\t\t\t// automatically cast to suitable model when explicit (autocasting)\r\n\t\t\treturn new suitableModels[0](obj, _checked)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length > 1)\r\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\r\n\tgetProp = (val, model, def, path, privateAccess) => {\r\n\t\tif (!isPlainObject(def)) return cast(val, def)\r\n\t\treturn proxify(val, getTraps(model, def, path, privateAccess))\r\n\t},\r\n\r\n\tgetTraps = (model, def, path, privateAccess) => {\r\n\t\tconst grantPrivateAccess = f => proxify(f, {\r\n\t\t\tapply(fn, ctx, args) {\r\n\t\t\t\tprivateAccess = true\r\n\t\t\t\tlet result = Reflect.apply(fn, ctx, args)\r\n\t\t\t\tprivateAccess = false\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn {\r\n\t\t\tgetPrototypeOf: obj => path ? Object.prototype : getProto(obj),\r\n\r\n\t\t\tget(o, key) {\r\n\t\t\t\tif (key === _original) return o\r\n\r\n\t\t\t\tif (typeof key !== \"string\") return Reflect.get(o, key)\r\n\r\n\t\t\t\tlet newPath = formatPath(path, key),\r\n\t\t\t\t\tdefPart = def[key]\r\n\r\n\t\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\r\n\t\t\t\t\tcannot(`access to private property ${newPath}`, model)\r\n\t\t\t\t\tunstackErrors(model)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\r\n\t\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isFunction(o[key]) && key !== \"constructor\" && !privateAccess) {\r\n\t\t\t\t\treturn grantPrivateAccess(o[key])\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isPlainObject(defPart) && !o[key]) {\r\n\t\t\t\t\to[key] = {} // null-safe traversal\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn getProp(o[key], model, defPart, newPath, privateAccess)\r\n\t\t\t},\r\n\r\n\t\t\tset(o, key, val) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\r\n\t\t\t\t\tnewPath => Reflect.set(o, key, getProp(val, model, def[key], newPath))\r\n\t\t\t\t)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(o, key) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\r\n\t\t\t},\r\n\r\n\t\t\tdefineProperty(o, key, args) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\r\n\t\t\t},\r\n\r\n\t\t\thas(o, key) {\r\n\t\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t\t\t},\r\n\r\n\t\t\townKeys(o) {\r\n\t\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\r\n\t\t\t},\r\n\r\n\t\t\tgetOwnPropertyDescriptor(o, key) {\r\n\t\t\t\tlet descriptor\r\n\t\t\t\tif (!model.conventionForPrivate(key)) {\r\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key)\r\n\t\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key]\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn descriptor\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\nexport function Model(def, params) {\r\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\r\n}\r\n\r\nObject.assign(Model.prototype, {\r\n\tname: \"Model\",\r\n\tassertions: [],\r\n\r\n\tconventionForConstant: key => key.toUpperCase() === key,\r\n\tconventionForPrivate: key => key[0] === \"_\",\r\n\r\n\ttoString(stack) {\r\n\t\treturn formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\tas(name) {\r\n\t\tdefine(this, \"name\", name)\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val) {\r\n\t\tthis.default = val\r\n\t\treturn this\r\n\t},\r\n\r\n\t[_check](obj, path, errors, stack) {\r\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t},\r\n\r\n\ttest(obj, errorCollector) {\r\n\t\tlet model = this\r\n\t\twhile (!has(model, \"errorCollector\")) {\r\n\t\t\tmodel = getProto(model)\r\n\t\t}\r\n\r\n\t\tlet initialErrorCollector = model.errorCollector,\r\n\t\t\tfailed\r\n\r\n\t\tmodel.errorCollector = errors => {\r\n\t\t\tfailed = true\r\n\t\t\tif (errorCollector) errorCollector.call(this, errors)\r\n\t\t}\r\n\r\n\t\tnew this(obj) // may trigger errorCollector\r\n\r\n\t\tmodel.errorCollector = initialErrorCollector\r\n\t\treturn !failed\r\n\t},\r\n\r\n\terrorCollector(errors) {\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join(\"\\n\"))\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\tassert(assertion, description = format(assertion)) {\r\n\t\tdefine(assertion, \"description\", description)\r\n\t\tthis.assertions = this.assertions.concat(assertion)\r\n\t\treturn this\r\n\t}\r\n})\r\n\r\n\r\nexport function BasicModel(def) {\r\n\treturn initModel(def, BasicModel)\r\n}\r\n\r\nextend(BasicModel, Model, {\r\n\textend(...newParts) {\r\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\r\n\t\t}\r\n\r\n\t\treturn child\r\n\t}\r\n})\r\n\r\nexport function ObjectModel(def) {\r\n\treturn initModel(def, ObjectModel, Object, initObjectModel, model => getTraps(model, def), true)\r\n}\r\n\r\nextend(ObjectModel, Model, {\r\n\tdefaultTo(obj) {\r\n\t\tlet def = this.definition\r\n\t\tfor (let key in obj) {\r\n\t\t\tif (has(def, key)) {\r\n\t\t\t\tobj[key] = checkDefinition(obj[key], def[key], key, this.errors, [], true)\r\n\t\t\t}\r\n\t\t}\r\n\t\tunstackErrors(this)\r\n\t\tthis.default = obj;\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack) {\r\n\t\treturn format(this.definition, stack)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\tlet definition = { ...this.definition },\r\n\t\t\tproto = { ...this.prototype },\r\n\t\t\tdefaults = { ...this.default },\r\n\t\t\tnewAssertions = []\r\n\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(Model, part)) {\r\n\t\t\t\tmerge(definition, part.definition)\r\n\t\t\t\tmerge(defaults, part.default)\r\n\t\t\t\tnewAssertions.push(...part.assertions)\r\n\t\t\t}\r\n\t\t\tif (isFunction(part)) merge(proto, part.prototype)\r\n\t\t\tif (isObject(part)) merge(definition, part)\r\n\t\t}\r\n\r\n\t\tlet submodel = extendModel(new ObjectModel(definition), this, proto).defaultTo(defaults)\r\n\t\tsubmodel.assertions = [...this.assertions, ...newAssertions]\r\n\r\n\t\tif (getProto(this) !== ObjectModel.prototype) { // extended class\r\n\t\t\tsubmodel.parentClass = this\r\n\t\t}\r\n\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t[_check](obj, path, errors, stack, shouldCast) {\r\n\t\tif (isObject(obj)) {\r\n\t\t\tlet def = this.definition\r\n\t\t\tcheckDefinition(obj[_original] || obj, def, path, errors, stack, shouldCast)\r\n\t\t}\r\n\t\telse stackError(errors, this, obj, path)\r\n\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t}\r\n})\r\n\r\nexport const Any = proxify(BasicModel(), {\r\n\tapply(target, ctx, [def]) {\r\n\t\treturn Object.assign(Object.create(Any), { definition: def })\r\n\t}\r\n})\r\nAny.definition = Any\r\nAny.toString = () => \"Any\"\r\n\r\nAny.remaining = function (def) { this.definition = def }\r\nextend(Any.remaining, Any, {\r\n\ttoString() { return \"...\" + formatDefinition(this.definition) }\r\n})\r\nAny[Symbol.iterator] = function* () { yield new Any.remaining(this.definition) }","\r\nimport { _original, checkAssertions, checkDefinition, initModel, unstackErrors } from \"./object-model.js\"\r\nimport { has, isFunction, proxify } from \"./helpers.js\"\r\n\r\nexport const initListModel = (base, constructor, def, init, clone, mutators, otherTraps) => {\r\n\r\n\treturn initModel(def, constructor, base, init, model => Object.assign({\r\n\t\tgetPrototypeOf: () => model.prototype,\r\n\t\tget(l, key) {\r\n\t\t\tif (key === _original) return l\r\n\r\n\t\t\tlet val = l[key]\r\n\t\t\treturn isFunction(val) ? proxify(val, {\r\n\t\t\t\tapply(fn, ctx, args) {\r\n\t\t\t\t\tif (has(mutators, key)) {\r\n\t\t\t\t\t\t// indexes of arguments to check def + cast\r\n\t\t\t\t\t\tlet [begin, end = args.length - 1, getArgDef] = mutators[key]\r\n\t\t\t\t\t\tfor (let i = begin; i <= end; i++) {\r\n\t\t\t\t\t\t\tlet argDef = getArgDef ? getArgDef(i) : model.definition\r\n\t\t\t\t\t\t\targs[i] = checkDefinition(\r\n\t\t\t\t\t\t\t\targs[i],\r\n\t\t\t\t\t\t\t\targDef,\r\n\t\t\t\t\t\t\t\t`${base.name}.${key} arguments[${i}]`,\r\n\t\t\t\t\t\t\t\tmodel.errors,\r\n\t\t\t\t\t\t\t\t[],\r\n\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (model.assertions.length > 0) {\r\n\t\t\t\t\t\t\tlet testingClone = clone(l)\r\n\t\t\t\t\t\t\tfn.apply(testingClone, args)\r\n\t\t\t\t\t\t\tcheckAssertions(testingClone, model, `after ${key} mutation`)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tunstackErrors(model)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn fn.apply(l, args)\r\n\t\t\t\t}\r\n\t\t\t}) : val\r\n\t\t}\r\n\t}, otherTraps))\r\n}","import {\r\n\t_original, _check, cast, checkAssertions, checkDefinition,\r\n\textendDefinition, extendModel, formatDefinition, Model, stackError, unstackErrors\r\n} from \"./object-model.js\"\r\nimport { initListModel } from \"./list-model.js\"\r\nimport { extend } from \"./helpers.js\"\r\n\r\nexport default function ArrayModel(initialDefinition) {\r\n\tlet model = initListModel(\r\n\t\tArray,\r\n\t\tArrayModel,\r\n\t\tinitialDefinition,\r\n\t\ta => Array.isArray(a) ? a.map(arg => cast(arg, model.definition)) : a,\r\n\t\ta => [...a],\r\n\t\t{\r\n\t\t\t\"copyWithin\": [],\r\n\t\t\t\"fill\": [0, 0],\r\n\t\t\t\"pop\": [],\r\n\t\t\t\"push\": [0],\r\n\t\t\t\"reverse\": [],\r\n\t\t\t\"shift\": [],\r\n\t\t\t\"sort\": [],\r\n\t\t\t\"splice\": [2],\r\n\t\t\t\"unshift\": [0]\r\n\t\t},\r\n\t\t{\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\treturn controlMutation(model, arr, key, val, (a, v) => a[key] = v, true)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(arr, key) {\r\n\t\t\t\treturn controlMutation(model, arr, key, undefined, a => delete a[key])\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\r\n\treturn model\r\n}\r\n\r\nextend(ArrayModel, Model, {\r\n\ttoString(stack) {\r\n\t\treturn \"Array of \" + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_check](arr, path, errors, stack) {\r\n\t\tif (Array.isArray(arr))\r\n\t\t\t(arr[_original] || arr).forEach((a, i) => checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack))\r\n\t\telse stackError(errors, this, arr, path)\r\n\r\n\t\tcheckAssertions(arr, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})\r\n\r\nlet controlMutation = (model, array, key, value, applyMutation, canBeExtended) => {\r\n\tlet path = `Array[${key}]`\r\n\tlet isInDef = (+key >= 0 && (canBeExtended || key in array))\r\n\tif (isInDef) value = checkDefinition(value, model.definition, path, model.errors, [], true)\r\n\r\n\tlet testArray = [...array]\r\n\tapplyMutation(testArray)\r\n\tcheckAssertions(testArray, model, path)\r\n\tlet isSuccess = !unstackErrors(model)\r\n\tif (isSuccess) applyMutation(array, value)\r\n\treturn isSuccess\r\n}","import {\r\n\t_check, _original, Any, checkAssertions, checkDefinition, extendDefinition, extendModel,\r\n\tformatDefinition, initModel, Model, stackError, unstackErrors\r\n} from \"./object-model.js\"\r\nimport { extend, is, isFunction } from \"./helpers.js\"\r\n\r\nexport default function FunctionModel(...argsDef) {\r\n\treturn initModel({ arguments: argsDef }, FunctionModel, Function, null, model => ({\r\n\t\tgetPrototypeOf: () => model.prototype,\r\n\r\n\t\tget(fn, key) {\r\n\t\t\treturn key === _original ? fn : fn[key]\r\n\t\t},\r\n\r\n\t\tapply(fn, ctx, args) {\r\n\t\t\tlet def = model.definition,\r\n\t\t\t\tremainingArgDef = def.arguments.find(argDef => is(Any.remaining, argDef)),\r\n\t\t\t\tnbArgsToCheck = remainingArgDef ? Math.max(args.length, def.arguments.length - 1) : def.arguments.length\r\n\r\n\t\t\tfor (let i = 0; i < nbArgsToCheck; i++) {\r\n\t\t\t\tlet argDef = remainingArgDef && i >= def.arguments.length - 1 ? remainingArgDef.definition : def.arguments[i]\r\n\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\r\n\t\t\t}\r\n\r\n\t\t\tcheckAssertions(args, model, \"arguments\")\r\n\r\n\t\t\tlet result\r\n\t\t\tif (!model.errors.length) {\r\n\t\t\t\tresult = Reflect.apply(fn, ctx, args)\r\n\t\t\t\tif (\"return\" in def)\r\n\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\r\n\t\t\t}\r\n\t\t\tunstackErrors(model)\r\n\t\t\treturn result\r\n\t\t}\r\n\t}))\r\n}\r\n\r\nextend(FunctionModel, Model, {\r\n\ttoString(stack = []) {\r\n\t\tlet out = `Function(${this.definition.arguments.map(\r\n\t\t\targDef => formatDefinition(argDef, [...stack])\r\n\t\t).join(\", \")})`\r\n\r\n\t\tif (\"return\" in this.definition) {\r\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\r\n\t\t}\r\n\t\treturn out\r\n\t},\r\n\r\n\treturn(def) {\r\n\t\tthis.definition.return = def\r\n\t\treturn this\r\n\t},\r\n\r\n\textend(newArgs, newReturns) {\r\n\t\tlet args = this.definition.arguments,\r\n\t\t\tmixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\r\n\t\t\tmixedReturns = extendDefinition(this.definition.return, newReturns)\r\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\r\n\t},\r\n\r\n\t[_check](f, path, errors) {\r\n\t\tif (!isFunction(f)) stackError(errors, \"Function\", f, path)\r\n\t}\r\n})","import {\r\n\t_check, cast, checkAssertions, checkDefinition,\r\n\textendDefinition, extendModel, format, formatDefinition, Model, stackError\r\n} from \"./object-model.js\"\r\nimport { initListModel } from \"./list-model.js\"\r\nimport { extend, is, isIterable } from \"./helpers.js\"\r\n\r\nexport default function MapModel(initialKeyDefinition, initialValueDefinition) {\r\n\tlet getDef = i => i === 0 ? model.definition.key : model.definition.value,\r\n\t\tmodel = initListModel(\r\n\t\t\tMap,\r\n\t\t\tMapModel,\r\n\t\t\t{ key: initialKeyDefinition, value: initialValueDefinition },\r\n\t\t\tit => isIterable(it) ? new Map([...it].map(pair => pair.map((x, i) => cast(x, getDef(i))))) : it,\r\n\t\t\tmap => new Map(map),\r\n\t\t\t{\r\n\t\t\t\t\"set\": [0, 1, getDef],\r\n\t\t\t\t\"delete\": [],\r\n\t\t\t\t\"clear\": []\r\n\t\t\t}\r\n\t\t)\r\n\r\n\treturn model\r\n}\r\n\r\nextend(MapModel, Model, {\r\n\ttoString(stack) {\r\n\t\treturn `Map of ${formatDefinition(this.definition.key, stack)} : ${formatDefinition(this.definition.value, stack)}`\r\n\t},\r\n\r\n\t[_check](map, path, errors, stack) {\r\n\t\tif (is(Map, map)) {\r\n\t\t\tpath = path || \"Map\"\r\n\t\t\tfor (let [key, value] of map) {\r\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\r\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, map, path)\r\n\r\n\t\tcheckAssertions(map, this, path, errors)\r\n\t},\r\n\r\n\textend(keyParts, valueParts) {\r\n\t\treturn extendModel(new MapModel(\r\n\t\t\textendDefinition(this.definition.key, keyParts),\r\n\t\t\textendDefinition(this.definition.value, valueParts)\r\n\t\t), this)\r\n\t}\r\n})","import {\r\n\t_check, cast, checkAssertions, checkDefinition,\r\n\textendDefinition, extendModel, formatDefinition, Model, stackError\r\n} from \"./object-model.js\"\r\nimport { initListModel } from \"./list-model.js\"\r\nimport { extend, is, isIterable } from \"./helpers.js\"\r\n\r\nexport default function SetModel(initialDefinition) {\r\n\tlet model = initListModel(\r\n\t\tSet,\r\n\t\tSetModel,\r\n\t\tinitialDefinition,\r\n\t\tit => isIterable(it) ? new Set([...it].map(val => cast(val, model.definition))) : it,\r\n\t\tset => new Set(set),\r\n\t\t{\r\n\t\t\t\"add\": [0, 0],\r\n\t\t\t\"delete\": [],\r\n\t\t\t\"clear\": []\r\n\t\t}\r\n\t)\r\n\r\n\treturn model\r\n}\r\n\r\nextend(SetModel, Model, {\r\n\ttoString(stack) {\r\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_check](set, path, errors, stack) {\r\n\t\tif (is(Set, set)) {\r\n\t\t\tfor (let item of set.values()) {\r\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, set, path)\r\n\t\tcheckAssertions(set, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})"],"names":["getProto","Object","getPrototypeOf","setProto","setPrototypeOf","has","o","prop","prototype","hasOwnProperty","call","is","Constructor","obj","isFunction","f","isObject","isPlainObject","isIterable","x","Symbol","iterator","proxify","val","traps","Proxy","merge","target","src","key","define","value","enumerable","defineProperty","writable","configurable","extend","child","parent","props","assign","create","constructor","_check","_checked","_original","initModel","def","init","getTraps","useNew","model","default","mode","this","check","definition","assertions","name","initObjectModel","_this","undefined","stackError","errors","parentClass","extendModel","newProps","push","expected","received","path","message","unstackErrors","collector","errorCollector","nbErrors","length","map","err","concat","d","format","join","toString","match","bettertypeof","isModelInstance","i","Model","parseDefinition","keys","Array","isArray","formatDefinition","stack","parts","extendDefinition","newParts","reduce","ext","filter","index","self","indexOf","checkDefinition","shouldCast","indexFound","cast","formatPath","some","part","checkDefinitionPart","Any","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","slice","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","msg","defNode","BasicModel","suitableModels","console","warn","getProp","[object Object]","Reflect","get","defPart","fn","ctx","args","apply","grantPrivateAccess","set","deleteProperty","ownKeys","descriptor","params","ObjectModel","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","proto","defaults","newAssertions","submodel","defaultTo","remaining","initListModel","base","clone","mutators","otherTraps","l","begin","end","getArgDef","argDef","testingClone","ArrayModel","initialDefinition","a","arg","copyWithin","fill","pop","reverse","shift","sort","splice","arr","v","forEach","array","canBeExtended","testArray","isSuccess","FunctionModel","argsDef","arguments","Function","remainingArgDef","find","nbArgsToCheck","Math","max","return","MapModel","initialKeyDefinition","initialValueDefinition","getDef","it","pair","delete","clear","SetModel","add","out","newArgs","newReturns","mixedArgs","mixedReturns","keyParts","valueParts","values"],"mappings":"AAAO,MAENA,EAAWC,OAAOC,eAClBC,EAAWF,OAAOG,eAElBC,EAAM,CAACC,EAAGC,IAASN,OAAOO,UAAUC,eAAeC,KAAKJ,EAAGC,GAC3DI,EAAK,CAACC,EAAaC,IAAQA,aAAeD,EAC1CE,EAAaC,GAAkB,mBAANA,EACzBC,EAAWV,GAAKA,GAAkB,iBAANA,EAC5BW,EAAgBX,GAAKU,EAASV,IAAMN,EAASM,KAAOL,OAAOO,UAC3DU,EAAaC,GAAKA,GAAKL,EAAWK,EAAEC,OAAOC,WAE3CC,EAAU,CAACC,EAAKC,IAAU,IAAIC,MAAMF,EAAKC,GAEzCE,EAAQ,CAACC,EAAQC,EAAM,MACtB,IAAK,IAAIC,KAAOD,EACf,GAAIX,EAAcW,EAAIC,IAAO,CAC5B,IAAIvB,EAAI,GACRoB,EAAMpB,EAAGqB,EAAOE,IAChBH,EAAMpB,EAAGsB,EAAIC,IACbF,EAAOE,GAAOvB,OAEdqB,EAAOE,GAAOD,EAAIC,GAGpB,OAAOF,GAGRG,EAAS,CAACjB,EAAKgB,EAAKE,EAAOC,GAAa,KACvC/B,OAAOgC,eAAepB,EAAKgB,EAAK,CAAEE,MAAAA,EAAOC,WAAAA,EAAYE,UAAU,EAAMC,cAAc,KAGpFC,EAAS,CAACC,EAAOC,EAAQC,KACxBF,EAAM7B,UAAYP,OAAOuC,OAAOvC,OAAOwC,OAAOH,EAAO9B,UAAW,CAC/DkC,YAAa,CACZX,MAAOM,EACPH,UAAU,EACVC,cAAc,KAEZI,GACJpC,EAASkC,EAAOC,IClCjBK,EAASvB,SACTwB,EAAWxB,SACXyB,EAAYzB,SAEZ0B,EAAY,CAACC,EAAKL,EAAaJ,EAAQU,EAAMC,EAAUC,KACtD,IAAIC,EAAQ,SAAU5B,EAAM4B,EAAMC,QAASC,GAC1C,OAAIH,IAAWvC,EAAGwC,EAAOG,MAAc,IAAIH,EAAM5B,IAC7CyB,IAAMzB,EAAMyB,EAAKzB,EAAK4B,EAAOG,OAE7BD,IAAST,GAAYW,EAAMJ,EAAO5B,GAC9B0B,EAAW3B,EAAQC,EAAK0B,EAASE,IAAU5B,OADnD,IAWD,OAPIe,GAAQF,EAAOe,EAAOb,GAC1BnC,EAASgD,EAAOT,EAAYlC,WAC5B2C,EAAMT,YAAcA,EACpBS,EAAMK,WAAaT,EACnBI,EAAMM,WAAa,IAAIN,EAAMM,YAC7B3B,EAAOqB,EAAO,SAAU,WACjBA,EAAMO,KACNP,GAGRQ,EAAkB,CAAC9C,EAAKsC,EAAOS,IAC1BjD,EAAGwC,EAAOtC,GAAaA,GAEtBG,EAASH,IAASC,EAAWD,SAAgBgD,IAARhD,GACzCiD,EAAWX,EAAMY,OAAQ9D,OAAQY,GAGlCa,EAAMkC,EAAOT,EAAMC,SACfD,EAAMa,aAAatC,EAAMb,EAAK,IAAIsC,EAAMa,YAAYnD,IACxDa,EAAMkC,EAAO/C,GACN+C,GAGRK,EAAc,CAAC5B,EAAOC,EAAQ4B,KAC7B9B,EAAOC,EAAOC,EAAQ4B,GACtB7B,EAAMoB,WAAWU,QAAQ7B,EAAOmB,YACzBpB,GAGRyB,EAAa,CAACC,EAAQK,EAAUC,EAAUC,EAAMC,KAC/CR,EAAOI,KAAK,CAAEC,SAAAA,EAAUC,SAAAA,EAAUC,KAAAA,EAAMC,QAAAA,KAGzCC,EAAgB,CAACrB,EAAOsB,EAAYtB,EAAMuB,kBACzC,IAAIC,EAAWxB,EAAMY,OAAOa,OAC5B,GAAID,EAAW,EAAG,CACjB,IAAIZ,EAASZ,EAAMY,OAAOc,IAAIC,IAC7B,IAAKA,EAAIP,QAAS,CACjB,IAAIxB,EAAM,GAAGgC,OAAOD,EAAIV,UACxBU,EAAIP,QAAU,cAAgBO,EAAIR,KAAOQ,EAAIR,KAAO,UAAY,IAAMvB,EAAI8B,IAAIG,GAAKC,EAAOD,IAAIE,KAAK,QAChG,UAA4B,MAAhBJ,EAAIT,SD1DRlD,CAAAA,GAAKlB,OAAOO,UAAU2E,SAASzE,KAAKS,GAAGiE,MAAM,iBAAiB,GC0DnCC,CAAaP,EAAIT,UAAY,IAAM,IAAMY,EAAOH,EAAIT,UAE3F,OAAOS,IAGR3B,EAAMY,OAAOa,OAAS,EACtBH,EAAU/D,KAAKyC,EAAOY,GAEvB,OAAOY,GAGRW,EAAkBC,GAAKA,GAAKvF,EAASuF,IAAM5E,EAAG6E,EAAOxF,EAASuF,GAAG7C,aAEjE+C,EAAmB1C,IAClB,GAAI9B,EAAc8B,GACjB9C,OAAOyF,KAAK3C,GAAK8B,IAAIhD,IAASkB,EAAIlB,GAAO4D,EAAgB1C,EAAIlB,UAEzD,CAAA,IAAK8D,MAAMC,QAAQ7C,GAAM,MAAO,CAACA,GACjC,GAAmB,IAAfA,EAAI6B,OAAc,MAAO,IAAI7B,OAAKc,EAAW,MAEtD,OAAOd,GAGR8C,EAAmB,CAAC9C,EAAK+C,KACxB,IAAIC,EAAQN,EAAgB1C,GAAK8B,IAAIG,GAAKC,EAAOD,EAAGc,IACpD,OAAOC,EAAMnB,OAAS,MAAQmB,EAAMb,KAAK,WAAaa,EAAM,IAG7DC,EAAmB,CAACjD,EAAKkD,EAAW,OACnCA,EAAW,GAAGlB,OAAOkB,IACRrB,OAAS,IACrB7B,EAAMkD,EACJC,OAAO,CAACnD,EAAKoD,IAAQpD,EAAIgC,OAAOoB,GAAM,GAAGpB,OAAOhC,IAChDqD,OAAO,CAACrE,EAAOsE,EAAOC,IAASA,EAAKC,QAAQxE,KAAWsE,IAGnDtD,GAGRQ,EAAQ,CAACJ,EAAOtC,KACfsC,EAAMR,GAAQ9B,EAAK,KAAMsC,EAAMY,OAAQ,IAAI,IACnCS,EAAcrB,IAGvBqD,EAAkB,CAAC3F,EAAKkC,EAAKuB,EAAMP,EAAQ+B,EAAOW,KACjD,IAAIC,EAAaZ,EAAMS,QAAQxD,GAC/B,IAAoB,IAAhB2D,IAA6D,IAAxCZ,EAAMS,QAAQxD,EAAK2D,EAAa,GACxD,OAAO7F,EAER,GAAIF,EAAG6E,EAAOzC,GACT0D,IAAY5F,EAAM8F,EAAK9F,EAAKkC,IAChCA,EAAIJ,GAAQ9B,EAAKyD,EAAMP,EAAQ+B,EAAMf,OAAOhC,SAExC,GAAI9B,EAAc8B,GACtB9C,OAAOyF,KAAK3C,GAAK8B,IAAIhD,IACpB,IAAIN,EAAMV,EAAMA,EAAIgB,QAAOgC,EAC3B2C,EAAgBjF,EAAKwB,EAAIlB,GAAM+E,EAAWtC,EAAMzC,GAAMkC,EAAQ+B,EAAOW,SAGlE,CAEJ,GADWhB,EAAgB1C,GAClB8D,KAAKC,GAAQC,EAAoBlG,EAAKiG,EAAMxC,EAAMwB,IAC1D,OAAOW,EAAaE,EAAK9F,EAAKkC,GAAOlC,EAGtCiD,EAAWC,EAAQhB,EAAKlC,EAAKyD,GAG9B,OAAOzD,GAGRkG,EAAsB,CAAClG,EAAKkC,EAAKuB,EAAMwB,EAAOW,KAC7C,GAAI1D,IAAQiE,EAAK,OAAO,EACxB,GAAW,MAAPnG,EAAa,OAAOA,IAAQkC,EAChC,GAAI9B,EAAc8B,IAAQpC,EAAG6E,EAAOzC,GAAM,CACzC,IAAIgB,EAAS,GAEb,OADAyC,EAAgB3F,EAAKkC,EAAKuB,EAAMP,EAAQ+B,EAAOW,IACvC1C,EAAOa,OAEhB,OAAIjE,EAAGsG,OAAQlE,GAAaA,EAAImE,KAAKrG,GACjCkC,IAAQoE,QAAUpE,IAAQqE,KAAavG,EAAI6B,cAAgBK,IAAQsE,MAAMxG,GACtEA,IAAQkC,GACVjC,EAAWiC,IAAQpC,EAAGoC,EAAKlC,IAC5BA,EAAI6B,cAAgBK,GAGzBuE,EAAkB,CAACzG,EAAKsC,EAAOmB,EAAMP,EAASZ,EAAMY,UACnD,IAAK,IAAIwD,KAAapE,EAAMM,WAAY,CACvC,IAAI+D,EACJ,IACCA,EAASD,EAAU7G,KAAKyC,EAAOtC,GAC9B,MAAOiE,GACR0C,EAAS1C,EAEV,IAAe,IAAX0C,EAAiB,CACpB,IAAIC,EAAS3G,EAAWyG,EAAUG,aAAeH,EAAUG,YAAc,CAACC,EAAiB5F,kBAC5EwF,EAAUG,yBAAyBzC,EAAO0C,aAC/CrD,EAAOA,EAAO,KAAO,WAAWW,EAAOlD,KACjD+B,EAAWC,EAAQwD,EAAW1G,EAAKyD,EAAMmD,EAAO/G,KAAKyC,EAAOqE,EAAQ3G,EAAKyD,OAK5EW,EAAS,CAACpE,EAAKiF,EAAQ,MACtB,GAAIA,EAAMlB,OAAS,IAAMkB,EAAM8B,SAAS/G,GAAM,MAAO,MACrD,GAAIA,MAAAA,EAAmC,OAAOgH,OAAOhH,GACrD,GAAmB,iBAARA,EAAkB,UAAWA,KACxC,GAAIF,EAAG6E,EAAO3E,GAAM,OAAOA,EAAIsE,SAASW,GAIxC,GAFAA,EAAMgC,QAAQjH,GAEVC,EAAWD,GAAM,OAAOA,EAAI6C,MAAQ7C,EAAIsE,WAC5C,GAAIxE,EAAGoH,IAAKlH,IAAQF,EAAGqH,IAAKnH,GAAM,OAAOoE,EAAO,IAAIpE,IACpD,GAAI8E,MAAMC,QAAQ/E,GAAM,UAAWA,EAAIgE,IAAIoD,GAAQhD,EAAOgD,EAAMnC,IAAQZ,KAAK,SAC7E,GAAIrE,EAAIsE,UAAYtE,EAAIsE,WAAalF,OAAOO,UAAU2E,SAAU,OAAOtE,EAAIsE,WAC3E,GAAInE,EAASH,GAAM,CAClB,IAAI0B,EAAQtC,OAAOyF,KAAK7E,GACvBqH,EAAS,KAAKC,OAAOrC,EAAMlB,QAC5B,UAAWrC,EAAMsC,IAChBhD,QAAYqG,EAASrG,MAAQoD,EAAOpE,EAAIgB,GAAM,IAAIiE,OACjDZ,KAAK,SAAS3C,EAAMqC,YAAcsD,EAAOE,MAAM,KAAO,MAGzD,OAAOP,OAAOhH,IAGf+F,EAAa,CAACtC,EAAMzC,IAAQyC,EAAOA,EAAO,IAAMzC,EAAMA,EAEtDwG,EAAkB,CAAClF,EAAOJ,EAAKuB,EAAMhE,EAAGuB,EAAKyG,EAAeC,KAC3D,IAAIC,EAAU5B,EAAWtC,EAAMzC,GAC9B4G,EAAYtF,EAAMuF,qBAAqB7G,GACvC8G,EAAaxF,EAAMyF,sBAAsB/G,GACzCgH,EAAgBxI,EAAIC,EAAGuB,GACvBiH,EAAwBD,GAAiB5I,OAAO8I,yBAAyBzI,EAAGuB,GAEzEA,KAAOkB,IAAS0F,IAAcH,GAAmBK,QAAyB9E,IAAXvD,EAAEuB,KACpEmH,YAAiBP,EAAY,UAAY,uBAAuB5G,IAAOsB,GAExEoF,EAAcC,GACVnI,EAAI0C,EAAKlB,IAAM2E,EAAgBlG,EAAEuB,GAAMkB,EAAIlB,GAAM2G,EAASrF,EAAMY,OAAQ,IAC5EuD,EAAgBhH,EAAG6C,EAAOqF,GAE1B,IAAI7D,EAAWxB,EAAMY,OAAOa,OAQ5B,OAPID,IACCkE,EAAe5I,OAAOgC,eAAe3B,EAAGuB,EAAKiH,UACrCxI,EAAEuB,GAEd2C,EAAcrB,KAGPwB,GAGTqE,EAAS,CAACC,EAAK9F,KACdA,EAAMY,OAAOI,KAAK,CAAEI,QAAS,UAAY0E,KAG1CtC,EAAO,CAAC9F,EAAKqI,EAAU,MACtB,IAAKrI,GAAOI,EAAciI,IAAYvI,EAAGwI,EAAYD,IAAY5D,EAAgBzE,GAChF,OAAOA,EAER,IAAIkC,EAAM0C,EAAgByD,GACzBE,EAAiB,GAElB,IAAK,IAAItC,KAAQ/D,EACZpC,EAAG6E,EAAOsB,KAAUnG,EAAGwI,EAAYrC,IAASA,EAAKI,KAAKrG,IACzDuI,EAAejF,KAAK2C,GAGtB,OAA8B,IAA1BsC,EAAexE,OAEX,IAAIwE,EAAe,GAAGvI,EAAK+B,IAG/BwG,EAAexE,OAAS,GAC3ByE,QAAQC,kCAAkCrE,EAAOpE,gBAAkBuI,EAAelE,KAAK,WAEjFrE,IAIR0I,EAAU,CAAChI,EAAK4B,EAAOJ,EAAKuB,EAAMgE,IAC5BrH,EAAc8B,GACZzB,EAAQC,EAAK0B,EAASE,EAAOJ,EAAKuB,EAAMgE,IADf3B,EAAKpF,EAAKwB,GAI3CE,EAAW,CAACE,EAAOJ,EAAKuB,EAAMgE,KAU7B,MAAO,CACNpI,eAAgBW,GAAOyD,EAAOrE,OAAOO,UAAYR,EAASa,GAE1D2I,IAAIlJ,EAAGuB,GACN,GAAIA,IAAQgB,EAAW,OAAOvC,EAE9B,GAAmB,iBAARuB,EAAkB,OAAO4H,QAAQC,IAAIpJ,EAAGuB,GAEnD,IAAI2G,EAAU5B,EAAWtC,EAAMzC,GAC9B8H,EAAU5G,EAAIlB,GAEf,OAAKyG,GAAiBzG,KAAOkB,GAAOI,EAAMuF,qBAAqB7G,IAC9DmH,gCAAqCR,IAAWrF,QAChDqB,EAAcrB,KAIX7C,EAAEuB,IAAQxB,EAAIC,EAAGuB,KAASZ,EAAc0I,KAAarE,EAAgBhF,EAAEuB,MAC1EvB,EAAEuB,GAAO8E,EAAKrG,EAAEuB,GAAM8H,IAGnB7I,EAAWR,EAAEuB,KAAiB,gBAARA,IAA0ByG,EA9B3BvH,CAAAA,GAAKO,EAAQP,EAAG,CAC1CyI,MAAMI,EAAIC,EAAKC,GACdxB,GAAgB,EAChB,IAAId,EAASiC,QAAQM,MAAMH,EAAIC,EAAKC,GAEpC,OADAxB,GAAgB,EACTd,KA0BCwC,CAAmB1J,EAAEuB,KAGzBZ,EAAc0I,KAAarJ,EAAEuB,KAChCvB,EAAEuB,GAAO,IAGH0H,EAAQjJ,EAAEuB,GAAMsB,EAAOwG,EAASnB,EAASF,MAGjD2B,IAAG,CAAC3J,EAAGuB,EAAKN,IACJ8G,EAAgBlF,EAAOJ,EAAKuB,EAAMhE,EAAGuB,EAAKyG,EAChDE,GAAWiB,QAAQQ,IAAI3J,EAAGuB,EAAK0H,EAAQhI,EAAK4B,EAAOJ,EAAIlB,GAAM2G,KAI/D0B,eAAc,CAAC5J,EAAGuB,IACVwG,EAAgBlF,EAAOJ,EAAKuB,EAAMhE,EAAGuB,EAAKyG,EAAe,IAAMmB,QAAQS,eAAe5J,EAAGuB,IAGjGI,eAAc,CAAC3B,EAAGuB,EAAKiI,IACfzB,EAAgBlF,EAAOJ,EAAKuB,EAAMhE,EAAGuB,EAAKyG,EAAe,IAAMmB,QAAQxH,eAAe3B,EAAGuB,EAAKiI,IAGtGzJ,IAAG,CAACC,EAAGuB,IACC4H,QAAQpJ,IAAIC,EAAGuB,IAAQ4H,QAAQpJ,IAAI0C,EAAKlB,KAASsB,EAAMuF,qBAAqB7G,GAGpFsI,QAAQ7J,GACAmJ,QAAQU,QAAQ7J,GAAG8F,OAAOvE,GAAO4H,QAAQpJ,IAAI0C,EAAKlB,KAASsB,EAAMuF,qBAAqB7G,IAG9F2H,yBAAyBlJ,EAAGuB,GAC3B,IAAIuI,EAMJ,OALKjH,EAAMuF,qBAAqB7G,SAEZgC,KADnBuG,EAAanK,OAAO8I,yBAAyBhG,EAAKlB,MACpBuI,EAAWrI,MAAQzB,EAAEuB,IAG7CuI,KAMJ,SAAS5E,EAAMzC,EAAKsH,GAC1B,OAAOpJ,EAAc8B,GAAO,IAAIuH,EAAYvH,EAAKsH,GAAU,IAAIlB,EAAWpG,GA+DpE,SAASoG,EAAWpG,GAC1B,OAAOD,EAAUC,EAAKoG,GAchB,SAASmB,EAAYvH,GAC3B,OAAOD,EAAUC,EAAKuH,EAAarK,OAAQ0D,EAAiBR,GAASF,EAASE,EAAOJ,IAAM,GA5E5F9C,OAAOuC,OAAOgD,EAAMhF,UAAW,CAC9BkD,KAAM,QACND,WAAY,GAEZmF,sBAAuB/G,GAAOA,EAAI0I,gBAAkB1I,EACpD6G,qBAAsB7G,GAAkB,MAAXA,EAAI,GAEjC2H,SAAS1D,GACR,OAAOD,EAAiBvC,KAAKE,WAAYsC,IAG1C0D,GAAG9F,GAEF,OADA5B,EAAOwB,KAAM,OAAQI,GACdJ,MAGRkG,UAAUjI,GAET,OADA+B,KAAKF,QAAU7B,EACR+B,MAGRkG,CAAC7G,GAAQ9B,EAAKyD,EAAMP,EAAQ+B,GAC3BU,EAAgB3F,EAAKyC,KAAKE,WAAYc,EAAMP,EAAQ+B,GACpDwB,EAAgBzG,EAAKyC,KAAMgB,EAAMP,IAGlCyF,KAAK3I,EAAK6D,GACT,IAAIvB,EAAQG,KACZ,MAAQjD,EAAI8C,EAAO,mBAClBA,EAAQnD,EAASmD,GAGlB,IACCqH,EADGC,EAAwBtH,EAAMuB,eAWlC,OARAvB,EAAMuB,eAAiBX,IACtByG,GAAS,EACL9F,GAAgBA,EAAehE,KAAK4C,KAAMS,IAG/C,IAAIT,KAAKzC,GAETsC,EAAMuB,eAAiB+F,GACfD,GAGThB,eAAezF,GACd,IAAI2G,EAAI,IAAIC,UAAU5G,EAAOc,IAAI6F,GAAKA,EAAEnG,SAASW,KAAK,OAEtD,MADAwF,EAAE5E,MAAQ4E,EAAE5E,MAAM8E,QAAQ,wCAAyC,IAC7DF,GAGPlB,OAAOjC,EAAWG,EAAczC,EAAOsC,IAGtC,OAFAzF,EAAOyF,EAAW,cAAeG,GACjCpE,KAAKG,WAAaH,KAAKG,WAAWsB,OAAOwC,GAClCjE,QASTlB,EAAO+G,EAAY3D,EAAO,CACzBgE,UAAUvD,GACT,IAAI5D,EAAQ4B,EAAY,IAAIkF,EAAWnD,EAAiB1C,KAAKE,WAAYyC,IAAY3C,MACrF,IAAK,IAAIwD,KAAQb,EACZtF,EAAGwI,EAAYrC,IAAOzE,EAAMoB,WAAWU,QAAQ2C,EAAKrD,YAGzD,OAAOpB,KAQTD,EAAOkI,EAAa9E,EAAO,CAC1BgE,UAAU3I,GACT,IAAIkC,EAAMO,KAAKE,WACf,IAAK,IAAI3B,KAAOhB,EACXR,EAAI0C,EAAKlB,KACZhB,EAAIgB,GAAO2E,EAAgB3F,EAAIgB,GAAMkB,EAAIlB,GAAMA,EAAKyB,KAAKS,OAAQ,IAAI,IAKvE,OAFAS,EAAclB,MACdA,KAAKF,QAAUvC,EACRyC,MAGRkG,SAAS1D,GACR,OAAOb,EAAO3B,KAAKE,WAAYsC,IAGhC0D,UAAUvD,GACT,IAAIzC,EAAa,IAAKF,KAAKE,YAC1BqH,EAAQ,IAAKvH,KAAK9C,WAClBsK,EAAW,IAAKxH,KAAKF,SACrB2H,EAAgB,GAEjB,IAAK,IAAIjE,KAAQb,EACZtF,EAAG6E,EAAOsB,KACbpF,EAAM8B,EAAYsD,EAAKtD,YACvB9B,EAAMoJ,EAAUhE,EAAK1D,SACrB2H,EAAc5G,QAAQ2C,EAAKrD,aAExB3C,EAAWgG,IAAOpF,EAAMmJ,EAAO/D,EAAKtG,WACpCQ,EAAS8F,IAAOpF,EAAM8B,EAAYsD,GAGvC,IAAIkE,EAAW/G,EAAY,IAAIqG,EAAY9G,GAAaF,KAAMuH,GAAOI,UAAUH,GAO/E,OANAE,EAASvH,WAAa,IAAIH,KAAKG,cAAesH,GAE1C/K,EAASsD,QAAUgH,EAAY9J,YAClCwK,EAAShH,YAAcV,MAGjB0H,GAGRxB,CAAC7G,GAAQ9B,EAAKyD,EAAMP,EAAQ+B,EAAOW,GAClC,GAAIzF,EAASH,GAAM,CAClB,IAAIkC,EAAMO,KAAKE,WACfgD,EAAgB3F,EAAIgC,IAAchC,EAAKkC,EAAKuB,EAAMP,EAAQ+B,EAAOW,QAE7D3C,EAAWC,EAAQT,KAAMzC,EAAKyD,GAEnCgD,EAAgBzG,EAAKyC,KAAMgB,EAAMP,MAIvB,MAACiD,EAAM1F,EAAQ6H,IAAc,CACxCY,MAAK,CAACpI,EAAQkI,GAAM9G,KACZ9C,OAAOuC,OAAOvC,OAAOwC,OAAOuE,GAAM,CAAExD,WAAYT,MAGzDiE,EAAIxD,WAAawD,EACjBA,EAAI7B,SAAW,IAAM,MAErB6B,EAAIkE,UAAY,SAAUnI,GAAOO,KAAKE,WAAaT,GACnDX,EAAO4E,EAAIkE,UAAWlE,EAAK,CAC1BwC,WAAa,MAAO,MAAQ3D,EAAiBvC,KAAKE,eAEnDwD,EAAI5F,OAAOC,UAAY,kBAAqB,IAAI2F,EAAIkE,UAAU5H,KAAKE,aCnd5D,MAAM2H,EAAgB,CAACC,EAAM1I,EAAaK,EAAKC,EAAMqI,EAAOC,EAAUC,IAErEzI,EAAUC,EAAKL,EAAa0I,EAAMpI,EAAMG,GAASlD,OAAOuC,OAAO,CACrEtC,eAAgB,IAAMiD,EAAM3C,UAC5BgJ,IAAIgC,EAAG3J,GACN,GAAIA,IAAQgB,EAAW,OAAO2I,EAE9B,IAAIjK,EAAMiK,EAAE3J,GACZ,OAAOf,EAAWS,GAAOD,EAAQC,EAAK,CACrCiI,MAAMI,EAAIC,EAAKC,GACd,GAAIzJ,EAAIiL,EAAUzJ,GAAM,CAEvB,IAAK4J,EAAOC,EAAM5B,EAAKlF,OAAS,EAAG+G,GAAaL,EAASzJ,GACzD,IAAK,IAAI0D,EAAIkG,EAAOlG,GAAKmG,EAAKnG,IAAK,CAClC,IAAIqG,EAASD,EAAYA,EAAUpG,GAAKpC,EAAMK,WAC9CsG,EAAKvE,GAAKiB,EACTsD,EAAKvE,GACLqG,KACGR,EAAK1H,QAAQ7B,eAAiB0D,KACjCpC,EAAMY,OACN,IACA,GAIF,GAAIZ,EAAMM,WAAWmB,OAAS,EAAG,CAChC,IAAIiH,EAAeR,EAAMG,GACzB5B,EAAGG,MAAM8B,EAAc/B,GACvBxC,EAAgBuE,EAAc1I,WAAgBtB,cAG/C2C,EAAcrB,GAGf,OAAOyG,EAAGG,MAAMyB,EAAG1B,MAEhBvI,IAEJgK,ICnCW,SAASO,EAAWC,GAClC,IAAI5I,EAAQgI,EACXxF,MACAmG,EACAC,EACAC,GAAKrG,MAAMC,QAAQoG,GAAKA,EAAEnH,IAAIoH,GAAOtF,EAAKsF,EAAK9I,EAAMK,aAAewI,EACpEA,GAAK,IAAIA,GACT,CACCE,WAAc,GACdC,KAAQ,CAAC,EAAG,GACZC,IAAO,GACPjI,KAAQ,CAAC,GACTkI,QAAW,GACXC,MAAS,GACTC,KAAQ,GACRC,OAAU,CAAC,GACX1E,QAAW,CAAC,IAEb,CACCmC,IAAG,CAACwC,EAAK5K,EAAKN,IACN8G,EAAgBlF,EAAOsJ,EAAK5K,EAAKN,EAAK,CAACyK,EAAGU,IAAMV,EAAEnK,GAAO6K,GAAG,GAGpExC,eAAc,CAACuC,EAAK5K,IACZwG,EAAgBlF,EAAOsJ,EAAK5K,OAAKgC,EAAWmI,UAAYA,EAAEnK,MAKpE,OAAOsB,EAGRf,EAAO0J,EAAYtG,EAAO,CACzBgE,SAAS1D,GACR,MAAO,YAAcD,EAAiBvC,KAAKE,WAAYsC,IAGxD0D,CAAC7G,GAAQ8J,EAAKnI,EAAMP,EAAQ+B,GACvBH,MAAMC,QAAQ6G,IAChBA,EAAI5J,IAAc4J,GAAKE,QAAQ,CAACX,EAAGzG,IAAMiB,EAAgBwF,EAAG1I,KAAKE,cAAec,GAAQ,WAAWiB,KAAMxB,EAAQ+B,IAC9GhC,EAAWC,EAAQT,KAAMmJ,EAAKnI,GAEnCgD,EAAgBmF,EAAKnJ,KAAMgB,EAAMP,IAGlCyF,UAAUvD,GACT,OAAOhC,EAAY,IAAI6H,EAAW9F,EAAiB1C,KAAKE,WAAYyC,IAAY3C,SAIlF,IAAI+E,EAAkB,CAAClF,EAAOyJ,EAAO/K,EAAKE,EAAOwG,EAAesE,KAC/D,IAAIvI,WAAgBzC,MACJA,GAAO,IAAMgL,GAAiBhL,KAAO+K,KACxC7K,EAAQyE,EAAgBzE,EAAOoB,EAAMK,WAAYc,EAAMnB,EAAMY,OAAQ,IAAI,IAEtF,IAAI+I,EAAY,IAAIF,GACpBrE,EAAcuE,GACdxF,EAAgBwF,EAAW3J,EAAOmB,GAClC,IAAIyI,GAAavI,EAAcrB,GAE/B,OADI4J,GAAWxE,EAAcqE,EAAO7K,GAC7BgL,GC7DO,SAASC,KAAiBC,GACxC,OAAOnK,EAAU,CAAEoK,UAAWD,GAAWD,EAAeG,SAAU,KAAMhK,KACvEjD,eAAgB,IAAMiD,EAAM3C,UAE5BkJ,IAAG,CAACE,EAAI/H,IACAA,IAAQgB,EAAY+G,EAAKA,EAAG/H,GAGpC2H,MAAMI,EAAIC,EAAKC,GACd,IAWItC,EAXAzE,EAAMI,EAAMK,WACf4J,EAAkBrK,EAAImK,UAAUG,KAAKzB,GAAUjL,EAAGqG,EAAIkE,UAAWU,IACjE0B,EAAgBF,EAAkBG,KAAKC,IAAI1D,EAAKlF,OAAQ7B,EAAImK,UAAUtI,OAAS,GAAK7B,EAAImK,UAAUtI,OAEnG,IAAK,IAAIW,EAAI,EAAGA,EAAI+H,EAAe/H,IAAK,CACvC,IAAIqG,EAASwB,GAAmB7H,GAAKxC,EAAImK,UAAUtI,OAAS,EAAIwI,EAAgB5J,WAAaT,EAAImK,UAAU3H,GAC3GuE,EAAKvE,GAAKiB,EAAgBsD,EAAKvE,GAAIqG,eAAqBrG,KAAMpC,EAAMY,OAAQ,IAAI,GAYjF,OATAuD,EAAgBwC,EAAM3G,EAAO,aAGxBA,EAAMY,OAAOa,SACjB4C,EAASiC,QAAQM,MAAMH,EAAIC,EAAKC,GAC5B,WAAY/G,IACfyE,EAAShB,EAAgBgB,EAAQzE,EAAI0K,OAAQ,eAAgBtK,EAAMY,OAAQ,IAAI,KAEjFS,EAAcrB,GACPqE,MC1BK,SAASkG,EAASC,EAAsBC,GACtD,IAAIC,EAAStI,GAAW,IAANA,EAAUpC,EAAMK,WAAW3B,IAAMsB,EAAMK,WAAWzB,MACnEoB,EAAQgI,EACPpD,IACA2F,EACA,CAAE7L,IAAK8L,EAAsB5L,MAAO6L,GACpCE,GAAM5M,EAAW4M,GAAM,IAAI/F,IAAI,IAAI+F,GAAIjJ,IAAIkJ,GAAQA,EAAKlJ,IAAI,CAAC1D,EAAGoE,IAAMoB,EAAKxF,EAAG0M,EAAOtI,OAASuI,EAC9FjJ,GAAO,IAAIkD,IAAIlD,GACf,CACCoF,IAAO,CAAC,EAAG,EAAG4D,GACdG,OAAU,GACVC,MAAS,KAIZ,OAAO9K,ECfO,SAAS+K,EAASnC,GAChC,IAAI5I,EAAQgI,EACXnD,IACAkG,EACAnC,EACA+B,GAAM5M,EAAW4M,GAAM,IAAI9F,IAAI,IAAI8F,GAAIjJ,IAAItD,GAAOoF,EAAKpF,EAAK4B,EAAMK,cAAgBsK,EAClF7D,GAAO,IAAIjC,IAAIiC,GACf,CACCkE,IAAO,CAAC,EAAG,GACXH,OAAU,GACVC,MAAS,KAIX,OAAO9K,EFiBRf,EAAO4K,EAAexH,EAAO,CAC5BgE,SAAS1D,EAAQ,IAChB,IAAIsI,cAAkB9K,KAAKE,WAAW0J,UAAUrI,IAC/C+G,GAAU/F,EAAiB+F,EAAQ,IAAI9F,KACtCZ,KAAK,SAKP,MAHI,WAAY5B,KAAKE,aACpB4K,GAAO,OAASvI,EAAiBvC,KAAKE,WAAWiK,OAAQ3H,IAEnDsI,GAGR5E,OAAOzG,GAEN,OADAO,KAAKE,WAAWiK,OAAS1K,EAClBO,MAGRkG,OAAO6E,EAASC,GACf,IAAIxE,EAAOxG,KAAKE,WAAW0J,UAC1BqB,EAAYF,EAAQxJ,IAAI,CAACmH,EAAGzG,IAAMS,EAAiBT,KAAKuE,EAAOA,EAAKvE,GAAK,GAAI8I,EAAQ9I,KACrFiJ,EAAexI,EAAiB1C,KAAKE,WAAWiK,OAAQa,GACzD,OAAOrK,EAAY,IAAI+I,KAAiBuB,GAAWd,OAAOe,GAAelL,OAG1EkG,CAAC7G,GAAQ5B,EAAGuD,EAAMP,GACZjD,EAAWC,IAAI+C,EAAWC,EAAQ,WAAYhD,EAAGuD,MCtCxDlC,EAAOsL,EAAUlI,EAAO,CACvBgE,SAAS1D,GACR,gBAAiBD,EAAiBvC,KAAKE,WAAW3B,IAAKiE,QAAYD,EAAiBvC,KAAKE,WAAWzB,MAAO+D,MAG5G0D,CAAC7G,GAAQkC,EAAKP,EAAMP,EAAQ+B,GAC3B,GAAInF,EAAGoH,IAAKlD,GAAM,CACjBP,EAAOA,GAAQ,MACf,IAAK,IAAKzC,EAAKE,KAAU8C,EACxB2B,EAAgB3E,EAAKyB,KAAKE,WAAW3B,OAAQyC,QAAYP,EAAQ+B,GACjEU,EAAgBzE,EAAOuB,KAAKE,WAAWzB,SAAUuC,KAAQW,EAAOpD,MAASkC,EAAQ+B,QAE5EhC,EAAWC,EAAQT,KAAMuB,EAAKP,GAErCgD,EAAgBzC,EAAKvB,KAAMgB,EAAMP,IAGlCyF,OAAOiF,EAAUC,GAChB,OAAOzK,EAAY,IAAIyJ,EACtB1H,EAAiB1C,KAAKE,WAAW3B,IAAK4M,GACtCzI,EAAiB1C,KAAKE,WAAWzB,MAAO2M,IACtCpL,SCtBLlB,EAAO8L,EAAU1I,EAAO,CACvBgE,SAAS1D,GACR,MAAO,UAAYD,EAAiBvC,KAAKE,WAAYsC,IAGtD0D,CAAC7G,GAAQsH,EAAK3F,EAAMP,EAAQ+B,GAC3B,GAAInF,EAAGqH,IAAKiC,GACX,IAAK,IAAIhC,KAAQgC,EAAI0E,SACpBnI,EAAgByB,EAAM3E,KAAKE,cAAec,GAAQ,cAAeP,EAAQ+B,QAEpEhC,EAAWC,EAAQT,KAAM2G,EAAK3F,GACrCgD,EAAgB2C,EAAK3G,KAAMgB,EAAMP,IAGlCyF,UAAUvD,GACT,OAAOhC,EAAY,IAAIiK,EAASlI,EAAiB1C,KAAKE,WAAYyC,IAAY3C"}