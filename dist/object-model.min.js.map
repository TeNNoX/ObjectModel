{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\r\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\r\n\tgetProto     = x => Object.getPrototypeOf(x),\r\n\r\n\thas           = (o, prop) => o.hasOwnProperty(prop),\r\n\tis            = (Constructor, obj) => obj instanceof Constructor,\r\n\tisString      = s => typeof s === \"string\",\r\n\tisFunction    = f => typeof f === \"function\",\r\n\tisObject      = o => typeof o === \"object\",\r\n\tisArray       = a => Array.isArray(a),\r\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\r\n\r\n\tproxify      = (val, traps) => new Proxy(val, traps),\r\n\tproxifyFn    = (fn, apply) => proxify(fn, {apply}),\r\n\tproxifyModel = (val, model, traps) => proxify(val, Object.assign({getPrototypeOf: () => model.prototype}, traps)),\r\n\r\n\tmapProps = (o, fn) => Object.keys(o).map(fn),\r\n\r\n\tmerge = (target, src = {}, deep) => {\r\n\t\tfor (let key in src) {\r\n\t\t\tif (deep && isPlainObject(src[key])) {\r\n\t\t\t\tlet o = {}\r\n\t\t\t\tmerge(o, target[key], deep)\r\n\t\t\t\tmerge(o, src[key], deep)\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tdefine = (obj, key, value, enumerable = false) => {\r\n\t\tObject.defineProperty(obj, key, {value, enumerable, writable: true, configurable: true})\r\n\t},\r\n\r\n\tsetConstructor = (model, constructor) => {\r\n\t\tObject.setPrototypeOf(model, constructor.prototype)\r\n\t\tdefine(model, \"constructor\", constructor)\r\n\t},\r\n\r\n\textend = (child, parent, props) => {\r\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\r\n\t\t\tconstructor: {\r\n\t\t\t\tvalue: child,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t}\r\n\t\t}), props)\r\n\t\tObject.setPrototypeOf(child, parent)\r\n\t}","import {\r\n\tbettertypeof, define, extend, getProto, has, is,\r\n\tisArray, isFunction, isObject, isPlainObject, isString,\r\n\tmapProps, merge, proxify, proxifyFn, setConstructor\r\n} from \"./helpers.js\"\r\n\r\nexport const\r\n\t_constructor = Symbol(),\r\n\t_validate = Symbol(),\r\n\t_original = Symbol.for(\"[[Target]]\"),\r\n\r\n\tinitModel = (model, def) => {\r\n\t\tmodel.definition = def\r\n\t\tmodel.assertions = [...model.assertions]\r\n\t\tdefine(model, \"errors\", [])\r\n\t\tdelete model.name;\r\n\t},\r\n\r\n\textendModel = (child, parent, newProps) => {\r\n\t\textend(child, parent, newProps)\r\n\t\tchild.assertions.push(...parent.assertions)\r\n\t\treturn child\r\n\t},\r\n\r\n\tstackError = (errors, expected, received, path, message) => {\r\n\t\terrors.push({expected, received, path, message})\r\n\t},\r\n\r\n\tunstackErrors = (model, errorCollector = model.errorCollector) => {\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors > 0) {\r\n\t\t\tlet errors = model.errors.map(err => {\r\n\t\t\t\tif (!err.message) {\r\n\t\t\t\t\tlet def = isArray(err.expected) ? err.expected : [err.expected]\r\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\r\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\r\n\t\t\t\t}\r\n\t\t\t\treturn err\r\n\t\t\t})\r\n\t\t\tmodel.errors = []\r\n\t\t\terrorCollector.call(model, errors) // throw all errors collected\r\n\t\t}\r\n\t\treturn nbErrors\r\n\t},\r\n\r\n\tisModelInstance = i => i && is(Model, getProto(i).constructor),\r\n\r\n\tparseDefinition = (def) => {\r\n\t\tif (isPlainObject(def)) {\r\n\t\t\tmapProps(def, key => { def[key] = parseDefinition(def[key]) })\r\n\t\t}\r\n\t\telse if (!isArray(def)) return [def]\r\n\t\telse if (def.length === 1) return [...def, undefined, null]\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tformatDefinition = (def, stack) => {\r\n\t\tlet parts = parseDefinition(def).map(d => format(d, stack));\r\n\t\treturn parts.length > 1 ? `(${parts.join(\" or \")})` : parts[0]\r\n\t},\r\n\r\n\textendDefinition = (def, newParts = []) => {\r\n\t\tif (!isArray(newParts)) newParts = [newParts]\r\n\t\tif (newParts.length > 0) {\r\n\t\t\tdef = newParts\r\n\t\t\t\t.reduce((def, ext) => def.concat(ext), isArray(def) ? def.slice() : [def]) // clone to lose ref\r\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\r\n\t\t}\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tcheckDefinition = (obj, def, path, errors, stack) => {\r\n\t\tlet indexFound = stack.indexOf(def)\r\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\r\n\t\t\treturn obj //if found twice in call stack, cycle detected, skip validation\r\n\r\n\t\tobj = cast(obj, def)\r\n\r\n\t\tif (is(Model, def)) {\r\n\t\t\tdef[_validate](obj, path, errors, stack.concat(def))\r\n\t\t}\r\n\t\telse if (isPlainObject(def)) {\r\n\t\t\tmapProps(def, key => {\r\n\t\t\t\tcheckDefinition(obj ? obj[key] : undefined, def[key], formatPath(path, key), errors, stack)\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet pdef = parseDefinition(def)\r\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack)))\r\n\t\t\t\treturn obj\r\n\r\n\t\t\tstackError(errors, def, obj, path)\r\n\t\t}\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\tcheckDefinitionPart = (obj, def, path, stack) => {\r\n\t\tif (obj == null) return obj === def\r\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\r\n\t\t\tlet errors = []\r\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\r\n\t\t\treturn !errors.length\r\n\t\t}\r\n\t\tif (is(RegExp, def)) return def.test(obj)\r\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\t\treturn obj === def\r\n\t\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t\t|| obj.constructor === def\r\n\t},\r\n\r\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\r\n\t\tfor (let assertion of model.assertions) {\r\n\t\t\tlet result\r\n\t\t\ttry {\r\n\t\t\t\tresult = assertion.call(model, obj)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tresult = err\r\n\t\t\t}\r\n\t\t\tif (result !== true) {\r\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\r\n\t\t\t\t\t+`for ${path ? path+\" =\" : \"value\"} ${format(value)}`\r\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tformat = (obj, stack = []) => {\r\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\r\n\t\tif (obj === null || obj === undefined) return String(obj)\r\n\t\tif (isString(obj)) return `\"${obj}\"`\r\n\t\tif (is(Model, obj)) return obj.toString(stack)\r\n\r\n\t\tstack.unshift(obj)\r\n\r\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\r\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\r\n\t\tif (isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\r\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\r\n\t\tif (obj && isObject(obj)) {\r\n\t\t\tlet props  = Object.keys(obj),\r\n\t\t\t    indent = '\\t'.repeat(stack.length)\r\n\t\t\treturn `{${props.map(\r\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], stack.slice())}`\r\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\r\n\t\t}\r\n\r\n\t\treturn String(obj)\r\n\t},\r\n\r\n\tformatPath = (path, key) => path ? path + '.' + key : key,\r\n\r\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\r\n\t\tlet newPath = formatPath(path, key),\r\n\t\t    isPrivate  = model.conventionForPrivate(key),\r\n\t\t    isConstant = model.conventionForConstant(key),\r\n\t\t    isOwnProperty = has(o, key),\r\n\t\t    initialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\r\n\r\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\r\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\r\n\r\n\t\tlet isInDefinition = has(def, key);\r\n\t\tif (isInDefinition || !model.sealed) {\r\n\t\t\tapplyMutation(newPath)\r\n\t\t\tisInDefinition && checkDefinition(o[key], def[key], newPath, model.errors, [])\r\n\t\t\tcheckAssertions(o, model, newPath)\r\n\t\t}\r\n\t\telse rejectUndeclaredProp(newPath, o[key], model.errors)\r\n\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors) {\r\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\r\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\r\n\r\n\t\t\tunstackErrors(model)\r\n\t\t}\r\n\r\n\t\treturn !nbErrors\r\n\t},\r\n\r\n\tcannot = (msg, model) => {\r\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\r\n\t},\r\n\r\n\trejectUndeclaredProp = (path, received, errors) => {\r\n\t\terrors.push({\r\n\t\t\tpath,\r\n\t\t\treceived,\r\n\t\t\tmessage: `property ${path} is not declared in the sealed model definition`\r\n\t\t})\r\n\t},\r\n\r\n\tcast = (obj, defNode = []) => {\r\n\t\tif (!obj || isPlainObject(defNode) || isModelInstance(obj))\r\n\t\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\t\tlet def = parseDefinition(defNode),\r\n\t\t    suitableModels = []\r\n\r\n\t\tfor (let part of def) {\r\n\t\t\tif (is(Model, part) && part.test(obj))\r\n\t\t\t\tsuitableModels.push(part)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length === 1){\r\n\t\t\t// automatically cast to suitable model when explicit (duck typing)\r\n\t\t\tlet duck = suitableModels[0];\r\n\t\t\treturn is(ObjectModel, duck) ? new duck(obj) : duck(obj)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length > 1)\r\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\tcheckUndeclaredProps = (obj, def, errors, path) => {\r\n\t\tmapProps(obj, key => {\r\n\t\t\tlet val = obj[key],\r\n\t\t\t    subpath = formatPath(path, key)\r\n\t\t\tif(!has(def, key)) rejectUndeclaredProp(subpath, val, errors)\r\n\t\t\telse if(isPlainObject(val))\tcheckUndeclaredProps(val, def[key], errors, subpath)\r\n\t\t})\r\n\t},\r\n\r\n\tgetProxy = (model, obj, def, path, privateAccess) => !isPlainObject(def) ? cast(obj, def) : proxify(obj, {\r\n\r\n\t\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\r\n\r\n\t\tget(o, key) {\r\n\t\t\tif(key === _original) return o\r\n\r\n\t\t\tif (!isString(key))\r\n\t\t\t\treturn Reflect.get(o, key)\r\n\r\n\t\t\tlet newPath = formatPath(path, key),\r\n\t\t\t    defPart = def[key];\r\n\r\n\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\r\n\t\t\t\tcannot(`access to private property ${newPath}`, model)\r\n\t\t\t\tunstackErrors(model)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\r\n\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\r\n\t\t\t}\r\n\r\n\t\t\tif (isFunction(o[key]) && key !== \"constructor\") {\r\n\t\t\t\treturn proxifyFn(o[key], (fn, ctx, args) => {\r\n\t\t\t\t\tprivateAccess = true;\r\n\t\t\t\t\tlet result = Reflect.apply(fn, ctx, args);\r\n\t\t\t\t\tprivateAccess = false;\r\n\t\t\t\t\treturn result\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tif(isPlainObject(defPart) && !o[key]){\r\n\t\t\t\to[key] = {} // null-safe traversal\r\n\t\t\t}\r\n\r\n\t\t\treturn getProxy(model, o[key], defPart, newPath, privateAccess)\r\n\t\t},\r\n\r\n\t\tset(o, key, val) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\r\n\t\t\t\tnewPath => Reflect.set(o, key, getProxy(model, val, def[key], newPath))\r\n\t\t\t)\r\n\t\t},\r\n\r\n\t\tdeleteProperty(o, key) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\r\n\t\t},\r\n\r\n\t\tdefineProperty(o, key, args){\r\n\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\r\n\t\t},\r\n\r\n\t\thas(o, key){\r\n\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t\t},\r\n\r\n\t\townKeys(o){\r\n\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\r\n\t\t},\r\n\r\n\t\tgetOwnPropertyDescriptor(o, key){\r\n\t\t\tlet descriptor;\r\n\t\t\tif (!model.conventionForPrivate(key)) {\r\n\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn descriptor\r\n\t\t}\r\n\t})\r\n\r\n\r\nexport function Model(def, params) {\r\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\r\n}\r\n\r\nObject.assign(Model.prototype, {\r\n\tname: \"Model\",\r\n\tassertions: [],\r\n\r\n\tconventionForConstant: key => key.toUpperCase() === key,\r\n\tconventionForPrivate: key => key[0] === \"_\",\r\n\r\n\ttoString(stack){\r\n\t\treturn formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\tas(name){\r\n\t\tdefine(this, \"name\", name);\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val){\r\n\t\tthis.default = val\r\n\t\treturn this\r\n\t},\r\n\r\n\t[_validate](obj, path, errors, stack){\r\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t},\r\n\r\n\tvalidate(obj, errorCollector){\r\n\t\tthis[_validate](obj, null, this.errors, [])\r\n\t\treturn !unstackErrors(this, errorCollector)\r\n\t},\r\n\r\n\ttest(obj){\r\n\t\tlet model = this;\r\n\t\twhile(!has(model, \"errorCollector\")){\r\n\t\t\tmodel = getProto(model)\r\n\t\t}\r\n\r\n\t\tlet initialErrorCollector = model.errorCollector,\r\n\t\t    failed;\r\n\r\n\t\tmodel.errorCollector = () => {\r\n\t\t\tfailed = true\r\n\t\t}\r\n\r\n\t\tnew this(obj) // may trigger this.errorCollector\r\n\r\n\t\tmodel.errorCollector = initialErrorCollector\r\n\t\treturn !failed\r\n\t},\r\n\r\n\terrorCollector(errors){\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\tassert(assertion, description = format(assertion)){\r\n\t\tdefine(assertion, \"description\", description);\r\n\t\tthis.assertions = this.assertions.concat(assertion)\r\n\t\treturn this\r\n\t}\r\n})\r\n\r\n\r\nexport function BasicModel(def) {\r\n\tlet model = function (val = model.default) {\r\n\t\treturn model.validate(val) ? val : undefined\r\n\t}\r\n\r\n\tsetConstructor(model, BasicModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(BasicModel, Model, {\r\n\textend(...newParts) {\r\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\r\n\t\t}\r\n\r\n\t\treturn child\r\n\t}\r\n})\r\n\r\n\r\nexport function ObjectModel(def, params) {\r\n\tlet model = function (obj = model.default) {\r\n\t\tlet instance = this\r\n\t\tif (!is(model, instance)) return new model(obj)\r\n\t\tif (is(model, obj)) return obj\r\n\r\n\t\tif(!is(Object, obj) && obj !== undefined){\r\n\t\t\tstackError(model.errors, Object, obj);\r\n\t\t}\r\n\r\n\t\tmerge(instance, model[_constructor](obj), true)\r\n\r\n\t\tif (!model.validate(instance)) return\r\n\t\treturn getProxy(model, instance, model.definition)\r\n\t}\r\n\r\n\tObject.assign(model, params)\r\n\textend(model, Object)\r\n\tsetConstructor(model, ObjectModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(ObjectModel, Model, {\r\n\tsealed: false,\r\n\r\n\tdefaults(p){\r\n\t\tObject.assign(this.prototype, p)\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack){\r\n\t\treturn format(this.definition, stack)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\tlet parent = this,\r\n\t\t    def = Object.assign({}, this.definition),\r\n\t\t    newAssertions = [],\r\n\t\t    proto = {}\r\n\r\n\t\tmerge(proto, parent.prototype, false)\r\n\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(Model, part)) {\r\n\t\t\t\tmerge(def, part.definition, true)\r\n\t\t\t\tnewAssertions.push(...part.assertions)\r\n\t\t\t}\r\n\t\t\tif (isFunction(part)) merge(proto, part.prototype, true)\r\n\t\t\tif (isObject(part)) merge(def, part, true)\r\n\t\t}\r\n\r\n\t\tlet submodel = extendModel(new ObjectModel(def), parent, proto)\r\n\t\tsubmodel.assertions = parent.assertions.concat(newAssertions)\r\n\r\n\t\tif(getProto(parent) !== ObjectModel.prototype) { // extended class\r\n\t\t\tsubmodel[_constructor] = (obj) => {\r\n\t\t\t\tlet parentInstance = new parent(obj)\r\n\t\t\t\tmerge(obj, parentInstance, true) // get modified props from parent class constructor\r\n\t\t\t\treturn obj\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t[_constructor]: o => o,\r\n\r\n\t[_validate](obj, path, errors, stack){\r\n\t\tif (isObject(obj)){\r\n\t\t\tlet def = this.definition\r\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\r\n\t\t\tif(this.sealed) checkUndeclaredProps(obj, def, errors)\r\n\t\t}\r\n\t\telse stackError(errors, this, obj, path)\r\n\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t}\r\n})","import {_original, _validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, formatDefinition, initModel, Model, stackError, unstackErrors} from \"./object-model.js\"\r\nimport {extend, isArray, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\nlet ARRAY_MUTATORS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"]\r\n\r\nexport default function ArrayModel(def) {\r\n\r\n\tlet model = function (array = model.default) {\r\n\t\tif (model.validate(array)) return proxifyModel(array, model, {\r\n\t\t\tget(arr, key) {\r\n\t\t\t\tif(key === _original) return arr\r\n\r\n\t\t\t\tlet val = arr[key];\r\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\r\n\t\t\t\t\tif (ARRAY_MUTATORS.includes(key)) {\r\n\t\t\t\t\t\tlet testArray = arr.slice()\r\n\t\t\t\t\t\tfn.apply(testArray, args)\r\n\t\t\t\t\t\tmodel.validate(testArray)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet returnValue = fn.apply(arr, args)\r\n\t\t\t\t\tarray.forEach((a, i) => arr[i] = cast(a, model.definition))\r\n\t\t\t\t\treturn returnValue\r\n\t\t\t\t}) : val\r\n\t\t\t},\r\n\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\treturn setArrayKey(arr, key, val, model)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(arr, key){\r\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Array)\r\n\tsetConstructor(model, ArrayModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(ArrayModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_validate](arr, path, errors, stack){\r\n\t\tif (isArray(arr))\r\n\t\t\tarr.forEach((a, i) => {\r\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack)\r\n\t\t\t})\r\n\t\telse stackError(errors, this, arr, path)\r\n\r\n\t\tcheckAssertions(arr, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})\r\n\r\nlet setArrayKey = (array, key, value, model) => {\r\n\tlet path = `Array[${key}]`;\r\n\tif (parseInt(key) === +key && key >= 0)\r\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [])\r\n\r\n\tlet testArray = array.slice()\r\n\ttestArray[key] = value\r\n\tcheckAssertions(testArray, model, path)\r\n\tlet isSuccess = !unstackErrors(model)\r\n\tif (isSuccess) array[key] = value\r\n\treturn isSuccess\r\n}","import {_original, _validate, checkAssertions, checkDefinition, extendDefinition, extendModel, format, formatDefinition, initModel, Model, stackError, unstackErrors} from \"./object-model.js\"\r\nimport {extend, isFunction, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\n\r\nexport default function FunctionModel(...argsDef) {\r\n\r\n\tlet model = function (fn = model.default) {\r\n\t\tif (!model.validate(fn)) return\r\n\t\treturn proxifyModel(fn, model, {\r\n\t\t\tget(fn, key) {\r\n\t\t\t\tif (key === _original) return fn\r\n\t\t\t\treturn fn[key]\r\n\t\t\t},\r\n\r\n\t\t\tapply (fn, ctx, args) {\r\n\t\t\t\tlet def = model.definition\r\n\r\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\r\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [])\r\n\t\t\t\t})\r\n\r\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\r\n\r\n\t\t\t\tlet result\r\n\t\t\t\tif (!model.errors.length) {\r\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\r\n\t\t\t\t\tif (\"return\" in def)\r\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [])\r\n\t\t\t\t}\r\n\t\t\t\tunstackErrors(model)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\textend(model, Function)\r\n\tsetConstructor(model, FunctionModel)\r\n\tinitModel(model, {arguments: argsDef})\r\n\r\n\treturn model\r\n}\r\n\r\nextend(FunctionModel, Model, {\r\n\ttoString(stack = []){\r\n\t\tlet out = `Function(${this.definition.arguments.map(\r\n\t\t\targDef => formatDefinition(argDef, stack.slice())\r\n\t\t).join(\", \")})`\r\n\r\n\t\tif (\"return\" in this.definition) {\r\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\r\n\t\t}\r\n\t\treturn out\r\n\t},\r\n\r\n\treturn(def){\r\n\t\tthis.definition.return = def\r\n\t\treturn this\r\n\t},\r\n\r\n\textend(newArgs, newReturns) {\r\n\t\tlet args = this.definition.arguments,\r\n\t\t    mixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\r\n\t\t    mixedReturns = extendDefinition(this.definition.return, newReturns)\r\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\r\n\t},\r\n\r\n\t[_validate](f, path, errors){\r\n\t\tif (!isFunction(f)) {\r\n\t\t\tstackError(errors, \"Function\", f, path)\r\n\t\t}\r\n\t}\r\n})\r\n\r\nFunctionModel.prototype.assert(function numberOfArgs(args) {\r\n\treturn (args.length > this.definition.arguments.length) ? args : true\r\n}, function (args) {\r\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\r\n})","import {_original, _validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, format, formatDefinition, initModel, Model, stackError} from \"./object-model.js\";\r\nimport {extend, is, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\nlet MAP_MUTATORS = [\"set\", \"delete\", \"clear\"]\r\n\r\nexport default function MapModel(key, value) {\r\n\r\n\tlet model = function (iterable = model.default) {\r\n\t\tlet castKeyValue = pair => [\"key\", \"value\"].map((prop, i) => cast(pair[i], model.definition[prop])),\r\n\t\t    map = new Map([...iterable].map(castKeyValue))\r\n\r\n\t\tif (!model.validate(map)) return\r\n\r\n\t\treturn proxifyModel(map, model, {\r\n\t\t\tget(map, key) {\r\n\t\t\t\tif(key === _original) return map\r\n\r\n\t\t\t\tlet val = map[key];\r\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\r\n\t\t\t\t\tif (key === \"set\") {\r\n\t\t\t\t\t\targs = castKeyValue(args)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (MAP_MUTATORS.includes(key)) {\r\n\t\t\t\t\t\tlet testMap = new Map(map)\r\n\t\t\t\t\t\tfn.apply(testMap, args)\r\n\t\t\t\t\t\tmodel.validate(testMap)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn fn.apply(map, args)\r\n\t\t\t\t}) : val\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Map)\r\n\tsetConstructor(model, MapModel)\r\n\tinitModel(model, {key, value})\r\n\treturn model\r\n}\r\n\r\nextend(MapModel, Model, {\r\n\ttoString(stack) {\r\n\t\tlet {key, value} = this.definition\r\n\t\treturn `Map of ${formatDefinition(key, stack)} : ${formatDefinition(value, stack)}`\r\n\t},\r\n\r\n\t[_validate](map, path, errors, stack) {\r\n\t\tif (is(Map, map)) {\r\n\t\t\tpath = path || 'Map'\r\n\t\t\tfor (let [key, value] of map) {\r\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\r\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, map, path)\r\n\r\n\t\tcheckAssertions(map, this, path, errors)\r\n\t},\r\n\r\n\textend(keyPart, valuePart){\r\n\t\tlet {key, value} = this.definition\r\n\t\treturn extendModel(new MapModel(extendDefinition(key, keyPart), extendDefinition(value, valuePart)), this)\r\n\t}\r\n})","import {_original, _validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, formatDefinition, initModel, Model, stackError} from \"./object-model.js\"\r\nimport {extend, is, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\nlet SET_MUTATORS = [\"add\", \"delete\", \"clear\"]\r\n\r\nexport default function SetModel(def) {\r\n\r\n\tlet model = function (iterable = model.default) {\r\n\t\tlet castValue = val => cast(val, model.definition),\r\n\t\t    set = new Set([...iterable].map(castValue))\r\n\r\n\t\tif (!model.validate(set)) return\r\n\r\n\t\treturn proxifyModel(set, model, {\r\n\t\t\tget(set, key) {\r\n\t\t\t\tif(key === _original) return set\r\n\r\n\t\t\t\tlet val = set[key]\r\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\r\n\t\t\t\t\tif (key === \"add\") {\r\n\t\t\t\t\t\targs[0] = castValue(args[0])\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (SET_MUTATORS.includes(key)) {\r\n\t\t\t\t\t\tlet testSet = new Set(set)\r\n\t\t\t\t\t\tfn.apply(testSet, args)\r\n\t\t\t\t\t\tmodel.validate(testSet)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn fn.apply(set, args)\r\n\t\t\t\t}) : val\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Set)\r\n\tsetConstructor(model, SetModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(SetModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_validate](set, path, errors, stack){\r\n\t\tif (is(Set, set)) {\r\n\t\t\tfor (let item of set.values()) {\r\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, set, path)\r\n\t\tcheckAssertions(set, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})"],"names":["getProto","x","Object","getPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isString","s","isFunction","f","isObject","isArray","a","Array","isPlainObject","prototype","proxify","val","traps","Proxy","proxifyFn","fn","apply","proxifyModel","model","assign","mapProps","keys","map","merge","target","src","deep","key","define","value","enumerable","defineProperty","writable","configurable","setConstructor","constructor","setPrototypeOf","extend","child","parent","props","create","_constructor","Symbol","_validate","_original","for","initModel","def","definition","assertions","name","extendModel","newProps","push","stackError","errors","expected","received","path","message","unstackErrors","errorCollector","nbErrors","length","err","d","format","join","toString","call","match","bettertypeof","isModelInstance","i","Model","parseDefinition","undefined","formatDefinition","stack","parts","extendDefinition","newParts","reduce","ext","concat","slice","filter","index","self","indexOf","checkDefinition","indexFound","cast","formatPath","some","part","checkDefinitionPart","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","isInDefinition","sealed","rejectUndeclaredProp","msg","defNode","suitableModels","duck","ObjectModel","console","warn","checkUndeclaredProps","subpath","getProxy","[object Object]","Reflect","get","defPart","ctx","args","set","deleteProperty","ownKeys","descriptor","params","BasicModel","default","validate","this","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","p","newAssertions","proto","submodel","parentInstance","ARRAY_MUTATORS","ArrayModel","array","arr","testArray","returnValue","forEach","setArrayKey","parseInt","isSuccess","FunctionModel","argsDef","arguments","argDef","return","Function","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","MAP_MUTATORS","MapModel","iterable","castKeyValue","pair","testMap","keyPart","valuePart","SET_MUTATORS","SetModel","castValue","testSet","values"],"mappings":"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"}