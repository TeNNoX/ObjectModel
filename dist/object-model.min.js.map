{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/formatter.js","../src/object-model.js","../src/definition.js","../src/basic-model.js","../src/model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\r\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\r\n\tgetProto     = x => Object.getPrototypeOf(x),\r\n\r\n\thas           = (o, prop) => o.hasOwnProperty(prop),\r\n\tis            = (Constructor, obj) => obj instanceof Constructor,\r\n\tisString      = s => typeof s === \"string\",\r\n\tisFunction    = f => typeof f === \"function\",\r\n\tisObject      = o => typeof o === \"object\",\r\n\tisArray       = a => Array.isArray(a),\r\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\r\n\r\n\tproxify      = (val, traps) => new Proxy(val, traps),\r\n\tproxifyFn    = (fn, apply) => proxify(fn, {apply}),\r\n\tproxifyModel = (val, model, traps) => proxify(val, Object.assign({getPrototypeOf: () => model.prototype}, traps)),\r\n\r\n\tmapProps = (o, fn) => Object.keys(o).map(fn),\r\n\r\n\tmerge = (target, src = {}, deep) => {\r\n\t\tfor (let key in src) {\r\n\t\t\tif (deep && isPlainObject(src[key])) {\r\n\t\t\t\tlet o = {}\r\n\t\t\t\tmerge(o, target[key], deep)\r\n\t\t\t\tmerge(o, src[key], deep)\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tdefine = (obj, key, value, enumerable = false) => {\r\n\t\tObject.defineProperty(obj, key, {value, enumerable, writable: true, configurable: true})\r\n\t},\r\n\r\n\tsetConstructor = (model, constructor) => {\r\n\t\tObject.setPrototypeOf(model, constructor.prototype)\r\n\t\tdefine(model, \"constructor\", constructor)\r\n\t},\r\n\r\n\textend = (child, parent, props) => {\r\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\r\n\t\t\tconstructor: {\r\n\t\t\t\tvalue: child,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t}\r\n\t\t}), props)\r\n\t\tObject.setPrototypeOf(child, parent)\r\n\t}","import {is, isArray, isFunction, isObject, isString} from \"./helpers.js\"\nimport Model from \"./model.js\"\n\nexport const\n\tformat = (obj, stack = []) => {\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\n\t\tif (obj === null || obj === undefined) return String(obj)\n\t\tif (isString(obj)) return `\"${obj}\"`\n\t\tif (is(Model, obj)) return obj.toString(stack)\n\n\t\tstack.unshift(obj)\n\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\n\t\tif (isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\n\t\tif (obj && isObject(obj)) {\n\t\t\tlet props  = Object.keys(obj),\n\t\t\t    indent = '\\t'.repeat(stack.length)\n\t\t\treturn `{${props.map(\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], stack.slice())}`\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\n\t\t}\n\n\t\treturn String(obj)\n\t},\n\n\tformatPath = (path, key) => path ? path + '.' + key : key","import {extendModel, initModel, isModelInstance, Model, stackError, unstackErrors} from \"./model.js\"\r\nimport {_validate, cast, checkAssertions, checkDefinition} from \"./definition.js\"\r\nimport {format, formatPath} from \"./formatter.js\"\r\nimport {extend, getProto, has, is, isFunction, isObject, isPlainObject, isString, mapProps, merge, proxify, setConstructor} from \"./helpers.js\"\r\n\r\nconst _constructor = Symbol();\r\n\r\nexport default function ObjectModel(def, params) {\r\n\tlet model = function (obj = model.default) {\r\n\t\tlet instance = this\r\n\t\tif (!is(model, instance)) return new model(obj)\r\n\t\tif (is(model, obj)) return obj\r\n\r\n\t\tmerge(instance, model[_constructor](obj), true)\r\n\t\tif (!model.validate(instance)) return\r\n\t\treturn getProxy(model, instance, model.definition)\r\n\t}\r\n\r\n\tObject.assign(model, params)\r\n\textend(model, Object)\r\n\tsetConstructor(model, ObjectModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(ObjectModel, Model, {\r\n\tsealed: false,\r\n\r\n\tdefaults(p){\r\n\t\tObject.assign(this.prototype, p)\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack){\r\n\t\treturn format(this.definition, stack)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\tlet parent = this,\r\n\t\t    def = Object.assign({}, this.definition),\r\n\t\t    newAssertions = [],\r\n\t\t    proto = {}\r\n\r\n\t\tmerge(proto, parent.prototype, false)\r\n\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(Model, part)) {\r\n\t\t\t\tmerge(def, part.definition, true)\r\n\t\t\t\tnewAssertions.push(...part.assertions)\r\n\t\t\t}\r\n\t\t\tif (isFunction(part)) merge(proto, part.prototype, true)\r\n\t\t\tif (isObject(part)) merge(def, part, true)\r\n\t\t}\r\n\r\n\t\tlet submodel = extendModel(new ObjectModel(def), parent, proto)\r\n\t\tsubmodel.assertions = parent.assertions.concat(newAssertions)\r\n\r\n\t\tif(getProto(parent) !== ObjectModel.prototype) { // extended class\r\n\t\t\tsubmodel[_constructor] = (obj) => {\r\n\t\t\t\tlet parentInstance = new parent(obj)\r\n\t\t\t\tmerge(obj, parentInstance, true) // get modified props from parent class constructor\r\n\t\t\t\treturn obj\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t[_constructor]: o => o,\r\n\r\n\t[_validate](obj, path, errors, stack){\r\n\t\tif (isObject(obj)){\r\n\t\t\tlet def = this.definition\r\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\r\n\t\t\tif(this.sealed) checkUndeclaredProps(obj, def, errors)\r\n\t\t}\r\n\t\telse stackError(errors, this, obj, path)\r\n\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t}\r\n})\r\n\r\nlet cannot = (msg, model) => {\r\n\tmodel.errors.push({ message: \"cannot \" + msg })\r\n}\r\n\r\nlet getProxy = (model, obj, def, path) => !isPlainObject(def) ? cast(obj, def) : proxify(obj, {\r\n\r\n\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\r\n\r\n\tget(o, key) {\r\n\t\tif (!isString(key))\r\n\t\t\treturn Reflect.get(o, key)\r\n\r\n\t\tlet newPath = formatPath(path, key),\r\n\t\t    defPart = def[key];\r\n\r\n\t\tif (key in def && model.conventionForPrivate(key)) {\r\n\t\t\tcannot(`access to private property ${newPath}`, model)\r\n\t\t\tunstackErrors(model)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\r\n\t\t\to[key] = cast(o[key], defPart) // cast nested models\r\n\t\t}\r\n\r\n\t\tif (isFunction(o[key]) && o[key].bind)\r\n\t\t\treturn o[key].bind(o); // auto-bind methods to original object, so they can access private props\r\n\r\n\t\tif(isPlainObject(defPart) && !o[key]){\r\n\t\t\to[key] = {} // null-safe traversal\r\n\t\t}\r\n\r\n\t\treturn getProxy(model, o[key], defPart, newPath)\r\n\t},\r\n\r\n\tset(o, key, val) {\r\n\t\treturn controlMutation(model, def, path, o, key, (newPath) => Reflect.set(o, key, getProxy(model, val, def[key], newPath)))\r\n\t},\r\n\r\n\tdeleteProperty(o, key) {\r\n\t\treturn controlMutation(model, def, path, o, key, () => Reflect.deleteProperty(o, key))\r\n\t},\r\n\r\n\tdefineProperty(o, key, args){\r\n\t\treturn controlMutation(model, def, path, o, key, () => Reflect.defineProperty(o, key, args))\r\n\t},\r\n\r\n\thas(o, key){\r\n\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t},\r\n\r\n\townKeys(o){\r\n\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\r\n\t},\r\n\r\n\tgetOwnPropertyDescriptor(o, key){\r\n\t\tlet descriptor;\r\n\t\tif (!model.conventionForPrivate(key)) {\r\n\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\tif (descriptor !== undefined) descriptor.value = o[key];\r\n\t\t}\r\n\r\n\t\treturn descriptor\r\n\t}\r\n})\r\n\r\nlet controlMutation = (model, def, path, o, key, applyMutation) => {\r\n\tlet newPath       = formatPath(path, key),\r\n\t    isPrivate     = model.conventionForPrivate(key),\r\n\t    isConstant    = model.conventionForConstant(key),\r\n\t    isOwnProperty = has(o, key),\r\n\t    initialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\r\n\r\n\tif (key in def && (isPrivate || (isConstant && o[key] !== undefined)))\r\n\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} ${key}`, model)\r\n\r\n\tlet isInDefinition = has(def, key);\r\n\tif (isInDefinition || !model.sealed) {\r\n\t\tapplyMutation(newPath)\r\n\t\tisInDefinition && checkDefinition(o[key], def[key], newPath, model.errors, [])\r\n\t\tcheckAssertions(o, model, newPath)\r\n\t}\r\n\telse rejectUndeclaredProp(newPath, o[key], model.errors)\r\n\r\n\tlet nbErrors = model.errors.length\r\n\tif (nbErrors) {\r\n\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\r\n\t\telse delete o[key] // back to the initial property defined in prototype chain\r\n\r\n\t\tunstackErrors(model)\r\n\t}\r\n\r\n\treturn !nbErrors\r\n}\r\n\r\nlet checkUndeclaredProps = (obj, def, errors, path) => {\r\n\tmapProps(obj, key => {\r\n\t\tlet val = obj[key],\r\n\t\t    subpath = formatPath(path, key)\r\n\t\tif(!has(def, key)) rejectUndeclaredProp(subpath, val, errors)\r\n\t\telse if(isPlainObject(val))\tcheckUndeclaredProps(val, def[key], errors, subpath)\r\n\t})\r\n}\r\n\r\nlet rejectUndeclaredProp = (path, received, errors) => {\r\n\terrors.push({\r\n\t\tpath,\r\n\t\treceived,\r\n\t\tmessage: `property ${path} is not declared in the sealed model definition`\r\n\t})\r\n}","import {is, isArray, isFunction, isPlainObject, mapProps} from \"./helpers.js\"\nimport {format, formatPath} from \"./formatter.js\"\nimport {isModelInstance, Model, stackError} from \"./model.js\"\nimport ObjectModel from \"./object-model.js\"\n\nexport const\n\t_validate = Symbol(),\n\n\tparseDefinition = (def) => {\n\t\tif (isPlainObject(def)) {\n\t\t\tmapProps(def, key => { def[key] = parseDefinition(def[key]) })\n\t\t}\n\t\telse if (!isArray(def)) return [def]\n\t\telse if (def.length === 1) return [...def, undefined, null]\n\n\t\treturn def\n\t},\n\n\tformatDefinition = (def, stack) => parseDefinition(def).map(d => format(d, stack)).join(\" or \"),\n\n\textendDefinition = (def, newParts = []) => {\n\t\tif (!isArray(newParts)) newParts = [newParts]\n\t\tif (newParts.length > 0) {\n\t\t\tdef = newParts\n\t\t\t\t.reduce((def, ext) => def.concat(ext), isArray(def) ? def.slice() : [def]) // clone to lose ref\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\n\t\t}\n\n\t\treturn def\n\t},\n\n\tcheckDefinition = (obj, def, path, errors, stack) => {\n\t\tlet indexFound = stack.indexOf(def)\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\n\t\t\treturn obj //if found twice in call stack, cycle detected, skip validation\n\n\t\tobj = cast(obj, def)\n\n\t\tif (is(Model, def)) {\n\t\t\tdef[_validate](obj, path, errors, stack.concat(def))\n\t\t}\n\t\telse if (isPlainObject(def)) {\n\t\t\tmapProps(def, key => {\n\t\t\t\tcheckDefinition(obj ? obj[key] : undefined, def[key], formatPath(path, key), errors, stack)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tlet pdef = parseDefinition(def)\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack)))\n\t\t\t\treturn obj\n\n\t\t\tstackError(errors, def, obj, path)\n\t\t}\n\n\t\treturn obj\n\t},\n\n\tcheckDefinitionPart = (obj, def, path, stack) => {\n\t\tif (obj == null) return obj === def\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\n\t\t\tlet errors = []\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\n\t\t\treturn !errors.length\n\t\t}\n\t\tif (is(RegExp, def)) return def.test(obj)\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\n\t\treturn obj === def\n\t\t\t|| (isFunction(def) && is(def, obj))\n\t\t\t|| obj.constructor === def\n\t},\n\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\n\t\tfor (let assertion of model.assertions) {\n\t\t\tlet result\n\t\t\ttry {\n\t\t\t\tresult = assertion.call(model, obj)\n\t\t\t} catch (err) {\n\t\t\t\tresult = err\n\t\t\t}\n\t\t\tif (result !== true) {\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\n\t\t\t\t\t+`for ${path ? path+\" =\" : \"value\"} ${format(value)}`\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\n\t\t\t}\n\t\t}\n\t},\n\n\tcast = (obj, defNode = []) => {\n\t\tif (!obj || isPlainObject(defNode) || isModelInstance(obj))\n\t\t\treturn obj // no value or not leaf or already a model instance\n\n\t\tlet def = parseDefinition(defNode),\n\t\t    suitableModels = []\n\n\t\tfor (let part of def) {\n\t\t\tif (is(Model, part) && part.test(obj))\n\t\t\t\tsuitableModels.push(part)\n\t\t}\n\n\t\tif (suitableModels.length === 1){\n\t\t\t// automatically cast to suitable model when explicit (duck typing)\n\t\t\tlet duck = suitableModels[0];\n\t\t\treturn duck instanceof ObjectModel ? new duck(obj) : duck(obj)\n\t\t}\n\n\t\tif (suitableModels.length > 1)\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\n\n\t\treturn obj\n\t}","import {extend, is, setConstructor} from \"./helpers.js\"\nimport {extendDefinition} from \"./definition.js\"\nimport {extendModel, initModel, Model} from \"./model.js\"\n\n\nexport default function BasicModel(def) {\n\tlet model = function (val = model.default) {\n\t\treturn model.validate(val) ? val : undefined\n\t}\n\n\tsetConstructor(model, BasicModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(BasicModel, Model, {\n\textend(...newParts) {\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\n\t\tfor (let part of newParts) {\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\n\t\t}\n\n\t\treturn child\n\t}\n})","import {bettertypeof, define, extend, getProto, is, isArray, isPlainObject} from \"./helpers.js\"\r\nimport {format} from \"./formatter.js\"\r\nimport {_validate, checkAssertions, checkDefinition, formatDefinition} from \"./definition.js\"\r\nimport BasicModel from \"./basic-model.js\"\r\nimport ObjectModel from \"./object-model.js\"\r\n\r\nexport function Model(def, params) {\r\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\r\n}\r\n\r\nObject.assign(Model.prototype, {\r\n\tname: \"Model\",\r\n\tassertions: [],\r\n\r\n\tconventionForConstant: key => key.toUpperCase() === key,\r\n\tconventionForPrivate: key => key[0] === \"_\",\r\n\r\n\ttoString(stack){\r\n\t\treturn formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\tas(name){\r\n\t\tdefine(this, \"name\", name);\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val){\r\n\t\tthis.default = val\r\n\t\treturn this\r\n\t},\r\n\r\n\t[_validate](obj, path, errors, stack){\r\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t},\r\n\r\n\tvalidate(obj, errorCollector){\r\n\t\tthis[_validate](obj, null, this.errors, [])\r\n\t\treturn !unstackErrors(this, errorCollector)\r\n\t},\r\n\r\n\ttest(obj){\r\n\t\tlet failed,\r\n\t\t    initialErrorCollector = this.errorCollector\r\n\r\n\t\tthis.errorCollector = () => {\r\n\t\t\tfailed = true\r\n\t\t}\r\n\r\n\t\tnew this(obj) // may trigger this.errorCollector\r\n\r\n\t\tthis.errorCollector = initialErrorCollector\r\n\t\treturn !failed\r\n\t},\r\n\r\n\terrorCollector(errors){\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\tassert(assertion, description = format(assertion)){\r\n\t\tdefine(assertion, \"description\", description);\r\n\t\tthis.assertions = this.assertions.concat(assertion)\r\n\t\treturn this\r\n\t}\r\n})\r\n\r\nexport let initModel = (model, def) => {\r\n\tmodel.definition = def\r\n\tmodel.assertions = [...model.assertions]\r\n\tdefine(model, \"errors\", [])\r\n\tdelete model.name;\r\n}\r\n\r\nexport let extendModel = (child, parent, newProps) => {\r\n\textend(child, parent, newProps)\r\n\tchild.assertions.push(...parent.assertions)\r\n\treturn child\r\n}\r\n\r\nexport let stackError = (errors, expected, received, path, message) => {\r\n\terrors.push({expected, received, path, message})\r\n}\r\n\r\nexport let unstackErrors = (model, errorCollector = model.errorCollector) => {\r\n\tlet nbErrors = model.errors.length\r\n\tif (nbErrors > 0) {\r\n\t\tlet errors = model.errors.map(err => {\r\n\t\t\tif (!err.message) {\r\n\t\t\t\tlet def = isArray(err.expected) ? err.expected : [err.expected]\r\n\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\r\n\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\r\n\t\t\t}\r\n\t\t\treturn err\r\n\t\t})\r\n\t\tmodel.errors = []\r\n\t\terrorCollector.call(model, errors) // throw all errors collected\r\n\t}\r\n\treturn nbErrors\r\n}\r\n\r\nexport let isModelInstance = i => i && is(Model, getProto(i).constructor)\r\n\r\nexport default Model","import {extendModel, initModel, Model, stackError, unstackErrors} from \"./model.js\"\nimport {_validate, cast, checkAssertions, checkDefinition, extendDefinition, formatDefinition} from \"./definition.js\"\nimport {extend, isArray, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\n\nlet ARRAY_MUTATORS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"]\n\nexport default function ArrayModel(def) {\n\n\tlet model = function (array = model.default) {\n\t\tif (model.validate(array)) return proxifyModel(array, model, {\n\t\t\tget(arr, key) {\n\t\t\t\tlet val = arr[key];\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\n\t\t\t\t\tif (ARRAY_MUTATORS.includes(key)) {\n\t\t\t\t\t\tlet testArray = arr.slice()\n\t\t\t\t\t\tfn.apply(testArray, args)\n\t\t\t\t\t\tmodel.validate(testArray)\n\t\t\t\t\t}\n\n\t\t\t\t\tlet returnValue = fn.apply(arr, args)\n\t\t\t\t\tarray.forEach((a, i) => arr[i] = cast(a, model.definition))\n\t\t\t\t\treturn returnValue\n\t\t\t\t}) : val\n\t\t\t},\n\n\t\t\tset(arr, key, val) {\n\t\t\t\treturn setArrayKey(arr, key, val, model)\n\t\t\t},\n\n\t\t\tdeleteProperty(arr, key){\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\n\t\t\t}\n\t\t})\n\t}\n\n\textend(model, Array)\n\tsetConstructor(model, ArrayModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(ArrayModel, Model, {\n\ttoString(stack){\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](arr, path, errors, stack){\n\t\tif (isArray(arr))\n\t\t\tarr.forEach((a, i) => {\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack)\n\t\t\t})\n\t\telse stackError(errors, this, arr, path)\n\n\t\tcheckAssertions(arr, this, path, errors)\n\t},\n\n\textend(...newParts){\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})\n\nlet setArrayKey = (array, key, value, model) => {\n\tlet path = `Array[${key}]`;\n\tif (parseInt(key) === +key && key >= 0)\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [])\n\n\tlet testArray = array.slice()\n\ttestArray[key] = value\n\tcheckAssertions(testArray, model, path)\n\tlet isSuccess = !unstackErrors(model)\n\tif (isSuccess) array[key] = value\n\treturn isSuccess\n}","import {extendModel, initModel, Model, stackError, unstackErrors} from \"./model.js\"\nimport {_validate, checkAssertions, checkDefinition, extendDefinition, formatDefinition} from \"./definition.js\"\nimport {extend, isFunction, proxifyModel, setConstructor} from \"./helpers.js\"\nimport {format} from \"./formatter.js\"\n\n\nexport default function FunctionModel(...argsDef) {\n\n\tlet model = function (fn = model.default) {\n\t\tif (!model.validate(fn)) return\n\t\treturn proxifyModel(fn, model, {\n\t\t\tapply (fn, ctx, args) {\n\t\t\t\tlet def = model.definition\n\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [])\n\t\t\t\t})\n\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\n\n\t\t\t\tlet result\n\t\t\t\tif (!model.errors.length) {\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\n\t\t\t\t\tif (\"return\" in def)\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [])\n\t\t\t\t}\n\t\t\t\tunstackErrors(model)\n\t\t\t\treturn result\n\t\t\t}\n\t\t});\n\t}\n\n\textend(model, Function)\n\tsetConstructor(model, FunctionModel)\n\tinitModel(model, {arguments: argsDef})\n\n\treturn model\n}\n\nextend(FunctionModel, Model, {\n\ttoString(stack = []){\n\t\tlet out = `Function(${this.definition.arguments.map(\n\t\t\targDef => formatDefinition(argDef, stack.slice())\n\t\t).join(\",\")})`\n\n\t\tif (\"return\" in this.definition) {\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\n\t\t}\n\t\treturn out\n\t},\n\n\treturn(def){\n\t\tthis.definition.return = def\n\t\treturn this\n\t},\n\n\textend(newArgs, newReturns) {\n\t\tlet args = this.definition.arguments,\n\t\t    mixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\n\t\t    mixedReturns = extendDefinition(this.definition.return, newReturns)\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\n\t},\n\n\t[_validate](f, path, errors){\n\t\tif (!isFunction(f)) {\n\t\t\tstackError(errors, \"Function\", f, path)\n\t\t}\n\t}\n})\n\nFunctionModel.prototype.assert(function (args) {\n\treturn (args.length > this.definition.arguments.length) ? args : true\n}, function (args) {\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\n})","import {extendModel, initModel, Model, stackError} from \"./model.js\"\nimport {_validate, cast, checkAssertions, checkDefinition, extendDefinition, formatDefinition} from \"./definition.js\"\nimport {format} from \"./formatter.js\"\nimport {extend, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\n\nlet MAP_MUTATORS = [\"set\", \"delete\", \"clear\"]\n\nexport default function MapModel(key, value) {\n\n\tlet model = function (iterable = model.default) {\n\t\tlet castKeyValue = pair => [\"key\", \"value\"].map((prop, i) => cast(pair[i], model.definition[prop])),\n\t\t    map = new Map([...iterable].map(castKeyValue))\n\n\t\tif (!model.validate(map)) return\n\n\t\treturn proxifyModel(map, model, {\n\t\t\tget(map, key) {\n\t\t\t\tlet val = map[key];\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\n\t\t\t\t\tif (key === \"set\") {\n\t\t\t\t\t\targs = castKeyValue(args)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (MAP_MUTATORS.includes(key)) {\n\t\t\t\t\t\tlet testMap = new Map(map)\n\t\t\t\t\t\tfn.apply(testMap, args)\n\t\t\t\t\t\tmodel.validate(testMap)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn fn.apply(map, args)\n\t\t\t\t}) : val\n\t\t\t}\n\t\t})\n\t}\n\n\textend(model, Map)\n\tsetConstructor(model, MapModel)\n\tinitModel(model, {key, value})\n\treturn model\n}\n\nextend(MapModel, Model, {\n\ttoString(stack) {\n\t\tlet {key, value} = this.definition\n\t\treturn `Map of ${formatDefinition(key, stack)} : ${formatDefinition(value, stack)}`\n\t},\n\n\t[_validate](map, path, errors, stack) {\n\t\tif (map instanceof Map) {\n\t\t\tpath = path || 'Map'\n\t\t\tfor (let [key, value] of map) {\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, map, path)\n\n\t\tcheckAssertions(map, this, path, errors)\n\t},\n\n\textend(keyPart, valuePart){\n\t\tlet {key, value} = this.definition\n\t\treturn extendModel(new MapModel(extendDefinition(key, keyPart), extendDefinition(value, valuePart)), this)\n\t}\n})","import {extendModel, initModel, Model, stackError} from \"./model.js\"\nimport {_validate, cast, checkAssertions, checkDefinition, extendDefinition, formatDefinition} from \"./definition.js\"\nimport {extend, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\n\nlet SET_MUTATORS = [\"add\", \"delete\", \"clear\"]\n\nexport default function SetModel(def) {\n\n\tlet model = function (iterable = model.default) {\n\t\tlet castValue = val => cast(val, model.definition),\n\t\t    set = new Set([...iterable].map(castValue))\n\n\t\tif (!model.validate(set)) return\n\n\t\treturn proxifyModel(set, model, {\n\t\t\tget(set, key) {\n\t\t\t\tlet val = set[key]\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\n\t\t\t\t\tif (key === \"add\") {\n\t\t\t\t\t\targs[0] = castValue(args[0])\n\t\t\t\t\t}\n\n\t\t\t\t\tif (SET_MUTATORS.includes(key)) {\n\t\t\t\t\t\tlet testSet = new Set(set)\n\t\t\t\t\t\tfn.apply(testSet, args)\n\t\t\t\t\t\tmodel.validate(testSet)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn fn.apply(set, args)\n\t\t\t\t}) : val\n\t\t\t}\n\t\t})\n\t}\n\n\textend(model, Set)\n\tsetConstructor(model, SetModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(SetModel, Model, {\n\ttoString(stack){\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](set, path, errors, stack){\n\t\tif (set instanceof Set) {\n\t\t\tfor (let item of set.values()) {\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, set, path)\n\t\tcheckAssertions(set, this, path, errors)\n\t},\n\n\textend(...newParts){\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})"],"names":["getProto","x","Object","getPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isString","s","isFunction","f","isObject","isArray","a","Array","isPlainObject","prototype","proxify","val","traps","Proxy","proxifyFn","fn","apply","proxifyModel","model","assign","mapProps","keys","map","merge","target","src","deep","key","define","value","enumerable","defineProperty","writable","configurable","setConstructor","constructor","setPrototypeOf","extend","child","parent","props","create","format","stack","length","includes","undefined","String","Model","toString","unshift","name","Map","Set","item","join","indent","repeat","slice","formatPath","path","ObjectModel","def","params","default","this","_constructor","validate","getProxy","definition","initModel","sealed","[object Object]","p","newParts","newAssertions","proto","part","push","assertions","submodel","extendModel","concat","parentInstance","_validate","errors","checkDefinition","checkUndeclaredProps","stackError","checkAssertions","cannot","msg","message","Reflect","get","newPath","defPart","conventionForPrivate","unstackErrors","isModelInstance","cast","bind","set","controlMutation","deleteProperty","args","ownKeys","filter","descriptor","getOwnPropertyDescriptor","applyMutation","isPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","isInDefinition","rejectUndeclaredProp","nbErrors","subpath","received","Symbol","parseDefinition","formatDefinition","d","extendDefinition","reduce","ext","index","self","indexOf","indexFound","some","checkDefinitionPart","RegExp","test","Number","Date","isNaN","assertion","result","call","err","onFail","description","assertionResult","defNode","suitableModels","duck","console","warn","BasicModel","toUpperCase","errorCollector","failed","initialErrorCollector","e","TypeError","replace","newProps","expected","match","bettertypeof","i","ARRAY_MUTATORS","ArrayModel","array","arr","ctx","testArray","returnValue","forEach","setArrayKey","parseInt","isSuccess","FunctionModel","argsDef","arguments","argDef","return","Function","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","MAP_MUTATORS","MapModel","iterable","castKeyValue","pair","testMap","keyPart","valuePart","SET_MUTATORS","SetModel","castValue","testSet","values"],"mappings":"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"}