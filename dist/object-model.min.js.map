{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/list-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\r\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\r\n\tgetProto = Object.getPrototypeOf,\r\n\tsetProto = Object.setPrototypeOf,\r\n\r\n\thas = (o, prop) => o.hasOwnProperty(prop),\r\n\tis = (Constructor, obj) => obj instanceof Constructor,\r\n\tisFunction = f => typeof f === \"function\",\r\n\tisObject = o => typeof o === \"object\",\r\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\r\n\tisIterable = x => x && isFunction(x[Symbol.iterator]),\r\n\r\n\tproxifyFn = (fn, apply) => new Proxy(fn, { apply }),\r\n\tproxifyModel = (val, model, traps) => new Proxy(val, Object.assign({ getPrototypeOf: () => model.prototype }, traps)),\r\n\r\n\tmerge = (target, src = {}) => {\r\n\t\tfor (let key in src) {\r\n\t\t\tif (isPlainObject(src[key])) {\r\n\t\t\t\tlet o = {}\r\n\t\t\t\tmerge(o, target[key])\r\n\t\t\t\tmerge(o, src[key])\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target\r\n\t},\r\n\r\n\tdefine = (obj, key, value, enumerable = false) => {\r\n\t\tObject.defineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\r\n\t},\r\n\r\n\tsetConstructor = (model, constructor) => {\r\n\t\tsetProto(model, constructor.prototype)\r\n\t\tdefine(model, \"constructor\", constructor)\r\n\t},\r\n\r\n\textend = (child, parent, props) => {\r\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\r\n\t\t\tconstructor: {\r\n\t\t\t\tvalue: child,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t}\r\n\t\t}), props)\r\n\t\tsetProto(child, parent)\r\n\t}","import {\r\n\tbettertypeof, define, extend, getProto, has, is, isFunction, isObject, isPlainObject,\r\n\tmerge, proxifyFn, setConstructor\r\n} from \"./helpers.js\"\r\n\r\nexport const\r\n\t_validate = Symbol(),\r\n\t_original = Symbol(), // used to bypass proxy\r\n\r\n\tMODE_CAST = Symbol(), // used to skip validation at instanciation for perf\r\n\r\n\tinitModel = (model, def) => {\r\n\t\tmodel.definition = def\r\n\t\tmodel.assertions = [...model.assertions]\r\n\t\tdefine(model, \"errors\", [])\r\n\t\tdelete model.name;\r\n\t},\r\n\r\n\textendModel = (child, parent, newProps) => {\r\n\t\textend(child, parent, newProps)\r\n\t\tchild.assertions.push(...parent.assertions)\r\n\t\treturn child\r\n\t},\r\n\r\n\tstackError = (errors, expected, received, path, message) => {\r\n\t\terrors.push({ expected, received, path, message })\r\n\t},\r\n\r\n\tunstackErrors = (model, errorCollector = model.errorCollector) => {\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors > 0) {\r\n\t\t\tlet errors = model.errors.map(err => {\r\n\t\t\t\tif (!err.message) {\r\n\t\t\t\t\tlet def = [].concat(err.expected)\r\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\r\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\r\n\t\t\t\t}\r\n\t\t\t\treturn err\r\n\t\t\t})\r\n\t\t\tmodel.errors = []\r\n\t\t\terrorCollector.call(model, errors) // throw all errors collected\r\n\t\t}\r\n\t\treturn nbErrors\r\n\t},\r\n\r\n\tisModelInstance = i => i && is(Model, getProto(i).constructor),\r\n\r\n\tparseDefinition = (def) => {\r\n\t\tif (isPlainObject(def)) {\r\n\t\t\tObject.keys(def).map(key => { def[key] = parseDefinition(def[key]) })\r\n\t\t}\r\n\t\telse if (!Array.isArray(def)) return [def]\r\n\t\telse if (def.length === 1) return [...def, undefined, null]\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tformatDefinition = (def, stack) => {\r\n\t\tlet parts = parseDefinition(def).map(d => format(d, stack));\r\n\t\treturn parts.length > 1 ? `(${parts.join(\" or \")})` : parts[0]\r\n\t},\r\n\r\n\textendDefinition = (def, newParts = []) => {\r\n\t\tnewParts = [].concat(newParts)\r\n\t\tif (newParts.length > 0) {\r\n\t\t\tdef = newParts\r\n\t\t\t\t.reduce((def, ext) => def.concat(ext), [].concat(def)) // clone to lose ref\r\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\r\n\t\t}\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tcheckDefinition = (obj, def, path, errors, stack, shouldCast) => {\r\n\t\tlet indexFound = stack.indexOf(def)\r\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\r\n\t\t\treturn obj //if found twice in call stack, cycle detected, skip validation\r\n\r\n\t\tif (is(Model, def)) {\r\n\t\t\tif (shouldCast) obj = cast(obj, def)\r\n\t\t\tdef[_validate](obj, path, errors, stack.concat(def))\r\n\t\t}\r\n\t\telse if (isPlainObject(def)) {\r\n\t\t\tObject.keys(def).map(key => {\r\n\t\t\t\tlet val = obj ? obj[key] : undefined;\r\n\t\t\t\tcheckDefinition(val, def[key], formatPath(path, key), errors, stack, shouldCast)\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet pdef = parseDefinition(def)\r\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack))) {\r\n\t\t\t\tif (shouldCast) obj = cast(obj, def)\r\n\t\t\t\treturn obj\r\n\t\t\t}\r\n\r\n\t\t\tstackError(errors, def, obj, path)\r\n\t\t}\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\tcheckDefinitionPart = (obj, def, path, stack, shouldCast) => {\r\n\t\tif (obj == null) return obj === def\r\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\r\n\t\t\tlet errors = []\r\n\t\t\tcheckDefinition(obj, def, path, errors, stack, shouldCast)\r\n\t\t\treturn !errors.length\r\n\t\t}\r\n\t\tif (is(RegExp, def)) return def.test(obj)\r\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\t\treturn obj === def\r\n\t\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t\t|| obj.constructor === def\r\n\t},\r\n\r\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\r\n\t\tfor (let assertion of model.assertions) {\r\n\t\t\tlet result\r\n\t\t\ttry {\r\n\t\t\t\tresult = assertion.call(model, obj)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tresult = err\r\n\t\t\t}\r\n\t\t\tif (result !== true) {\r\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\r\n\t\t\t\t\t+ `for ${path ? path + \" =\" : \"value\"} ${format(value)}`\r\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tformat = (obj, stack = []) => {\r\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\r\n\t\tif (obj === null || obj === undefined) return String(obj)\r\n\t\tif (typeof obj === \"string\") return `\"${obj}\"`\r\n\t\tif (is(Model, obj)) return obj.toString(stack)\r\n\r\n\t\tstack.unshift(obj)\r\n\r\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\r\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\r\n\t\tif (Array.isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\r\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\r\n\t\tif (obj && isObject(obj)) {\r\n\t\t\tlet props = Object.keys(obj),\r\n\t\t\t\tindent = '\\t'.repeat(stack.length)\r\n\t\t\treturn `{${props.map(\r\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], [...stack])}`\r\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\r\n\t\t}\r\n\r\n\t\treturn String(obj)\r\n\t},\r\n\r\n\tformatPath = (path, key) => path ? path + '.' + key : key,\r\n\r\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\r\n\t\tlet newPath = formatPath(path, key),\r\n\t\t\tisPrivate = model.conventionForPrivate(key),\r\n\t\t\tisConstant = model.conventionForConstant(key),\r\n\t\t\tisOwnProperty = has(o, key),\r\n\t\t\tinitialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\r\n\r\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\r\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\r\n\r\n\t\tlet isInDefinition = has(def, key);\r\n\t\tif (isInDefinition || !model.sealed) {\r\n\t\t\tapplyMutation(newPath)\r\n\t\t\tif (isInDefinition) checkDefinition(o[key], def[key], newPath, model.errors, [])\r\n\t\t\tcheckAssertions(o, model, newPath)\r\n\t\t}\r\n\t\telse rejectUndeclaredProp(newPath, o[key], model.errors)\r\n\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors) {\r\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\r\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\r\n\r\n\t\t\tunstackErrors(model)\r\n\t\t}\r\n\r\n\t\treturn !nbErrors\r\n\t},\r\n\r\n\tcannot = (msg, model) => {\r\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\r\n\t},\r\n\r\n\trejectUndeclaredProp = (path, received, errors) => {\r\n\t\terrors.push({\r\n\t\t\tpath,\r\n\t\t\treceived,\r\n\t\t\tmessage: `property ${path} is not declared in the sealed model definition`\r\n\t\t})\r\n\t},\r\n\r\n\tcast = (obj, defNode = []) => {\r\n\t\tif (!obj || isPlainObject(defNode) || is(BasicModel, defNode) || isModelInstance(obj))\r\n\t\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\t\tlet def = parseDefinition(defNode),\r\n\t\t\tsuitableModels = []\r\n\r\n\t\tfor (let part of def) {\r\n\t\t\tif (is(Model, part) && !is(BasicModel, part) && part.test(obj))\r\n\t\t\t\tsuitableModels.push(part)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length === 1) {\r\n\t\t\t// automatically cast to suitable model when explicit (duck typing)\r\n\t\t\treturn new suitableModels[0](obj, MODE_CAST)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length > 1)\r\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\tcheckUndeclaredProps = (obj, def, errors, path) => {\r\n\t\tObject.keys(obj).map(key => {\r\n\t\t\tlet val = obj[key],\r\n\t\t\t\tsubpath = formatPath(path, key)\r\n\t\t\tif (!has(def, key)) rejectUndeclaredProp(subpath, val, errors)\r\n\t\t\telse if (isPlainObject(val)) checkUndeclaredProps(val, def[key], errors, subpath)\r\n\t\t})\r\n\t},\r\n\r\n\tgetProxy = (model, obj, def, path, privateAccess) => {\r\n\t\tif (!isPlainObject(def)) return cast(obj, def)\r\n\r\n\t\tconst grantPrivateAccess = f => proxifyFn(f, (fn, ctx, args) => {\r\n\t\t\tprivateAccess = true;\r\n\t\t\tlet result = Reflect.apply(fn, ctx, args);\r\n\t\t\tprivateAccess = false;\r\n\t\t\treturn result\r\n\t\t})\r\n\r\n\t\treturn new Proxy(obj, {\r\n\r\n\t\t\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\r\n\r\n\t\t\tget(o, key) {\r\n\t\t\t\tif (key === _original) return o\r\n\r\n\t\t\t\tif (typeof key !== \"string\") return Reflect.get(o, key)\r\n\r\n\t\t\t\tlet newPath = formatPath(path, key),\r\n\t\t\t\t\tdefPart = def[key];\r\n\r\n\t\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\r\n\t\t\t\t\tcannot(`access to private property ${newPath}`, model)\r\n\t\t\t\t\tunstackErrors(model)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\r\n\t\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isFunction(o[key]) && key !== \"constructor\") {\r\n\t\t\t\t\treturn grantPrivateAccess(o[key])\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isPlainObject(defPart) && !o[key]) {\r\n\t\t\t\t\to[key] = {} // null-safe traversal\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn getProxy(model, o[key], defPart, newPath, privateAccess)\r\n\t\t\t},\r\n\r\n\t\t\tset(o, key, val) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\r\n\t\t\t\t\tnewPath => Reflect.set(o, key, getProxy(model, val, def[key], newPath))\r\n\t\t\t\t)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(o, key) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\r\n\t\t\t},\r\n\r\n\t\t\tdefineProperty(o, key, args) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\r\n\t\t\t},\r\n\r\n\t\t\thas(o, key) {\r\n\t\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t\t\t},\r\n\r\n\t\t\townKeys(o) {\r\n\t\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\r\n\t\t\t},\r\n\r\n\t\t\tgetOwnPropertyDescriptor(o, key) {\r\n\t\t\t\tlet descriptor;\r\n\t\t\t\tif (!model.conventionForPrivate(key)) {\r\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn descriptor\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\nexport function Model(def, params) {\r\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\r\n}\r\n\r\nObject.assign(Model.prototype, {\r\n\tname: \"Model\",\r\n\tassertions: [],\r\n\r\n\tconventionForConstant: key => key.toUpperCase() === key,\r\n\tconventionForPrivate: key => key[0] === \"_\",\r\n\r\n\ttoString(stack) {\r\n\t\treturn formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\tas(name) {\r\n\t\tdefine(this, \"name\", name);\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val) {\r\n\t\tthis.default = val\r\n\t\treturn this\r\n\t},\r\n\r\n\t[_validate](obj, path, errors, stack) {\r\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t},\r\n\r\n\tvalidate(obj, errorCollector, shouldCast) {\r\n\t\tthis[_validate](obj, null, this.errors, [], shouldCast)\r\n\t\treturn !unstackErrors(this, errorCollector)\r\n\t},\r\n\r\n\ttest(obj) {\r\n\t\tlet model = this;\r\n\t\twhile (!has(model, \"errorCollector\")) {\r\n\t\t\tmodel = getProto(model)\r\n\t\t}\r\n\r\n\t\tlet initialErrorCollector = model.errorCollector,\r\n\t\t\tfailed;\r\n\r\n\t\tmodel.errorCollector = () => {\r\n\t\t\tfailed = true\r\n\t\t}\r\n\r\n\t\tnew this(obj) // may trigger this.errorCollector\r\n\r\n\t\tmodel.errorCollector = initialErrorCollector\r\n\t\treturn !failed\r\n\t},\r\n\r\n\terrorCollector(errors) {\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\tassert(assertion, description = format(assertion)) {\r\n\t\tdefine(assertion, \"description\", description)\r\n\t\tthis.assertions = this.assertions.concat(assertion)\r\n\t\treturn this\r\n\t}\r\n})\r\n\r\n\r\nexport function BasicModel(def) {\r\n\tlet model = function (val = model.default) {\r\n\t\treturn model.validate(val) ? val : undefined\r\n\t}\r\n\r\n\tsetConstructor(model, BasicModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(BasicModel, Model, {\r\n\textend(...newParts) {\r\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\r\n\t\t}\r\n\r\n\t\treturn child\r\n\t}\r\n})\r\n\r\n\r\nexport function ObjectModel(def, params) {\r\n\tlet model = function (obj = model.default, mode) {\r\n\t\tif (!is(model, this)) return new model(obj)\r\n\t\tif (is(model, obj)) return obj\r\n\r\n\t\tif (!is(Object, obj) && obj !== undefined) {\r\n\t\t\tstackError(model.errors, Object, obj);\r\n\t\t}\r\n\r\n\t\tif (model.parentClass) merge(obj, new model.parentClass(obj))\r\n\t\tmerge(this, obj)\r\n\r\n\t\tif (mode === MODE_CAST || model.validate(this, undefined, true)) {\r\n\t\t\treturn getProxy(model, this, model.definition)\r\n\t\t}\r\n\t}\r\n\r\n\tObject.assign(model, params)\r\n\textend(model, Object)\r\n\tsetConstructor(model, ObjectModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(ObjectModel, Model, {\r\n\tsealed: false,\r\n\r\n\tdefaults(p) {\r\n\t\tObject.assign(this.prototype, p)\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack) {\r\n\t\treturn format(this.definition, stack)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\tlet definition = Object.assign({}, this.definition),\r\n\t\t\tproto = Object.assign({}, this.prototype),\r\n\t\t\tnewAssertions = []\r\n\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(Model, part)) {\r\n\t\t\t\tmerge(definition, part.definition)\r\n\t\t\t\tnewAssertions.push(...part.assertions)\r\n\t\t\t}\r\n\t\t\tif (isFunction(part)) merge(proto, part.prototype)\r\n\t\t\tif (isObject(part)) merge(definition, part)\r\n\t\t}\r\n\r\n\t\tlet submodel = extendModel(new ObjectModel(definition), this, proto)\r\n\t\tsubmodel.assertions = [...this.assertions, ...newAssertions]\r\n\r\n\t\tif (getProto(this) !== ObjectModel.prototype) { // extended class\r\n\t\t\tsubmodel.parentClass = this;\r\n\t\t}\r\n\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t[_validate](obj, path, errors, stack, shouldCast) {\r\n\t\tif (isObject(obj)) {\r\n\t\t\tlet def = this.definition\r\n\t\t\tcheckDefinition(obj[_original] || obj, def, path, errors, stack, shouldCast)\r\n\t\t\tif (this.sealed) checkUndeclaredProps(obj, def, errors)\r\n\t\t}\r\n\t\telse stackError(errors, this, obj, path)\r\n\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t}\r\n})","import { _original, MODE_CAST, initModel } from \"./object-model.js\"\r\nimport { extend, has, isFunction, proxifyFn, proxifyModel, setConstructor } from \"./helpers.js\"\r\n\r\nexport const initListModel = (base, constructor, def, init, clone, mutators, otherTraps = {}) => {\r\n\r\n\tlet model = function (list = model.default, mode) {\r\n\t\tlist = init(list)\r\n\r\n\t\tif (mode === MODE_CAST || model.validate(list)) {\r\n\t\t\treturn proxifyModel(list, model, Object.assign({\r\n\t\t\t\tget(l, key) {\r\n\t\t\t\t\tif (key === _original) return l\r\n\r\n\t\t\t\t\tlet val = l[key];\r\n\t\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\r\n\t\t\t\t\t\tif (has(mutators, key)) {\r\n\t\t\t\t\t\t\tif (mutators[key]) args = mutators[key](args) // autocast method args\r\n\r\n\t\t\t\t\t\t\tlet testingClone = clone(l)\r\n\t\t\t\t\t\t\tfn.apply(testingClone, args)\r\n\t\t\t\t\t\t\tmodel.validate(testingClone)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn fn.apply(l, args)\r\n\t\t\t\t\t}) : val\r\n\t\t\t\t}\r\n\t\t\t}, otherTraps))\r\n\t\t}\r\n\t}\r\n\r\n\textend(model, base)\r\n\tsetConstructor(model, constructor)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}","import {\r\n\t_validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel,\r\n\tformatDefinition, Model, stackError, unstackErrors\r\n} from \"./object-model.js\"\r\nimport { extend } from \"./helpers.js\"\r\nimport { initListModel } from \"./list-model.js\";\r\n\r\nexport default function ArrayModel(initialDefinition) {\r\n\tlet castAll = args => args.map(arg => cast(arg, model.definition))\r\n\r\n\tlet model = initListModel(\r\n\t\tArray,\r\n\t\tArrayModel,\r\n\t\tinitialDefinition,\r\n\t\ta => Array.isArray(a) ? castAll(a) : a,\r\n\t\ta => [...a],\r\n\t\t{\r\n\t\t\t\"copyWithin\": 0,\r\n\t\t\t\"fill\": ([val, ...rest]) => [cast(val, model.definition), ...rest],\r\n\t\t\t\"pop\": 0,\r\n\t\t\t\"push\": castAll,\r\n\t\t\t\"reverse\": 0,\r\n\t\t\t\"shift\": 0,\r\n\t\t\t\"sort\": 0,\r\n\t\t\t\"splice\": ([start, end, ...vals]) => [start, end, ...castAll(vals)],\r\n\t\t\t\"unshift\": castAll,\r\n\t\t},\r\n\t\t{\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\treturn setArrayKey(arr, key, val, model)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(arr, key) {\r\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\r\n\treturn model\r\n}\r\n\r\nextend(ArrayModel, Model, {\r\n\ttoString(stack) {\r\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_validate](arr, path, errors, stack) {\r\n\t\tif (Array.isArray(arr))\r\n\t\t\tarr.forEach((a, i) => checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack))\r\n\t\telse stackError(errors, this, arr, path)\r\n\r\n\t\tcheckAssertions(arr, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})\r\n\r\nlet setArrayKey = (array, key, value, model) => {\r\n\tlet path = `Array[${key}]`;\r\n\tif (parseInt(key) >= 0)\r\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [], true)\r\n\r\n\tlet testArray = [...array]\r\n\ttestArray[key] = value\r\n\tcheckAssertions(testArray, model, path)\r\n\tlet isSuccess = !unstackErrors(model)\r\n\tif (isSuccess) array[key] = value\r\n\treturn isSuccess\r\n}","import {\r\n\t_original, _validate, checkAssertions, checkDefinition, extendDefinition, extendModel,\r\n\tformat, formatDefinition, initModel, Model, stackError, unstackErrors\r\n} from \"./object-model.js\"\r\nimport { extend, isFunction, proxifyModel, setConstructor } from \"./helpers.js\"\r\n\r\n\r\nexport default function FunctionModel(...argsDef) {\r\n\r\n\tlet model = function (fn = model.default) {\r\n\t\tif (!model.validate(fn)) return\r\n\t\treturn proxifyModel(fn, model, {\r\n\t\t\tget(fn, key) {\r\n\t\t\t\treturn key === _original ? fn : fn[key]\r\n\t\t\t},\r\n\r\n\t\t\tapply(fn, ctx, args) {\r\n\t\t\t\tlet def = model.definition\r\n\r\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\r\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\r\n\t\t\t\t})\r\n\r\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\r\n\r\n\t\t\t\tlet result\r\n\t\t\t\tif (!model.errors.length) {\r\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\r\n\t\t\t\t\tif (\"return\" in def)\r\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\r\n\t\t\t\t}\r\n\t\t\t\tunstackErrors(model)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\textend(model, Function)\r\n\tsetConstructor(model, FunctionModel)\r\n\tinitModel(model, { arguments: argsDef })\r\n\r\n\treturn model\r\n}\r\n\r\nextend(FunctionModel, Model, {\r\n\ttoString(stack = []) {\r\n\t\tlet out = `Function(${this.definition.arguments.map(\r\n\t\t\targDef => formatDefinition(argDef, [...stack])\r\n\t\t).join(\", \")})`\r\n\r\n\t\tif (\"return\" in this.definition) {\r\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\r\n\t\t}\r\n\t\treturn out\r\n\t},\r\n\r\n\treturn(def) {\r\n\t\tthis.definition.return = def\r\n\t\treturn this\r\n\t},\r\n\r\n\textend(newArgs, newReturns) {\r\n\t\tlet args = this.definition.arguments,\r\n\t\t\tmixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\r\n\t\t\tmixedReturns = extendDefinition(this.definition.return, newReturns)\r\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\r\n\t},\r\n\r\n\t[_validate](f, path, errors) {\r\n\t\tif (!isFunction(f)) stackError(errors, \"Function\", f, path)\r\n\t}\r\n})\r\n\r\nFunctionModel.prototype.assert(function numberOfArgs(args) {\r\n\treturn (args.length > this.definition.arguments.length) ? args : true\r\n}, function (args) {\r\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\r\n})","import {\r\n\t_validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel,\r\n\tformat, formatDefinition, Model, stackError\r\n} from \"./object-model.js\";\r\nimport { initListModel } from \"./list-model.js\"\r\nimport { extend, is, isIterable } from \"./helpers.js\"\r\n\r\nexport default function MapModel(initialKeyDefinition, initialValueDefinition) {\r\n\tlet castKeyValue = ([k, v]) => [cast(k, model.definition.key), cast(v, model.definition.value)]\r\n\tlet model = initListModel(\r\n\t\tMap,\r\n\t\tMapModel,\r\n\t\t{ key: initialKeyDefinition, value: initialValueDefinition },\r\n\t\tit => isIterable(it) ? new Map([...it].map(castKeyValue)) : it,\r\n\t\tmap => new Map(map),\r\n\t\t{\r\n\t\t\t\"set\": castKeyValue,\r\n\t\t\t\"delete\": 0,\r\n\t\t\t\"clear\": 0\r\n\t\t}\r\n\t)\r\n\r\n\treturn model\r\n}\r\n\r\nextend(MapModel, Model, {\r\n\ttoString(stack) {\r\n\t\tlet { key, value } = this.definition\r\n\t\treturn `Map of ${formatDefinition(key, stack)} : ${formatDefinition(value, stack)}`\r\n\t},\r\n\r\n\t[_validate](map, path, errors, stack) {\r\n\t\tif (is(Map, map)) {\r\n\t\t\tpath = path || 'Map'\r\n\t\t\tfor (let [key, value] of map) {\r\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\r\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, map, path)\r\n\r\n\t\tcheckAssertions(map, this, path, errors)\r\n\t},\r\n\r\n\textend(keyParts, valueParts) {\r\n\t\tlet { key, value } = this.definition\r\n\t\treturn extendModel(new MapModel(\r\n\t\t\textendDefinition(key, keyParts),\r\n\t\t\textendDefinition(value, valueParts)\r\n\t\t), this)\r\n\t}\r\n})","import { _validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, formatDefinition, Model, stackError } from \"./object-model.js\"\r\nimport { initListModel } from \"./list-model.js\"\r\nimport { extend, is, isIterable } from \"./helpers.js\"\r\n\r\nexport default function SetModel(initialDefinition) {\r\n\tlet model = initListModel(\r\n\t\tSet,\r\n\t\tSetModel,\r\n\t\tinitialDefinition,\r\n\t\tit => isIterable(it) ? new Set([...it].map(val => cast(val, model.definition))) : it,\r\n\t\tset => new Set(set),\r\n\t\t{\r\n\t\t\t\"add\": ([val]) => [cast(val, model.definition)],\r\n\t\t\t\"delete\": 0,\r\n\t\t\t\"clear\": 0\r\n\t\t}\r\n\t)\r\n\r\n\treturn model\r\n}\r\n\r\nextend(SetModel, Model, {\r\n\ttoString(stack) {\r\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_validate](set, path, errors, stack) {\r\n\t\tif (is(Set, set)) {\r\n\t\t\tfor (let item of set.values()) {\r\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, set, path)\r\n\t\tcheckAssertions(set, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})"],"names":["getProto","Object","getPrototypeOf","setProto","setPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isFunction","f","isObject","isPlainObject","prototype","isIterable","x","Symbol","iterator","proxifyFn","fn","apply","Proxy","proxifyModel","val","model","traps","assign","merge","target","src","key","define","value","enumerable","defineProperty","writable","configurable","setConstructor","constructor","extend","child","parent","props","create","_validate","_original","MODE_CAST","initModel","def","definition","assertions","name","extendModel","newProps","push","stackError","errors","expected","received","path","message","unstackErrors","errorCollector","nbErrors","length","map","err","concat","d","format","join","toString","call","match","bettertypeof","isModelInstance","i","Model","parseDefinition","keys","Array","isArray","undefined","formatDefinition","stack","parts","extendDefinition","newParts","reduce","ext","filter","index","self","indexOf","checkDefinition","shouldCast","indexFound","cast","formatPath","some","part","checkDefinitionPart","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","slice","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","isInDefinition","sealed","rejectUndeclaredProp","msg","defNode","BasicModel","suitableModels","console","warn","checkUndeclaredProps","subpath","getProxy","[object Object]","Reflect","get","defPart","ctx","args","grantPrivateAccess","set","deleteProperty","ownKeys","descriptor","params","ObjectModel","default","validate","mode","this","parentClass","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","p","proto","newAssertions","submodel","initListModel","base","init","clone","mutators","otherTraps","list","l","testingClone","ArrayModel","initialDefinition","castAll","arg","a","copyWithin","fill","rest","pop","reverse","shift","sort","splice","start","end","vals","arr","setArrayKey","forEach","array","parseInt","testArray","isSuccess","FunctionModel","argsDef","arguments","argDef","return","Function","MapModel","initialKeyDefinition","initialValueDefinition","castKeyValue","k","v","it","delete","clear","SetModel","add","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","keyParts","valueParts","values"],"mappings":"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"}