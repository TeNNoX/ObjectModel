{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\r\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\r\n\tgetProto     = x => Object.getPrototypeOf(x),\r\n\tsetProto     = (x,p) => Object.setPrototypeOf(x,p),\r\n\r\n\thas           = (o, prop) => o.hasOwnProperty(prop),\r\n\tis            = (Constructor, obj) => obj instanceof Constructor,\r\n\tisFunction    = f => typeof f === \"function\",\r\n\tisObject      = o => typeof o === \"object\",\r\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\r\n\r\n\tproxifyFn    = (fn, apply) => new Proxy(fn, {apply}),\r\n\tproxifyModel = (val, model, traps) => new Proxy(val, Object.assign({getPrototypeOf: () => model.prototype}, traps)),\r\n\r\n\tmerge = (target, src = {}, deep) => {\r\n\t\tfor (let key in src) {\r\n\t\t\tif (deep && isPlainObject(src[key])) {\r\n\t\t\t\tlet o = {}\r\n\t\t\t\tmerge(o, target[key], deep)\r\n\t\t\t\tmerge(o, src[key], deep)\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tdefine = (obj, key, value, enumerable = false) => {\r\n\t\tObject.defineProperty(obj, key, {value, enumerable, writable: true, configurable: true})\r\n\t},\r\n\r\n\tsetConstructor = (model, constructor) => {\r\n\t\tsetProto(model, constructor.prototype)\r\n\t\tdefine(model, \"constructor\", constructor)\r\n\t},\r\n\r\n\textend = (child, parent, props) => {\r\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\r\n\t\t\tconstructor: {\r\n\t\t\t\tvalue: child,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t}\r\n\t\t}), props)\r\n\t\tsetProto(child, parent)\r\n\t}","import {\r\n\tbettertypeof, define, extend, getProto, has, is, isFunction, isObject, isPlainObject,\r\n\tmerge, proxifyFn, setConstructor\r\n} from \"./helpers.js\"\r\n\r\nexport const\r\n\t_constructor = Symbol(),\r\n\t_validate = Symbol(),\r\n\t_original = Symbol(),\r\n\t_get = Symbol(), // used to bypass private access\r\n\r\n\tinitModel = (model, def) => {\r\n\t\tmodel.definition = def\r\n\t\tmodel.assertions = [...model.assertions]\r\n\t\tdefine(model, \"errors\", [])\r\n\t\tdelete model.name;\r\n\t},\r\n\r\n\textendModel = (child, parent, newProps) => {\r\n\t\textend(child, parent, newProps)\r\n\t\tchild.assertions.push(...parent.assertions)\r\n\t\treturn child\r\n\t},\r\n\r\n\tstackError = (errors, expected, received, path, message) => {\r\n\t\terrors.push({expected, received, path, message})\r\n\t},\r\n\r\n\tunstackErrors = (model, errorCollector = model.errorCollector) => {\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors > 0) {\r\n\t\t\tlet errors = model.errors.map(err => {\r\n\t\t\t\tif (!err.message) {\r\n\t\t\t\t\tlet def = Array.isArray(err.expected) ? err.expected : [err.expected]\r\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\r\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\r\n\t\t\t\t}\r\n\t\t\t\treturn err\r\n\t\t\t})\r\n\t\t\tmodel.errors = []\r\n\t\t\terrorCollector.call(model, errors) // throw all errors collected\r\n\t\t}\r\n\t\treturn nbErrors\r\n\t},\r\n\r\n\tisModelInstance = i => i && is(Model, getProto(i).constructor),\r\n\r\n\tparseDefinition = (def) => {\r\n\t\tif (isPlainObject(def)) {\r\n\t\t\tObject.keys(def).map(key => { def[key] = parseDefinition(def[key]) })\r\n\t\t}\r\n\t\telse if (!Array.isArray(def)) return [def]\r\n\t\telse if (def.length === 1) return [...def, undefined, null]\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tformatDefinition = (def, stack) => {\r\n\t\tlet parts = parseDefinition(def).map(d => format(d, stack));\r\n\t\treturn parts.length > 1 ? `(${parts.join(\" or \")})` : parts[0]\r\n\t},\r\n\r\n\textendDefinition = (def, newParts = []) => {\r\n\t\tif (!Array.isArray(newParts)) newParts = [newParts]\r\n\t\tif (newParts.length > 0) {\r\n\t\t\tdef = newParts\r\n\t\t\t\t.reduce((def, ext) => def.concat(ext), Array.isArray(def) ? def.slice() : [def]) // clone to lose ref\r\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\r\n\t\t}\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tcheckDefinition = (obj, def, path, errors, stack) => {\r\n\t\tlet indexFound = stack.indexOf(def)\r\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\r\n\t\t\treturn obj //if found twice in call stack, cycle detected, skip validation\r\n\r\n\t\tobj = cast(obj, def)\r\n\r\n\t\tif (is(Model, def)) {\r\n\t\t\tdef[_validate](obj, path, errors, stack.concat(def))\r\n\t\t}\r\n\t\telse if (isPlainObject(def)) {\r\n\t\t\tObject.keys(def).map(key => {\r\n\t\t\t\tlet val = obj ? obj[_get] ? obj[_get](key) : obj[key] : undefined;\r\n\t\t\t\tcheckDefinition(val, def[key], formatPath(path, key), errors, stack)\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet pdef = parseDefinition(def)\r\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack)))\r\n\t\t\t\treturn obj\r\n\r\n\t\t\tstackError(errors, def, obj, path)\r\n\t\t}\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\tcheckDefinitionPart = (obj, def, path, stack) => {\r\n\t\tif (obj == null) return obj === def\r\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\r\n\t\t\tlet errors = []\r\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\r\n\t\t\treturn !errors.length\r\n\t\t}\r\n\t\tif (is(RegExp, def)) return def.test(obj)\r\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\t\treturn obj === def\r\n\t\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t\t|| obj.constructor === def\r\n\t},\r\n\r\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\r\n\t\tfor (let assertion of model.assertions) {\r\n\t\t\tlet result\r\n\t\t\ttry {\r\n\t\t\t\tresult = assertion.call(model, obj)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tresult = err\r\n\t\t\t}\r\n\t\t\tif (result !== true) {\r\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\r\n\t\t\t\t\t+`for ${path ? path+\" =\" : \"value\"} ${format(value)}`\r\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tformat = (obj, stack = []) => {\r\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\r\n\t\tif (obj === null || obj === undefined) return String(obj)\r\n\t\tif (typeof obj === 'string') return `\"${obj}\"`\r\n\t\tif (is(Model, obj)) return obj.toString(stack)\r\n\r\n\t\tstack.unshift(obj)\r\n\r\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\r\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\r\n\t\tif (Array.isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\r\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\r\n\t\tif (obj && isObject(obj)) {\r\n\t\t\tlet props  = Object.keys(obj),\r\n\t\t\t    indent = '\\t'.repeat(stack.length)\r\n\t\t\treturn `{${props.map(\r\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], stack.slice())}`\r\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\r\n\t\t}\r\n\r\n\t\treturn String(obj)\r\n\t},\r\n\r\n\tformatPath = (path, key) => path ? path + '.' + key : key,\r\n\r\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\r\n\t\tlet newPath = formatPath(path, key),\r\n\t\t    isPrivate  = model.conventionForPrivate(key),\r\n\t\t    isConstant = model.conventionForConstant(key),\r\n\t\t    isOwnProperty = has(o, key),\r\n\t\t    initialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\r\n\r\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\r\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\r\n\r\n\t\tlet isInDefinition = has(def, key);\r\n\t\tif (isInDefinition || !model.sealed) {\r\n\t\t\tapplyMutation(newPath)\r\n\t\t\tif (isInDefinition) checkDefinition(o[key], def[key], newPath, model.errors, [])\r\n\t\t\tcheckAssertions(o, model, newPath)\r\n\t\t}\r\n\t\telse rejectUndeclaredProp(newPath, o[key], model.errors)\r\n\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors) {\r\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\r\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\r\n\r\n\t\t\tunstackErrors(model)\r\n\t\t}\r\n\r\n\t\treturn !nbErrors\r\n\t},\r\n\r\n\tcannot = (msg, model) => {\r\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\r\n\t},\r\n\r\n\trejectUndeclaredProp = (path, received, errors) => {\r\n\t\terrors.push({\r\n\t\t\tpath,\r\n\t\t\treceived,\r\n\t\t\tmessage: `property ${path} is not declared in the sealed model definition`\r\n\t\t})\r\n\t},\r\n\r\n\tcast = (obj, defNode = []) => {\r\n\t\tif (!obj || isPlainObject(defNode) || isModelInstance(obj))\r\n\t\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\t\tlet def = parseDefinition(defNode),\r\n\t\t    suitableModels = []\r\n\r\n\t\tfor (let part of def) {\r\n\t\t\tif (is(Model, part) && part.test(obj))\r\n\t\t\t\tsuitableModels.push(part)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length === 1) {\r\n\t\t\t// automatically cast to suitable model when explicit (duck typing)\r\n\t\t\tlet duck = suitableModels[0];\r\n\t\t\treturn is(ObjectModel, duck) ? new duck(obj) : duck(obj)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length > 1)\r\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\tcheckUndeclaredProps = (obj, def, errors, path) => {\r\n\t\tObject.keys(obj).map(key => {\r\n\t\t\tlet val = obj[key],\r\n\t\t\t    subpath = formatPath(path, key)\r\n\t\t\tif (!has(def, key)) rejectUndeclaredProp(subpath, val, errors)\r\n\t\t\telse if (isPlainObject(val))\tcheckUndeclaredProps(val, def[key], errors, subpath)\r\n\t\t})\r\n\t},\r\n\r\n\tgetProxy = (model, obj, def, path, privateAccess) => {\r\n\t\tif (!isPlainObject(def)) return cast(obj, def)\r\n\r\n\t\tconst grantTemporaryPrivateAccess = f => proxifyFn(f, (fn, ctx, args) => {\r\n\t\t\tprivateAccess = true;\r\n\t\t\tlet result = Reflect.apply(fn, ctx, args);\r\n\t\t\tprivateAccess = false;\r\n\t\t\treturn result\r\n\t\t})\r\n\r\n\t\treturn new Proxy(obj, {\r\n\r\n\t\t\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\r\n\r\n\t\t\tget(o, key) {\r\n\t\t\t\tif (key === _original) return o\r\n\t\t\t\tif (key === _get) return grantTemporaryPrivateAccess(prop => o[prop])\r\n\r\n\t\t\t\tif (typeof key !== \"string\") return Reflect.get(o, key)\r\n\r\n\t\t\t\tlet newPath = formatPath(path, key),\r\n\t\t\t\t\tdefPart = def[key];\r\n\r\n\t\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\r\n\t\t\t\t\tcannot(`access to private property ${newPath}`, model)\r\n\t\t\t\t\tunstackErrors(model)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\r\n\t\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isFunction(o[key]) && key !== \"constructor\") {\r\n\t\t\t\t\treturn grantTemporaryPrivateAccess(o[key])\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isPlainObject(defPart) && !o[key]) {\r\n\t\t\t\t\to[key] = {} // null-safe traversal\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn getProxy(model, o[key], defPart, newPath, privateAccess)\r\n\t\t\t},\r\n\r\n\t\t\tset(o, key, val) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\r\n\t\t\t\t\tnewPath => Reflect.set(o, key, getProxy(model, val, def[key], newPath))\r\n\t\t\t\t)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(o, key) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\r\n\t\t\t},\r\n\r\n\t\t\tdefineProperty(o, key, args) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\r\n\t\t\t},\r\n\r\n\t\t\thas(o, key) {\r\n\t\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t\t\t},\r\n\r\n\t\t\townKeys(o) {\r\n\t\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\r\n\t\t\t},\r\n\r\n\t\t\tgetOwnPropertyDescriptor(o, key) {\r\n\t\t\t\tlet descriptor;\r\n\t\t\t\tif (!model.conventionForPrivate(key)) {\r\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn descriptor\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\nexport function Model(def, params) {\r\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\r\n}\r\n\r\nObject.assign(Model.prototype, {\r\n\tname: \"Model\",\r\n\tassertions: [],\r\n\r\n\tconventionForConstant: key => key.toUpperCase() === key,\r\n\tconventionForPrivate: key => key[0] === \"_\",\r\n\r\n\ttoString(stack) {\r\n\t\treturn formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\tas(name) {\r\n\t\tdefine(this, \"name\", name);\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val) {\r\n\t\tthis.default = val\r\n\t\treturn this\r\n\t},\r\n\r\n\t[_validate](obj, path, errors, stack) {\r\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t},\r\n\r\n\tvalidate(obj, errorCollector) {\r\n\t\tthis[_validate](obj, null, this.errors, [])\r\n\t\treturn !unstackErrors(this, errorCollector)\r\n\t},\r\n\r\n\ttest(obj) {\r\n\t\tlet model = this;\r\n\t\twhile(!has(model, \"errorCollector\")) {\r\n\t\t\tmodel = getProto(model)\r\n\t\t}\r\n\r\n\t\tlet initialErrorCollector = model.errorCollector,\r\n\t\t    failed;\r\n\r\n\t\tmodel.errorCollector = () => {\r\n\t\t\tfailed = true\r\n\t\t}\r\n\r\n\t\tnew this(obj) // may trigger this.errorCollector\r\n\r\n\t\tmodel.errorCollector = initialErrorCollector\r\n\t\treturn !failed\r\n\t},\r\n\r\n\terrorCollector(errors) {\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\tassert(assertion, description = format(assertion)) {\r\n\t\tdefine(assertion, \"description\", description)\r\n\t\tthis.assertions = this.assertions.concat(assertion)\r\n\t\treturn this\r\n\t}\r\n})\r\n\r\n\r\nexport function BasicModel(def) {\r\n\tlet model = function (val = model.default) {\r\n\t\treturn model.validate(val) ? val : undefined\r\n\t}\r\n\r\n\tsetConstructor(model, BasicModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(BasicModel, Model, {\r\n\textend(...newParts) {\r\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\r\n\t\t}\r\n\r\n\t\treturn child\r\n\t}\r\n})\r\n\r\n\r\nexport function ObjectModel(def, params) {\r\n\tlet model = function (obj = model.default) {\r\n\t\tif (!is(model, this)) return new model(obj)\r\n\t\tif (is(model, obj)) return obj\r\n\r\n\t\tif (!is(Object, obj) && obj !== undefined) {\r\n\t\t\tstackError(model.errors, Object, obj);\r\n\t\t}\r\n\r\n\t\tmerge(this, model[_constructor](obj), true)\r\n\r\n\t\tif (!model.validate(this)) return\r\n\t\treturn getProxy(model, this, model.definition)\r\n\t}\r\n\r\n\tObject.assign(model, params)\r\n\textend(model, Object)\r\n\tsetConstructor(model, ObjectModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(ObjectModel, Model, {\r\n\tsealed: false,\r\n\r\n\tdefaults(p) {\r\n\t\tObject.assign(this.prototype, p)\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack) {\r\n\t\treturn format(this.definition, stack)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\tlet def = Object.assign({}, this.definition),\r\n\t\t    newAssertions = [],\r\n\t\t    proto = {}\r\n\r\n\t\tmerge(proto, this.prototype, false)\r\n\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(Model, part)) {\r\n\t\t\t\tmerge(def, part.definition, true)\r\n\t\t\t\tnewAssertions.push(...part.assertions)\r\n\t\t\t}\r\n\t\t\tif (isFunction(part)) merge(proto, part.prototype, true)\r\n\t\t\tif (isObject(part)) merge(def, part, true)\r\n\t\t}\r\n\r\n\t\tlet submodel = extendModel(new ObjectModel(def), this, proto)\r\n\t\tsubmodel.assertions = [...this.assertions, ...newAssertions]\r\n\r\n\t\tif (getProto(this) !== ObjectModel.prototype) { // extended class\r\n\t\t\tsubmodel[_constructor] = (obj) => {\r\n\t\t\t\tlet parentInstance = new this(obj)\r\n\t\t\t\tmerge(obj, parentInstance, true) // get modified props from parent class constructor\r\n\t\t\t\treturn obj\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t[_constructor]: o => o,\r\n\r\n\t[_validate](obj, path, errors, stack) {\r\n\t\tif (isObject(obj)) {\r\n\t\t\tlet def = this.definition\r\n\t\t\tcheckDefinition(obj, def, path, errors, stack)\r\n\t\t\tif (this.sealed) checkUndeclaredProps(obj, def, errors)\r\n\t\t}\r\n\t\telse stackError(errors, this, obj, path)\r\n\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t}\r\n})","import {_original, _validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, formatDefinition, initModel, Model, stackError, unstackErrors} from \"./object-model.js\"\r\nimport {extend, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\nlet ARRAY_MUTATORS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"]\r\n\r\nexport default function ArrayModel(def) {\r\n\r\n\tlet model = function (array = model.default) {\r\n\t\tif (model.validate(array)) return proxifyModel(array, model, {\r\n\t\t\tget(arr, key) {\r\n\t\t\t\tif (key === _original) return arr\r\n\r\n\t\t\t\tlet val = arr[key];\r\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\r\n\t\t\t\t\tif (ARRAY_MUTATORS.includes(key)) {\r\n\t\t\t\t\t\tlet testArray = arr.slice()\r\n\t\t\t\t\t\tfn.apply(testArray, args)\r\n\t\t\t\t\t\tmodel.validate(testArray)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet returnValue = fn.apply(arr, args)\r\n\t\t\t\t\tarray.forEach((a, i) => arr[i] = cast(a, model.definition))\r\n\t\t\t\t\treturn returnValue\r\n\t\t\t\t}) : val\r\n\t\t\t},\r\n\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\treturn setArrayKey(arr, key, val, model)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(arr, key) {\r\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Array)\r\n\tsetConstructor(model, ArrayModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(ArrayModel, Model, {\r\n\ttoString(stack) {\r\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_validate](arr, path, errors, stack) {\r\n\t\tif (Array.isArray(arr))\r\n\t\t\tarr.forEach((a, i) => {\r\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack)\r\n\t\t\t})\r\n\t\telse stackError(errors, this, arr, path)\r\n\r\n\t\tcheckAssertions(arr, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})\r\n\r\nlet setArrayKey = (array, key, value, model) => {\r\n\tlet path = `Array[${key}]`;\r\n\tif (parseInt(key) === +key && key >= 0)\r\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [])\r\n\r\n\tlet testArray = array.slice()\r\n\ttestArray[key] = value\r\n\tcheckAssertions(testArray, model, path)\r\n\tlet isSuccess = !unstackErrors(model)\r\n\tif (isSuccess) array[key] = value\r\n\treturn isSuccess\r\n}","import {_original, _validate, checkAssertions, checkDefinition, extendDefinition, extendModel, format, formatDefinition, initModel, Model, stackError, unstackErrors} from \"./object-model.js\"\r\nimport {extend, isFunction, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\n\r\nexport default function FunctionModel(...argsDef) {\r\n\r\n\tlet model = function (fn = model.default) {\r\n\t\tif (!model.validate(fn)) return\r\n\t\treturn proxifyModel(fn, model, {\r\n\t\t\tget(fn, key) {\r\n\t\t\t\tif (key === _original) return fn\r\n\t\t\t\treturn fn[key]\r\n\t\t\t},\r\n\r\n\t\t\tapply (fn, ctx, args) {\r\n\t\t\t\tlet def = model.definition\r\n\r\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\r\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [])\r\n\t\t\t\t})\r\n\r\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\r\n\r\n\t\t\t\tlet result\r\n\t\t\t\tif (!model.errors.length) {\r\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\r\n\t\t\t\t\tif (\"return\" in def)\r\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [])\r\n\t\t\t\t}\r\n\t\t\t\tunstackErrors(model)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\textend(model, Function)\r\n\tsetConstructor(model, FunctionModel)\r\n\tinitModel(model, {arguments: argsDef})\r\n\r\n\treturn model\r\n}\r\n\r\nextend(FunctionModel, Model, {\r\n\ttoString(stack = []) {\r\n\t\tlet out = `Function(${this.definition.arguments.map(\r\n\t\t\targDef => formatDefinition(argDef, stack.slice())\r\n\t\t).join(\", \")})`\r\n\r\n\t\tif (\"return\" in this.definition) {\r\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\r\n\t\t}\r\n\t\treturn out\r\n\t},\r\n\r\n\treturn(def) {\r\n\t\tthis.definition.return = def\r\n\t\treturn this\r\n\t},\r\n\r\n\textend(newArgs, newReturns) {\r\n\t\tlet args = this.definition.arguments,\r\n\t\t    mixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\r\n\t\t    mixedReturns = extendDefinition(this.definition.return, newReturns)\r\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\r\n\t},\r\n\r\n\t[_validate](f, path, errors) {\r\n\t\tif (!isFunction(f)) stackError(errors, \"Function\", f, path)\r\n\t}\r\n})\r\n\r\nFunctionModel.prototype.assert(function numberOfArgs(args) {\r\n\treturn (args.length > this.definition.arguments.length) ? args : true\r\n}, function (args) {\r\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\r\n})","import {_original, _validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, format, formatDefinition, initModel, Model, stackError} from \"./object-model.js\";\r\nimport {extend, is, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\nlet MAP_MUTATORS = [\"set\", \"delete\", \"clear\"]\r\n\r\nexport default function MapModel(key, value) {\r\n\r\n\tlet model = function (iterable = model.default) {\r\n\t\tlet castKeyValue = pair => [\"key\", \"value\"].map((prop, i) => cast(pair[i], model.definition[prop])),\r\n\t\t    map = new Map([...iterable].map(castKeyValue))\r\n\r\n\t\tif (!model.validate(map)) return\r\n\r\n\t\treturn proxifyModel(map, model, {\r\n\t\t\tget(map, key) {\r\n\t\t\t\tif (key === _original) return map\r\n\r\n\t\t\t\tlet val = map[key];\r\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\r\n\t\t\t\t\tif (key === \"set\") {\r\n\t\t\t\t\t\targs = castKeyValue(args)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (MAP_MUTATORS.includes(key)) {\r\n\t\t\t\t\t\tlet testMap = new Map(map)\r\n\t\t\t\t\t\tfn.apply(testMap, args)\r\n\t\t\t\t\t\tmodel.validate(testMap)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn fn.apply(map, args)\r\n\t\t\t\t}) : val\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Map)\r\n\tsetConstructor(model, MapModel)\r\n\tinitModel(model, {key, value})\r\n\treturn model\r\n}\r\n\r\nextend(MapModel, Model, {\r\n\ttoString(stack) {\r\n\t\tlet {key, value} = this.definition\r\n\t\treturn `Map of ${formatDefinition(key, stack)} : ${formatDefinition(value, stack)}`\r\n\t},\r\n\r\n\t[_validate](map, path, errors, stack) {\r\n\t\tif (is(Map, map)) {\r\n\t\t\tpath = path || 'Map'\r\n\t\t\tfor (let [key, value] of map) {\r\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\r\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, map, path)\r\n\r\n\t\tcheckAssertions(map, this, path, errors)\r\n\t},\r\n\r\n\textend(keyPart, valuePart) {\r\n\t\tlet {key, value} = this.definition\r\n\t\treturn extendModel(new MapModel(extendDefinition(key, keyPart), extendDefinition(value, valuePart)), this)\r\n\t}\r\n})","import {_original, _validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, formatDefinition, initModel, Model, stackError} from \"./object-model.js\"\r\nimport {extend, is, isFunction, proxifyFn, proxifyModel, setConstructor} from \"./helpers.js\"\r\n\r\nlet SET_MUTATORS = [\"add\", \"delete\", \"clear\"]\r\n\r\nexport default function SetModel(def) {\r\n\r\n\tlet model = function (iterable = model.default) {\r\n\t\tlet castValue = val => cast(val, model.definition),\r\n\t\t    set = new Set([...iterable].map(castValue))\r\n\r\n\t\tif (!model.validate(set)) return\r\n\r\n\t\treturn proxifyModel(set, model, {\r\n\t\t\tget(set, key) {\r\n\t\t\t\tif (key === _original) return set\r\n\r\n\t\t\t\tlet val = set[key]\r\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\r\n\t\t\t\t\tif (key === \"add\") {\r\n\t\t\t\t\t\targs[0] = castValue(args[0])\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (SET_MUTATORS.includes(key)) {\r\n\t\t\t\t\t\tlet testSet = new Set(set)\r\n\t\t\t\t\t\tfn.apply(testSet, args)\r\n\t\t\t\t\t\tmodel.validate(testSet)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn fn.apply(set, args)\r\n\t\t\t\t}) : val\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Set)\r\n\tsetConstructor(model, SetModel)\r\n\tinitModel(model, def)\r\n\treturn model\r\n}\r\n\r\nextend(SetModel, Model, {\r\n\ttoString(stack) {\r\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_validate](set, path, errors, stack) {\r\n\t\tif (is(Set, set)) {\r\n\t\t\tfor (let item of set.values()) {\r\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, set, path)\r\n\t\tcheckAssertions(set, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})"],"names":["getProto","x","Object","getPrototypeOf","setProto","p","setPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isFunction","f","isObject","isPlainObject","prototype","proxifyFn","fn","apply","Proxy","proxifyModel","val","model","traps","assign","merge","target","src","deep","key","define","value","enumerable","defineProperty","writable","configurable","setConstructor","constructor","extend","child","parent","props","create","_constructor","Symbol","_validate","_original","_get","initModel","def","definition","assertions","name","extendModel","newProps","push","stackError","errors","expected","received","path","message","unstackErrors","errorCollector","nbErrors","length","map","err","Array","isArray","d","format","join","toString","call","match","bettertypeof","isModelInstance","i","Model","parseDefinition","keys","undefined","formatDefinition","stack","parts","extendDefinition","newParts","reduce","ext","concat","slice","filter","index","self","indexOf","checkDefinition","indexFound","cast","formatPath","some","part","checkDefinitionPart","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","isInDefinition","sealed","rejectUndeclaredProp","msg","defNode","suitableModels","duck","ObjectModel","console","warn","checkUndeclaredProps","subpath","getProxy","grantTemporaryPrivateAccess","ctx","args","Reflect","[object Object]","get","defPart","set","deleteProperty","ownKeys","descriptor","params","BasicModel","default","validate","this","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","newAssertions","proto","submodel","parentInstance","ARRAY_MUTATORS","ArrayModel","array","arr","testArray","returnValue","forEach","a","setArrayKey","parseInt","isSuccess","FunctionModel","argsDef","arguments","argDef","return","Function","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","MAP_MUTATORS","MapModel","iterable","castKeyValue","pair","testMap","keyPart","valuePart","SET_MUTATORS","SetModel","castValue","testSet","values"],"mappings":"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"}