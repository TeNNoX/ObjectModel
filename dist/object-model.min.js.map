{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/list-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\r\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\r\n\tgetProto = Object.getPrototypeOf,\r\n\tsetProto = Object.setPrototypeOf,\r\n\r\n\thas = (o, prop) => o.hasOwnProperty(prop),\r\n\tis = (Constructor, obj) => obj instanceof Constructor,\r\n\tisFunction = f => typeof f === \"function\",\r\n\tisObject = o => typeof o === \"object\",\r\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\r\n\tisIterable = x => x && isFunction(x[Symbol.iterator]),\r\n\r\n\tproxifyFn = (fn, apply) => new Proxy(fn, { apply }),\r\n\tproxifyModel = (val, model, traps) => new Proxy(val, Object.assign({ getPrototypeOf: () => model.prototype }, traps)),\r\n\r\n\tmerge = (target, src = {}) => {\r\n\t\tfor (let key in src) {\r\n\t\t\tif (isPlainObject(src[key])) {\r\n\t\t\t\tlet o = {}\r\n\t\t\t\tmerge(o, target[key])\r\n\t\t\t\tmerge(o, src[key])\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target\r\n\t},\r\n\r\n\tdefine = (obj, key, value, enumerable = false) => {\r\n\t\tObject.defineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\r\n\t},\r\n\r\n\tsetConstructor = (model, constructor) => {\r\n\t\tsetProto(model, constructor.prototype)\r\n\t\tdefine(model, \"constructor\", constructor)\r\n\t},\r\n\r\n\textend = (child, parent, props) => {\r\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\r\n\t\t\tconstructor: {\r\n\t\t\t\tvalue: child,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t}\r\n\t\t}), props)\r\n\t\tsetProto(child, parent)\r\n\t}","import {\r\n\tbettertypeof, define, extend, getProto, has, is, isFunction, isObject, isPlainObject,\r\n\tmerge, proxifyFn, setConstructor\r\n} from \"./helpers.js\"\r\n\r\nexport const\r\n\t_validate = Symbol(),\r\n\t_original = Symbol(), // used to bypass proxy\r\n\r\n\tSKIP_VALIDATE = Symbol(), // used to skip validation at instanciation for perf\r\n\r\n\tinitModel = (model, constructor, def, base) => {\r\n\t\tif(base) extend(model, base)\r\n\t\tsetConstructor(model, constructor)\r\n\t\tmodel.definition = def\r\n\t\tmodel.assertions = [...model.assertions]\r\n\t\tdefine(model, \"errors\", [])\r\n\t\tdelete model.name\r\n\t\treturn model\r\n\t},\r\n\r\n\textendModel = (child, parent, newProps) => {\r\n\t\textend(child, parent, newProps)\r\n\t\tchild.assertions.push(...parent.assertions)\r\n\t\treturn child\r\n\t},\r\n\r\n\tstackError = (errors, expected, received, path, message) => {\r\n\t\terrors.push({ expected, received, path, message })\r\n\t},\r\n\r\n\tunstackErrors = (model, collector = model.errorCollector) => {\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors > 0) {\r\n\t\t\tlet errors = model.errors.map(err => {\r\n\t\t\t\tif (!err.message) {\r\n\t\t\t\t\tlet def = [].concat(err.expected)\r\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\r\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\r\n\t\t\t\t}\r\n\t\t\t\treturn err\r\n\t\t\t})\r\n\t\t\tmodel.errors = []\r\n\t\t\tcollector.call(model, errors) // throw all errors collected\r\n\t\t}\r\n\t\treturn nbErrors\r\n\t},\r\n\r\n\tisModelInstance = i => i && is(Model, getProto(i).constructor),\r\n\r\n\tparseDefinition = (def) => {\r\n\t\tif (isPlainObject(def)) {\r\n\t\t\tObject.keys(def).map(key => { def[key] = parseDefinition(def[key]) })\r\n\t\t}\r\n\t\telse if (!Array.isArray(def)) return [def]\r\n\t\telse if (def.length === 1) return [...def, undefined, null]\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tformatDefinition = (def, stack) => {\r\n\t\tlet parts = parseDefinition(def).map(d => format(d, stack))\r\n\t\treturn parts.length > 1 ? `(${parts.join(\" or \")})` : parts[0]\r\n\t},\r\n\r\n\textendDefinition = (def, newParts = []) => {\r\n\t\tnewParts = [].concat(newParts)\r\n\t\tif (newParts.length > 0) {\r\n\t\t\tdef = newParts\r\n\t\t\t\t.reduce((def, ext) => def.concat(ext), [].concat(def)) // clone to lose ref\r\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\r\n\t\t}\r\n\r\n\t\treturn def\r\n\t},\r\n\r\n\tcheckDefinition = (obj, def, path, errors, stack, shouldCast) => {\r\n\t\tlet indexFound = stack.indexOf(def)\r\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\r\n\t\t\treturn obj //if found twice in call stack, cycle detected, skip validation\r\n\r\n\t\tif (is(Model, def)) {\r\n\t\t\tif (shouldCast) obj = cast(obj, def)\r\n\t\t\tdef[_validate](obj, path, errors, stack.concat(def))\r\n\t\t}\r\n\t\telse if (isPlainObject(def)) {\r\n\t\t\tObject.keys(def).map(key => {\r\n\t\t\t\tlet val = obj ? obj[key] : undefined\r\n\t\t\t\tcheckDefinition(val, def[key], formatPath(path, key), errors, stack, shouldCast)\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet pdef = parseDefinition(def)\r\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack))) {\r\n\t\t\t\tif (shouldCast) obj = cast(obj, def)\r\n\t\t\t\treturn obj\r\n\t\t\t}\r\n\r\n\t\t\tstackError(errors, def, obj, path)\r\n\t\t}\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\tcheckDefinitionPart = (obj, def, path, stack, shouldCast) => {\r\n\t\tif (obj == null) return obj === def\r\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\r\n\t\t\tlet errors = []\r\n\t\t\tcheckDefinition(obj, def, path, errors, stack, shouldCast)\r\n\t\t\treturn !errors.length\r\n\t\t}\r\n\t\tif (is(RegExp, def)) return def.test(obj)\r\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\t\treturn obj === def\r\n\t\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t\t|| obj.constructor === def\r\n\t},\r\n\r\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\r\n\t\tfor (let assertion of model.assertions) {\r\n\t\t\tlet result\r\n\t\t\ttry {\r\n\t\t\t\tresult = assertion.call(model, obj)\r\n\t\t\t} catch (err) {\r\n\t\t\t\tresult = err\r\n\t\t\t}\r\n\t\t\tif (result !== true) {\r\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\r\n\t\t\t\t\t+ `for ${path ? path + \" =\" : \"value\"} ${format(value)}`\r\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tformat = (obj, stack = []) => {\r\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\r\n\t\tif (obj === null || obj === undefined) return String(obj)\r\n\t\tif (typeof obj === \"string\") return `\"${obj}\"`\r\n\t\tif (is(Model, obj)) return obj.toString(stack)\r\n\r\n\t\tstack.unshift(obj)\r\n\r\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\r\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\r\n\t\tif (Array.isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\r\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\r\n\t\tif (obj && isObject(obj)) {\r\n\t\t\tlet props = Object.keys(obj),\r\n\t\t\t\tindent = '\\t'.repeat(stack.length)\r\n\t\t\treturn `{${props.map(\r\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], [...stack])}`\r\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\r\n\t\t}\r\n\r\n\t\treturn String(obj)\r\n\t},\r\n\r\n\tformatPath = (path, key) => path ? path + '.' + key : key,\r\n\r\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\r\n\t\tlet newPath = formatPath(path, key),\r\n\t\t\tisPrivate = model.conventionForPrivate(key),\r\n\t\t\tisConstant = model.conventionForConstant(key),\r\n\t\t\tisOwnProperty = has(o, key),\r\n\t\t\tinitialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\r\n\r\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\r\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\r\n\r\n\t\tlet isInDefinition = has(def, key)\r\n\t\tif (isInDefinition || !model.sealed) {\r\n\t\t\tapplyMutation(newPath)\r\n\t\t\tif (isInDefinition) checkDefinition(o[key], def[key], newPath, model.errors, [])\r\n\t\t\tcheckAssertions(o, model, newPath)\r\n\t\t}\r\n\t\telse rejectUndeclaredProp(newPath, o[key], model.errors)\r\n\r\n\t\tlet nbErrors = model.errors.length\r\n\t\tif (nbErrors) {\r\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\r\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\r\n\r\n\t\t\tunstackErrors(model)\r\n\t\t}\r\n\r\n\t\treturn !nbErrors\r\n\t},\r\n\r\n\tcannot = (msg, model) => {\r\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\r\n\t},\r\n\r\n\trejectUndeclaredProp = (path, received, errors) => {\r\n\t\terrors.push({\r\n\t\t\tpath,\r\n\t\t\treceived,\r\n\t\t\tmessage: `property ${path} is not declared in the sealed model definition`\r\n\t\t})\r\n\t},\r\n\r\n\tcast = (obj, defNode = []) => {\r\n\t\tif (!obj || isPlainObject(defNode) || is(BasicModel, defNode) || isModelInstance(obj))\r\n\t\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\t\tlet def = parseDefinition(defNode),\r\n\t\t\tsuitableModels = []\r\n\r\n\t\tfor (let part of def) {\r\n\t\t\tif (is(Model, part) && !is(BasicModel, part) && part.test(obj))\r\n\t\t\t\tsuitableModels.push(part)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length === 1) {\r\n\t\t\t// automatically cast to suitable model when explicit (duck typing)\r\n\t\t\treturn new suitableModels[0](obj, SKIP_VALIDATE)\r\n\t\t}\r\n\r\n\t\tif (suitableModels.length > 1)\r\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\r\n\r\n\t\treturn obj\r\n\t},\r\n\r\n\tcheckUndeclaredProps = (obj, def, errors, path) => {\r\n\t\tObject.keys(obj).map(key => {\r\n\t\t\tlet val = obj[key],\r\n\t\t\t\tsubpath = formatPath(path, key)\r\n\t\t\tif (!has(def, key)) rejectUndeclaredProp(subpath, val, errors)\r\n\t\t\telse if (isPlainObject(val)) checkUndeclaredProps(val, def[key], errors, subpath)\r\n\t\t})\r\n\t},\r\n\r\n\tgetProxy = (model, obj, def, path, privateAccess) => {\r\n\t\tif (!isPlainObject(def)) return cast(obj, def)\r\n\r\n\t\tconst grantPrivateAccess = f => proxifyFn(f, (fn, ctx, args) => {\r\n\t\t\tprivateAccess = true\r\n\t\t\tlet result = Reflect.apply(fn, ctx, args)\r\n\t\t\tprivateAccess = false\r\n\t\t\treturn result\r\n\t\t})\r\n\r\n\t\treturn new Proxy(obj, {\r\n\r\n\t\t\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\r\n\r\n\t\t\tget(o, key) {\r\n\t\t\t\tif (key === _original) return o\r\n\r\n\t\t\t\tif (typeof key !== \"string\") return Reflect.get(o, key)\r\n\r\n\t\t\t\tlet newPath = formatPath(path, key),\r\n\t\t\t\t\tdefPart = def[key]\r\n\r\n\t\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\r\n\t\t\t\t\tcannot(`access to private property ${newPath}`, model)\r\n\t\t\t\t\tunstackErrors(model)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\r\n\t\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isFunction(o[key]) && key !== \"constructor\") {\r\n\t\t\t\t\treturn grantPrivateAccess(o[key])\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isPlainObject(defPart) && !o[key]) {\r\n\t\t\t\t\to[key] = {} // null-safe traversal\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn getProxy(model, o[key], defPart, newPath, privateAccess)\r\n\t\t\t},\r\n\r\n\t\t\tset(o, key, val) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\r\n\t\t\t\t\tnewPath => Reflect.set(o, key, getProxy(model, val, def[key], newPath))\r\n\t\t\t\t)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(o, key) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\r\n\t\t\t},\r\n\r\n\t\t\tdefineProperty(o, key, args) {\r\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\r\n\t\t\t},\r\n\r\n\t\t\thas(o, key) {\r\n\t\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t\t\t},\r\n\r\n\t\t\townKeys(o) {\r\n\t\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\r\n\t\t\t},\r\n\r\n\t\t\tgetOwnPropertyDescriptor(o, key) {\r\n\t\t\t\tlet descriptor\r\n\t\t\t\tif (!model.conventionForPrivate(key)) {\r\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key)\r\n\t\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key]\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn descriptor\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\nexport function Model(def, params) {\r\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\r\n}\r\n\r\nObject.assign(Model.prototype, {\r\n\tname: \"Model\",\r\n\tassertions: [],\r\n\r\n\tconventionForConstant: key => key.toUpperCase() === key,\r\n\tconventionForPrivate: key => key[0] === \"_\",\r\n\r\n\ttoString(stack) {\r\n\t\treturn formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\tas(name) {\r\n\t\tdefine(this, \"name\", name)\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val) {\r\n\t\tthis.default = val\r\n\t\treturn this\r\n\t},\r\n\r\n\t[_validate](obj, path, errors, stack) {\r\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t},\r\n\r\n\tvalidate(obj, errorCollector) {\r\n\t\tthis[_validate](obj, null, this.errors, [])\r\n\t\treturn !unstackErrors(this, errorCollector)\r\n\t},\r\n\r\n\ttest(obj) {\r\n\t\tlet model = this\r\n\t\twhile (!has(model, \"errorCollector\")) {\r\n\t\t\tmodel = getProto(model)\r\n\t\t}\r\n\r\n\t\tlet initialErrorCollector = model.errorCollector,\r\n\t\t\tfailed\r\n\r\n\t\tmodel.errorCollector = () => {\r\n\t\t\tfailed = true\r\n\t\t}\r\n\r\n\t\tnew this(obj) // may trigger this.errorCollector\r\n\r\n\t\tmodel.errorCollector = initialErrorCollector\r\n\t\treturn !failed\r\n\t},\r\n\r\n\terrorCollector(errors) {\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\tassert(assertion, description = format(assertion)) {\r\n\t\tdefine(assertion, \"description\", description)\r\n\t\tthis.assertions = this.assertions.concat(assertion)\r\n\t\treturn this\r\n\t}\r\n})\r\n\r\n\r\nexport function BasicModel(def) {\r\n\tlet model = function (val = model.default) {\r\n\t\treturn model.validate(val) ? val : undefined\r\n\t}\r\n\r\n\treturn initModel(model, BasicModel, def)\r\n}\r\n\r\nextend(BasicModel, Model, {\r\n\textend(...newParts) {\r\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\r\n\t\t}\r\n\r\n\t\treturn child\r\n\t}\r\n})\r\n\r\n\r\nexport function ObjectModel(def, params) {\r\n\tlet model = function (obj = model.default, mode) {\r\n\t\tif (!is(model, this)) return new model(obj)\r\n\t\tif (is(model, obj)) return obj\r\n\r\n\t\tif (!is(Object, obj) && obj !== undefined) {\r\n\t\t\tstackError(model.errors, Object, obj)\r\n\t\t}\r\n\r\n\t\tif (model.parentClass) merge(obj, new model.parentClass(obj))\r\n\t\tmerge(this, obj)\r\n\r\n\t\tif (mode !== SKIP_VALIDATE) {\r\n\t\t\tmodel[_validate](this, null, model.errors, [], true)\r\n\t\t\tunstackErrors(model)\r\n\t\t}\r\n\r\n\t\treturn getProxy(model, this, model.definition)\r\n\t}\r\n\r\n\tObject.assign(model, params)\r\n\treturn initModel(model, ObjectModel, def, Object)\r\n}\r\n\r\nextend(ObjectModel, Model, {\r\n\tsealed: false,\r\n\r\n\tdefaults(p) {\r\n\t\tObject.assign(this.prototype, p)\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack) {\r\n\t\treturn format(this.definition, stack)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\tlet definition = Object.assign({}, this.definition),\r\n\t\t\tproto = Object.assign({}, this.prototype),\r\n\t\t\tnewAssertions = []\r\n\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(Model, part)) {\r\n\t\t\t\tmerge(definition, part.definition)\r\n\t\t\t\tnewAssertions.push(...part.assertions)\r\n\t\t\t}\r\n\t\t\tif (isFunction(part)) merge(proto, part.prototype)\r\n\t\t\tif (isObject(part)) merge(definition, part)\r\n\t\t}\r\n\r\n\t\tlet submodel = extendModel(new ObjectModel(definition), this, proto)\r\n\t\tsubmodel.assertions = [...this.assertions, ...newAssertions]\r\n\r\n\t\tif (getProto(this) !== ObjectModel.prototype) { // extended class\r\n\t\t\tsubmodel.parentClass = this\r\n\t\t}\r\n\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t[_validate](obj, path, errors, stack, shouldCast) {\r\n\t\tif (isObject(obj)) {\r\n\t\t\tlet def = this.definition\r\n\t\t\tcheckDefinition(obj[_original] || obj, def, path, errors, stack, shouldCast)\r\n\t\t\tif (this.sealed) checkUndeclaredProps(obj, def, errors)\r\n\t\t}\r\n\t\telse stackError(errors, this, obj, path)\r\n\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t}\r\n})","import { _original, checkAssertions, checkDefinition, initModel, unstackErrors, SKIP_VALIDATE } from \"./object-model.js\"\r\nimport { has, isFunction, proxifyFn, proxifyModel } from \"./helpers.js\"\r\n\r\nexport const initListModel = (base, constructor, def, init, clone, mutators, otherTraps = {}) => {\r\n\r\n\tlet model = function (list = model.default, mode) {\r\n\t\tlist = init(list)\r\n\r\n\t\tif (mode === SKIP_VALIDATE || model.validate(list)) {\r\n\t\t\treturn proxifyModel(list, model, Object.assign({\r\n\t\t\t\tget(l, key) {\r\n\t\t\t\t\tif (key === _original) return l\r\n\r\n\t\t\t\t\tlet val = l[key]\r\n\t\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\r\n\t\t\t\t\t\tif (has(mutators, key)) {\r\n\t\t\t\t\t\t\t// indexes of arguments to check def + cast\r\n\t\t\t\t\t\t\tlet [begin, end = args.length - 1, getArgDef] = mutators[key]\r\n\t\t\t\t\t\t\tfor (let i = begin; i <= end; i++) {\r\n\t\t\t\t\t\t\t\tlet argDef = getArgDef ? getArgDef(i) : model.definition\r\n\t\t\t\t\t\t\t\targs[i] = checkDefinition(\r\n\t\t\t\t\t\t\t\t\targs[i],\r\n\t\t\t\t\t\t\t\t\targDef,\r\n\t\t\t\t\t\t\t\t\t`${base.name}.${key} arguments[${i}]`,\r\n\t\t\t\t\t\t\t\t\tmodel.errors,\r\n\t\t\t\t\t\t\t\t\t[],\r\n\t\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (model.assertions.length > 0) {\r\n\t\t\t\t\t\t\t\tlet testingClone = clone(l)\r\n\t\t\t\t\t\t\t\tfn.apply(testingClone, args)\r\n\t\t\t\t\t\t\t\tcheckAssertions(testingClone, model, `after ${key} mutation`)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tunstackErrors(model)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn fn.apply(l, args)\r\n\t\t\t\t\t}) : val\r\n\t\t\t\t}\r\n\t\t\t}, otherTraps))\r\n\t\t}\r\n\t}\r\n\r\n\treturn initModel(model, constructor, def, base)\r\n}","import {\r\n\t_validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel,\r\n\tformatDefinition, Model, stackError, unstackErrors\r\n} from \"./object-model.js\"\r\nimport { extend } from \"./helpers.js\"\r\nimport { initListModel } from \"./list-model.js\"\r\n\r\nexport default function ArrayModel(initialDefinition) {\r\n\tlet model = initListModel(\r\n\t\tArray,\r\n\t\tArrayModel,\r\n\t\tinitialDefinition,\r\n\t\ta => Array.isArray(a) ? a.map(arg => cast(arg, model.definition)) : a,\r\n\t\ta => [...a],\r\n\t\t{\r\n\t\t\t\"copyWithin\": [],\r\n\t\t\t\"fill\": [0, 0],\r\n\t\t\t\"pop\": [],\r\n\t\t\t\"push\": [0],\r\n\t\t\t\"reverse\": [],\r\n\t\t\t\"shift\": [],\r\n\t\t\t\"sort\": [],\r\n\t\t\t\"splice\": [2],\r\n\t\t\t\"unshift\": [0]\r\n\t\t},\r\n\t\t{\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\treturn controlMutation(model, arr, key, val, (a,v) => a[key] = v, true)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(arr, key) {\r\n\t\t\t\treturn controlMutation(model, arr, key, undefined, a => delete a[key])\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\r\n\treturn model\r\n}\r\n\r\nextend(ArrayModel, Model, {\r\n\ttoString(stack) {\r\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_validate](arr, path, errors, stack) {\r\n\t\tif (Array.isArray(arr))\r\n\t\t\tarr.forEach((a, i) => checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack))\r\n\t\telse stackError(errors, this, arr, path)\r\n\r\n\t\tcheckAssertions(arr, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})\r\n\r\nlet controlMutation = (model, array, key, value, applyMutation, canBeExtended) => {\r\n\tlet path = `Array[${key}]`\r\n\tlet isInDef = (parseInt(key) >= 0 && (canBeExtended || key in array))\r\n\tif (isInDef) value = checkDefinition(value, model.definition, path, model.errors, [], true)\r\n\r\n\tlet testArray = [...array]\r\n\tapplyMutation(testArray)\r\n\tcheckAssertions(testArray, model, path)\r\n\tlet isSuccess = !unstackErrors(model)\r\n\tif (isSuccess) applyMutation(array, value)\r\n\treturn isSuccess\r\n}","import {\r\n\t_original, _validate, checkAssertions, checkDefinition, extendDefinition, extendModel,\r\n\tformat, formatDefinition, initModel, Model, stackError, unstackErrors\r\n} from \"./object-model.js\"\r\nimport { extend, isFunction, proxifyModel } from \"./helpers.js\"\r\n\r\n\r\nexport default function FunctionModel(...argsDef) {\r\n\r\n\tlet model = function (fn = model.default) {\r\n\t\tif (!model.validate(fn)) return\r\n\t\treturn proxifyModel(fn, model, {\r\n\t\t\tget(fn, key) {\r\n\t\t\t\treturn key === _original ? fn : fn[key]\r\n\t\t\t},\r\n\r\n\t\t\tapply(fn, ctx, args) {\r\n\t\t\t\tlet def = model.definition\r\n\r\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\r\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\r\n\t\t\t\t})\r\n\r\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\r\n\r\n\t\t\t\tlet result\r\n\t\t\t\tif (!model.errors.length) {\r\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\r\n\t\t\t\t\tif (\"return\" in def)\r\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\r\n\t\t\t\t}\r\n\t\t\t\tunstackErrors(model)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\treturn initModel(model, FunctionModel, { arguments: argsDef }, Function)\r\n}\r\n\r\nextend(FunctionModel, Model, {\r\n\ttoString(stack = []) {\r\n\t\tlet out = `Function(${this.definition.arguments.map(\r\n\t\t\targDef => formatDefinition(argDef, [...stack])\r\n\t\t).join(\", \")})`\r\n\r\n\t\tif (\"return\" in this.definition) {\r\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\r\n\t\t}\r\n\t\treturn out\r\n\t},\r\n\r\n\treturn(def) {\r\n\t\tthis.definition.return = def\r\n\t\treturn this\r\n\t},\r\n\r\n\textend(newArgs, newReturns) {\r\n\t\tlet args = this.definition.arguments,\r\n\t\t\tmixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\r\n\t\t\tmixedReturns = extendDefinition(this.definition.return, newReturns)\r\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\r\n\t},\r\n\r\n\t[_validate](f, path, errors) {\r\n\t\tif (!isFunction(f)) stackError(errors, \"Function\", f, path)\r\n\t}\r\n})\r\n\r\nFunctionModel.prototype.assert(function numberOfArgs(args) {\r\n\treturn (args.length > this.definition.arguments.length) ? args : true\r\n}, function (args) {\r\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\r\n})","import {\r\n\t_validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel,\r\n\tformat, formatDefinition, Model, stackError\r\n} from \"./object-model.js\"\r\nimport { initListModel } from \"./list-model.js\"\r\nimport { extend, is, isIterable } from \"./helpers.js\"\r\n\r\nexport default function MapModel(initialKeyDefinition, initialValueDefinition) {\r\n\tlet getDef = i => i === 0 ? model.definition.key : model.definition.value,\r\n\t\tmodel = initListModel(\r\n\t\t\tMap,\r\n\t\t\tMapModel,\r\n\t\t\t{ key: initialKeyDefinition, value: initialValueDefinition },\r\n\t\t\tit => isIterable(it) ? new Map([...it].map(pair => pair.map((x,i) => cast(x, getDef(i))))) : it,\r\n\t\t\tmap => new Map(map),\r\n\t\t\t{\r\n\t\t\t\t\"set\": [0, 1, getDef],\r\n\t\t\t\t\"delete\": [],\r\n\t\t\t\t\"clear\": []\r\n\t\t\t}\r\n\t\t)\r\n\r\n\treturn model\r\n}\r\n\r\nextend(MapModel, Model, {\r\n\ttoString(stack) {\r\n\t\treturn `Map of ${formatDefinition(this.definition.key, stack)} : ${formatDefinition(this.definition.value, stack)}`\r\n\t},\r\n\r\n\t[_validate](map, path, errors, stack) {\r\n\t\tif (is(Map, map)) {\r\n\t\t\tpath = path || 'Map'\r\n\t\t\tfor (let [key, value] of map) {\r\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\r\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, map, path)\r\n\r\n\t\tcheckAssertions(map, this, path, errors)\r\n\t},\r\n\r\n\textend(keyParts, valueParts) {\r\n\t\treturn extendModel(new MapModel(\r\n\t\t\textendDefinition(this.definition.key, keyParts),\r\n\t\t\textendDefinition(this.definition.value, valueParts)\r\n\t\t), this)\r\n\t}\r\n})","import {\r\n\t_validate, cast, checkAssertions, checkDefinition,\r\n\textendDefinition, extendModel, formatDefinition, Model, stackError\r\n} from \"./object-model.js\"\r\nimport { initListModel } from \"./list-model.js\"\r\nimport { extend, is, isIterable } from \"./helpers.js\"\r\n\r\nexport default function SetModel(initialDefinition) {\r\n\tlet model = initListModel(\r\n\t\tSet,\r\n\t\tSetModel,\r\n\t\tinitialDefinition,\r\n\t\tit => isIterable(it) ? new Set([...it].map(val => cast(val, model.definition))) : it,\r\n\t\tset => new Set(set),\r\n\t\t{\r\n\t\t\t\"add\": [0, 0],\r\n\t\t\t\"delete\": [],\r\n\t\t\t\"clear\": []\r\n\t\t}\r\n\t)\r\n\r\n\treturn model\r\n}\r\n\r\nextend(SetModel, Model, {\r\n\ttoString(stack) {\r\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\r\n\t},\r\n\r\n\t[_validate](set, path, errors, stack) {\r\n\t\tif (is(Set, set)) {\r\n\t\t\tfor (let item of set.values()) {\r\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\r\n\t\t\t}\r\n\t\t} else stackError(errors, this, set, path)\r\n\t\tcheckAssertions(set, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts) {\r\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})"],"names":["getProto","Object","getPrototypeOf","setProto","setPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isFunction","f","isObject","isPlainObject","prototype","isIterable","x","Symbol","iterator","proxifyFn","fn","apply","Proxy","proxifyModel","val","model","traps","assign","merge","target","src","key","define","value","enumerable","defineProperty","writable","configurable","extend","child","parent","props","create","constructor","_validate","_original","SKIP_VALIDATE","initModel","def","base","setConstructor","definition","assertions","name","extendModel","newProps","push","stackError","errors","expected","received","path","message","unstackErrors","collector","errorCollector","nbErrors","length","map","err","concat","d","format","join","toString","call","match","bettertypeof","isModelInstance","i","Model","parseDefinition","keys","Array","isArray","undefined","formatDefinition","stack","parts","extendDefinition","newParts","reduce","ext","filter","index","self","indexOf","checkDefinition","shouldCast","indexFound","cast","formatPath","some","part","checkDefinitionPart","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","slice","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","isInDefinition","sealed","rejectUndeclaredProp","msg","defNode","BasicModel","suitableModels","console","warn","checkUndeclaredProps","subpath","getProxy","[object Object]","Reflect","get","defPart","ctx","args","grantPrivateAccess","set","deleteProperty","ownKeys","descriptor","params","ObjectModel","default","validate","mode","this","parentClass","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","p","proto","newAssertions","submodel","initListModel","init","clone","mutators","otherTraps","list","l","begin","end","getArgDef","argDef","testingClone","ArrayModel","initialDefinition","a","arg","copyWithin","fill","pop","reverse","shift","sort","splice","arr","v","forEach","array","canBeExtended","parseInt","testArray","isSuccess","FunctionModel","argsDef","arguments","return","Function","MapModel","initialKeyDefinition","initialValueDefinition","getDef","it","pair","delete","clear","SetModel","add","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","keyParts","valueParts","values"],"mappings":"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"}