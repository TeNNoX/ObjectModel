{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/list-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\n\tgetProto = Object.getPrototypeOf,\n\tsetProto = Object.setPrototypeOf,\n\n\thas = (o, prop) => o.hasOwnProperty(prop),\n\tis = (Constructor, obj) => obj instanceof Constructor,\n\tisFunction = f => typeof f === \"function\",\n\tisObject = o => typeof o === \"object\",\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\n\tisIterable = x => x && isFunction(x[Symbol.iterator]),\n\n\tproxifyFn = (fn, apply) => new Proxy(fn, { apply }),\n\tproxifyModel = (val, model, traps) => new Proxy(val, Object.assign({ getPrototypeOf: () => model.prototype }, traps)),\n\n\tmerge = (target, src = {}) => {\n\t\tfor (let key in src) {\n\t\t\tif (isPlainObject(src[key])) {\n\t\t\t\tlet o = {}\n\t\t\t\tmerge(o, target[key])\n\t\t\t\tmerge(o, src[key])\n\t\t\t\ttarget[key] = o\n\t\t\t} else {\n\t\t\t\ttarget[key] = src[key]\n\t\t\t}\n\t\t}\n\t\treturn target\n\t},\n\n\tdefine = (obj, key, value, enumerable = false) => {\n\t\tObject.defineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\n\t},\n\n\tsetConstructor = (model, constructor) => {\n\t\tsetProto(model, constructor.prototype)\n\t\tdefine(model, \"constructor\", constructor)\n\t},\n\n\textend = (child, parent, props) => {\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\n\t\t\tconstructor: {\n\t\t\t\tvalue: child,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t}\n\t\t}), props)\n\t\tsetProto(child, parent)\n\t}","import {\n\tbettertypeof, define, extend, getProto, has, is, isFunction, isObject, isPlainObject,\n\tmerge, proxifyFn, setConstructor\n} from \"./helpers.js\"\n\nexport const\n\t_constructor = Symbol(),\n\t_validate = Symbol(),\n\t_original = Symbol(),\n\t_get = Symbol(), // used to bypass private access\n\n\tinitModel = (model, def) => {\n\t\tmodel.definition = def\n\t\tmodel.assertions = [...model.assertions]\n\t\tdefine(model, \"errors\", [])\n\t\tdelete model.name;\n\t},\n\n\textendModel = (child, parent, newProps) => {\n\t\textend(child, parent, newProps)\n\t\tchild.assertions.push(...parent.assertions)\n\t\treturn child\n\t},\n\n\tstackError = (errors, expected, received, path, message) => {\n\t\terrors.push({ expected, received, path, message })\n\t},\n\n\tunstackErrors = (model, errorCollector = model.errorCollector) => {\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors > 0) {\n\t\t\tlet errors = model.errors.map(err => {\n\t\t\t\tif (!err.message) {\n\t\t\t\t\tlet def = [].concat(err.expected)\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\n\t\t\t\t}\n\t\t\t\treturn err\n\t\t\t})\n\t\t\tmodel.errors = []\n\t\t\terrorCollector.call(model, errors) // throw all errors collected\n\t\t}\n\t\treturn nbErrors\n\t},\n\n\tisModelInstance = i => i && is(Model, getProto(i).constructor),\n\n\tparseDefinition = (def) => {\n\t\tif (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => { def[key] = parseDefinition(def[key]) })\n\t\t}\n\t\telse if (!Array.isArray(def)) return [def]\n\t\telse if (def.length === 1) return [...def, undefined, null]\n\n\t\treturn def\n\t},\n\n\tformatDefinition = (def, stack) => {\n\t\tlet parts = parseDefinition(def).map(d => format(d, stack));\n\t\treturn parts.length > 1 ? `(${parts.join(\" or \")})` : parts[0]\n\t},\n\n\textendDefinition = (def, newParts = []) => {\n\t\tnewParts = [].concat(newParts)\n\t\tif (newParts.length > 0) {\n\t\t\tdef = newParts\n\t\t\t\t.reduce((def, ext) => def.concat(ext), [].concat(def)) // clone to lose ref\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\n\t\t}\n\n\t\treturn def\n\t},\n\n\tcheckDefinition = (obj, def, path, errors, stack, shouldCast) => {\n\t\tlet indexFound = stack.indexOf(def)\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\n\t\t\treturn obj //if found twice in call stack, cycle detected, skip validation\n\n\t\tif (is(Model, def)) {\n\t\t\tif (shouldCast) obj = cast(obj, def)\n\t\t\tdef[_validate](obj, path, errors, stack.concat(def))\n\t\t}\n\t\telse if (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => {\n\t\t\t\tlet val = obj ? obj[_get] ? obj[_get](key) : obj[key] : undefined;\n\t\t\t\tcheckDefinition(val, def[key], formatPath(path, key), errors, stack, shouldCast)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tlet pdef = parseDefinition(def)\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack))) {\n\t\t\t\tif (shouldCast) obj = cast(obj, def)\n\t\t\t\treturn obj\n\t\t\t}\n\n\t\t\tstackError(errors, def, obj, path)\n\t\t}\n\n\t\treturn obj\n\t},\n\n\tcheckDefinitionPart = (obj, def, path, stack, shouldCast) => {\n\t\tif (obj == null) return obj === def\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\n\t\t\tlet errors = []\n\t\t\tcheckDefinition(obj, def, path, errors, stack, shouldCast)\n\t\t\treturn !errors.length\n\t\t}\n\t\tif (is(RegExp, def)) return def.test(obj)\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\n\t\treturn obj === def\n\t\t\t|| (isFunction(def) && is(def, obj))\n\t\t\t|| obj.constructor === def\n\t},\n\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\n\t\tfor (let assertion of model.assertions) {\n\t\t\tlet result\n\t\t\ttry {\n\t\t\t\tresult = assertion.call(model, obj)\n\t\t\t} catch (err) {\n\t\t\t\tresult = err\n\t\t\t}\n\t\t\tif (result !== true) {\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\n\t\t\t\t\t+ `for ${path ? path + \" =\" : \"value\"} ${format(value)}`\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\n\t\t\t}\n\t\t}\n\t},\n\n\tformat = (obj, stack = []) => {\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\n\t\tif (obj === null || obj === undefined) return String(obj)\n\t\tif (typeof obj === 'string') return `\"${obj}\"`\n\t\tif (is(Model, obj)) return obj.toString(stack)\n\n\t\tstack.unshift(obj)\n\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\n\t\tif (Array.isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\n\t\tif (obj && isObject(obj)) {\n\t\t\tlet props = Object.keys(obj),\n\t\t\t\tindent = '\\t'.repeat(stack.length)\n\t\t\treturn `{${props.map(\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], [...stack])}`\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\n\t\t}\n\n\t\treturn String(obj)\n\t},\n\n\tformatPath = (path, key) => path ? path + '.' + key : key,\n\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\n\t\tlet newPath = formatPath(path, key),\n\t\t\tisPrivate = model.conventionForPrivate(key),\n\t\t\tisConstant = model.conventionForConstant(key),\n\t\t\tisOwnProperty = has(o, key),\n\t\t\tinitialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\n\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\n\n\t\tlet isInDefinition = has(def, key);\n\t\tif (isInDefinition || !model.sealed) {\n\t\t\tapplyMutation(newPath)\n\t\t\tif (isInDefinition) checkDefinition(o[key], def[key], newPath, model.errors, [])\n\t\t\tcheckAssertions(o, model, newPath)\n\t\t}\n\t\telse rejectUndeclaredProp(newPath, o[key], model.errors)\n\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors) {\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\n\n\t\t\tunstackErrors(model)\n\t\t}\n\n\t\treturn !nbErrors\n\t},\n\n\tcannot = (msg, model) => {\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\n\t},\n\n\trejectUndeclaredProp = (path, received, errors) => {\n\t\terrors.push({\n\t\t\tpath,\n\t\t\treceived,\n\t\t\tmessage: `property ${path} is not declared in the sealed model definition`\n\t\t})\n\t},\n\n\tcast = (obj, defNode = []) => {\n\t\tif (!obj || isPlainObject(defNode) || is(BasicModel, defNode) || isModelInstance(obj))\n\t\t\treturn obj // no value or not leaf or already a model instance\n\n\t\tlet def = parseDefinition(defNode),\n\t\t\tsuitableModels = []\n\n\t\tfor (let part of def) {\n\t\t\tif (is(Model, part) && !is(BasicModel, part) && part.test(obj))\n\t\t\t\tsuitableModels.push(part)\n\t\t}\n\n\t\tif (suitableModels.length === 1) {\n\t\t\t// automatically cast to suitable model when explicit (duck typing)\n\t\t\treturn new suitableModels[0](obj)\n\t\t}\n\n\t\tif (suitableModels.length > 1)\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\n\n\t\treturn obj\n\t},\n\n\tcheckUndeclaredProps = (obj, def, errors, path) => {\n\t\tObject.keys(obj).map(key => {\n\t\t\tlet val = obj[key],\n\t\t\t\tsubpath = formatPath(path, key)\n\t\t\tif (!has(def, key)) rejectUndeclaredProp(subpath, val, errors)\n\t\t\telse if (isPlainObject(val)) checkUndeclaredProps(val, def[key], errors, subpath)\n\t\t})\n\t},\n\n\tgetProxy = (model, obj, def, path, privateAccess) => {\n\t\tif (!isPlainObject(def)) return cast(obj, def)\n\n\t\tconst grantTemporaryPrivateAccess = f => proxifyFn(f, (fn, ctx, args) => {\n\t\t\tprivateAccess = true;\n\t\t\tlet result = Reflect.apply(fn, ctx, args);\n\t\t\tprivateAccess = false;\n\t\t\treturn result\n\t\t})\n\n\t\treturn new Proxy(obj, {\n\n\t\t\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\n\n\t\t\tget(o, key) {\n\t\t\t\tif (key === _original) return o\n\t\t\t\tif (key === _get) return grantTemporaryPrivateAccess(prop => o[prop])\n\n\t\t\t\tif (typeof key !== \"string\") return Reflect.get(o, key)\n\n\t\t\t\tlet newPath = formatPath(path, key),\n\t\t\t\t\tdefPart = def[key];\n\n\t\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\n\t\t\t\t\tcannot(`access to private property ${newPath}`, model)\n\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\n\t\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(o[key]) && key !== \"constructor\") {\n\t\t\t\t\treturn grantTemporaryPrivateAccess(o[key])\n\t\t\t\t}\n\n\t\t\t\tif (isPlainObject(defPart) && !o[key]) {\n\t\t\t\t\to[key] = {} // null-safe traversal\n\t\t\t\t}\n\n\t\t\t\treturn getProxy(model, o[key], defPart, newPath, privateAccess)\n\t\t\t},\n\n\t\t\tset(o, key, val) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\n\t\t\t\t\tnewPath => Reflect.set(o, key, getProxy(model, val, def[key], newPath))\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tdeleteProperty(o, key) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\n\t\t\t},\n\n\t\t\tdefineProperty(o, key, args) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\n\t\t\t},\n\n\t\t\thas(o, key) {\n\t\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\n\t\t\t},\n\n\t\t\townKeys(o) {\n\t\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\n\t\t\t},\n\n\t\t\tgetOwnPropertyDescriptor(o, key) {\n\t\t\t\tlet descriptor;\n\t\t\t\tif (!model.conventionForPrivate(key)) {\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\n\t\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key];\n\t\t\t\t}\n\n\t\t\t\treturn descriptor\n\t\t\t}\n\t\t})\n\t}\n\n\nexport function Model(def, params) {\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\n}\n\nObject.assign(Model.prototype, {\n\tname: \"Model\",\n\tassertions: [],\n\n\tconventionForConstant: key => key.toUpperCase() === key,\n\tconventionForPrivate: key => key[0] === \"_\",\n\n\ttoString(stack) {\n\t\treturn formatDefinition(this.definition, stack)\n\t},\n\n\tas(name) {\n\t\tdefine(this, \"name\", name);\n\t\treturn this\n\t},\n\n\tdefaultTo(val) {\n\t\tthis.default = val\n\t\treturn this\n\t},\n\n\t[_validate](obj, path, errors, stack) {\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\n\t\tcheckAssertions(obj, this, path, errors)\n\t},\n\n\tvalidate(obj, errorCollector, shouldCast) {\n\t\tthis[_validate](obj, null, this.errors, [], shouldCast)\n\t\treturn !unstackErrors(this, errorCollector)\n\t},\n\n\ttest(obj) {\n\t\tlet model = this;\n\t\twhile (!has(model, \"errorCollector\")) {\n\t\t\tmodel = getProto(model)\n\t\t}\n\n\t\tlet initialErrorCollector = model.errorCollector,\n\t\t\tfailed;\n\n\t\tmodel.errorCollector = () => {\n\t\t\tfailed = true\n\t\t}\n\n\t\tnew this(obj) // may trigger this.errorCollector\n\n\t\tmodel.errorCollector = initialErrorCollector\n\t\treturn !failed\n\t},\n\n\terrorCollector(errors) {\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\n\t\tthrow e\n\t},\n\n\tassert(assertion, description = format(assertion)) {\n\t\tdefine(assertion, \"description\", description)\n\t\tthis.assertions = this.assertions.concat(assertion)\n\t\treturn this\n\t}\n})\n\n\nexport function BasicModel(def) {\n\tlet model = function (val = model.default) {\n\t\treturn model.validate(val) ? val : undefined\n\t}\n\n\tsetConstructor(model, BasicModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(BasicModel, Model, {\n\textend(...newParts) {\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\n\t\tfor (let part of newParts) {\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\n\t\t}\n\n\t\treturn child\n\t}\n})\n\n\nexport function ObjectModel(def, params) {\n\tlet model = function (obj = model.default) {\n\t\tif (!is(model, this)) return new model(obj)\n\t\tif (is(model, obj)) return obj\n\n\t\tif (!is(Object, obj) && obj !== undefined) {\n\t\t\tstackError(model.errors, Object, obj);\n\t\t}\n\n\t\tmerge(this, model[_constructor](obj))\n\n\t\tif (!model.validate(this, undefined, true)) return\n\t\treturn getProxy(model, this, model.definition)\n\t}\n\n\tObject.assign(model, params)\n\textend(model, Object)\n\tsetConstructor(model, ObjectModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(ObjectModel, Model, {\n\tsealed: false,\n\n\tdefaults(p) {\n\t\tObject.assign(this.prototype, p)\n\t\treturn this\n\t},\n\n\ttoString(stack) {\n\t\treturn format(this.definition, stack)\n\t},\n\n\textend(...newParts) {\n\t\tlet definition = Object.assign({}, this.definition),\n\t\t\tproto = Object.assign({}, this.prototype),\n\t\t\tnewAssertions = []\n\n\t\tfor (let part of newParts) {\n\t\t\tif (is(Model, part)) {\n\t\t\t\tmerge(definition, part.definition)\n\t\t\t\tnewAssertions.push(...part.assertions)\n\t\t\t}\n\t\t\tif (isFunction(part)) merge(proto, part.prototype)\n\t\t\tif (isObject(part)) merge(definition, part)\n\t\t}\n\n\t\tlet submodel = extendModel(new ObjectModel(definition), this, proto)\n\t\tsubmodel.assertions = [...this.assertions, ...newAssertions]\n\n\t\tif (getProto(this) !== ObjectModel.prototype) { // extended class\n\t\t\tsubmodel[_constructor] = (obj) => {\n\t\t\t\tlet parentInstance = new this(obj)\n\t\t\t\tmerge(obj, parentInstance) // get modified props from parent class constructor\n\t\t\t\treturn obj\n\t\t\t}\n\t\t}\n\n\t\treturn submodel\n\t},\n\n\t[_constructor]: o => o,\n\n\t[_validate](obj, path, errors, stack, shouldCast) {\n\t\tif (isObject(obj)) {\n\t\t\tlet def = this.definition\n\t\t\tcheckDefinition(obj, def, path, errors, stack, shouldCast)\n\t\t\tif (this.sealed) checkUndeclaredProps(obj, def, errors)\n\t\t}\n\t\telse stackError(errors, this, obj, path)\n\n\t\tcheckAssertions(obj, this, path, errors)\n\t}\n})","import { _original, initModel } from \"./object-model.js\"\nimport { extend, has, isFunction, proxifyFn, proxifyModel, setConstructor } from \"./helpers.js\"\n\nexport const initListModel = (base, constructor, def, init, clone, mutators, otherTraps = {}) => {\n\n\tlet model = function (list = model.default) {\n\t\tlist = init(list)\n\n\t\tif (model.validate(list)) return proxifyModel(list, model, Object.assign({\n\t\t\tget(l, key) {\n\t\t\t\tif (key === _original) return l\n\n\t\t\t\tlet val = l[key];\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\n\t\t\t\t\tif (has(mutators, key)) {\n\t\t\t\t\t\tif (mutators[key]) args = mutators[key](args) // autocast method args\n\n\t\t\t\t\t\tlet testingClone = clone(l)\n\t\t\t\t\t\tfn.apply(testingClone, args)\n\t\t\t\t\t\tmodel.validate(testingClone)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn fn.apply(l, args)\n\t\t\t\t}) : val\n\t\t\t}\n\t\t}, otherTraps))\n\t}\n\n\textend(model, base)\n\tsetConstructor(model, constructor)\n\tinitModel(model, def)\n\treturn model\n}","import {\n\t_validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel,\n\tformatDefinition, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { extend } from \"./helpers.js\"\nimport { initListModel } from \"./list-model.js\";\n\nexport default function ArrayModel(initialDefinition) {\n\tlet castAll = args => args.map(arg => cast(arg, model.definition))\n\n\tlet model = initListModel(\n\t\tArray,\n\t\tArrayModel,\n\t\tinitialDefinition,\n\t\ta => Array.isArray(a) ? castAll(a) : a,\n\t\ta => [...a],\n\t\t{\n\t\t\t\"copyWithin\": 0,\n\t\t\t\"fill\": ([val, ...rest]) => [cast(val, model.definition), ...rest],\n\t\t\t\"pop\": 0,\n\t\t\t\"push\": castAll,\n\t\t\t\"reverse\": 0,\n\t\t\t\"shift\": 0,\n\t\t\t\"sort\": 0,\n\t\t\t\"splice\": ([start, end, ...vals]) => [start, end, ...castAll(vals)],\n\t\t\t\"unshift\": castAll,\n\t\t},\n\t\t{\n\t\t\tset(arr, key, val) {\n\t\t\t\treturn setArrayKey(arr, key, val, model)\n\t\t\t},\n\n\t\t\tdeleteProperty(arr, key) {\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\n\t\t\t}\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(ArrayModel, Model, {\n\ttoString(stack) {\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](arr, path, errors, stack) {\n\t\tif (Array.isArray(arr))\n\t\t\tarr.forEach((a, i) => checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack))\n\t\telse stackError(errors, this, arr, path)\n\n\t\tcheckAssertions(arr, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})\n\nlet setArrayKey = (array, key, value, model) => {\n\tlet path = `Array[${key}]`;\n\tif (parseInt(key) >= 0)\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [], true)\n\n\tlet testArray = [...array]\n\ttestArray[key] = value\n\tcheckAssertions(testArray, model, path)\n\tlet isSuccess = !unstackErrors(model)\n\tif (isSuccess) array[key] = value\n\treturn isSuccess\n}","import {\n\t_original, _validate, checkAssertions, checkDefinition, extendDefinition, extendModel,\n\tformat, formatDefinition, initModel, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { extend, isFunction, proxifyModel, setConstructor } from \"./helpers.js\"\n\n\nexport default function FunctionModel(...argsDef) {\n\n\tlet model = function (fn = model.default) {\n\t\tif (!model.validate(fn)) return\n\t\treturn proxifyModel(fn, model, {\n\t\t\tget(fn, key) {\n\t\t\t\treturn key === _original ? fn : fn[key]\n\t\t\t},\n\n\t\t\tapply(fn, ctx, args) {\n\t\t\t\tlet def = model.definition\n\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\n\t\t\t\t})\n\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\n\n\t\t\t\tlet result\n\t\t\t\tif (!model.errors.length) {\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\n\t\t\t\t\tif (\"return\" in def)\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\n\t\t\t\t}\n\t\t\t\tunstackErrors(model)\n\t\t\t\treturn result\n\t\t\t}\n\t\t});\n\t}\n\n\textend(model, Function)\n\tsetConstructor(model, FunctionModel)\n\tinitModel(model, { arguments: argsDef })\n\n\treturn model\n}\n\nextend(FunctionModel, Model, {\n\ttoString(stack = []) {\n\t\tlet out = `Function(${this.definition.arguments.map(\n\t\t\targDef => formatDefinition(argDef, [...stack])\n\t\t).join(\", \")})`\n\n\t\tif (\"return\" in this.definition) {\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\n\t\t}\n\t\treturn out\n\t},\n\n\treturn(def) {\n\t\tthis.definition.return = def\n\t\treturn this\n\t},\n\n\textend(newArgs, newReturns) {\n\t\tlet args = this.definition.arguments,\n\t\t\tmixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\n\t\t\tmixedReturns = extendDefinition(this.definition.return, newReturns)\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\n\t},\n\n\t[_validate](f, path, errors) {\n\t\tif (!isFunction(f)) stackError(errors, \"Function\", f, path)\n\t}\n})\n\nFunctionModel.prototype.assert(function numberOfArgs(args) {\n\treturn (args.length > this.definition.arguments.length) ? args : true\n}, function (args) {\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\n})","import {\n\t_validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel,\n\tformat, formatDefinition, Model, stackError\n} from \"./object-model.js\";\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function MapModel(initialKeyDefinition, initialValueDefinition) {\n\tlet castKeyValue = ([k, v]) => [cast(k, model.definition.key), cast(v, model.definition.value)]\n\tlet model = initListModel(\n\t\tMap,\n\t\tMapModel,\n\t\t{ key: initialKeyDefinition, value: initialValueDefinition },\n\t\tit => isIterable(it) ? new Map([...it].map(castKeyValue)) : it,\n\t\tmap => new Map(map),\n\t\t{\n\t\t\t\"set\": castKeyValue,\n\t\t\t\"delete\": 0,\n\t\t\t\"clear\": 0\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(MapModel, Model, {\n\ttoString(stack) {\n\t\tlet { key, value } = this.definition\n\t\treturn `Map of ${formatDefinition(key, stack)} : ${formatDefinition(value, stack)}`\n\t},\n\n\t[_validate](map, path, errors, stack) {\n\t\tif (is(Map, map)) {\n\t\t\tpath = path || 'Map'\n\t\t\tfor (let [key, value] of map) {\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, map, path)\n\n\t\tcheckAssertions(map, this, path, errors)\n\t},\n\n\textend(keyParts, valueParts) {\n\t\tlet { key, value } = this.definition\n\t\treturn extendModel(new MapModel(\n\t\t\textendDefinition(key, keyParts),\n\t\t\textendDefinition(value, valueParts)\n\t\t), this)\n\t}\n})","import { _validate, cast, checkAssertions, checkDefinition, extendDefinition, extendModel, formatDefinition, Model, stackError } from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function SetModel(initialDefinition) {\n\tlet model = initListModel(\n\t\tSet,\n\t\tSetModel,\n\t\tinitialDefinition,\n\t\tit => isIterable(it) ? new Set([...it].map(val => cast(val, model.definition))) : it,\n\t\tset => new Set(set),\n\t\t{\n\t\t\t\"add\": ([val]) => [cast(val, model.definition)],\n\t\t\t\"delete\": 0,\n\t\t\t\"clear\": 0\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(SetModel, Model, {\n\ttoString(stack) {\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](set, path, errors, stack) {\n\t\tif (is(Set, set)) {\n\t\t\tfor (let item of set.values()) {\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, set, path)\n\t\tcheckAssertions(set, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})"],"names":["getProto","Object","getPrototypeOf","setProto","setPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isFunction","f","isObject","isPlainObject","prototype","isIterable","x","Symbol","iterator","proxifyFn","fn","apply","Proxy","proxifyModel","val","model","traps","assign","merge","target","src","key","define","value","enumerable","defineProperty","writable","configurable","setConstructor","constructor","extend","child","parent","props","create","_constructor","_validate","_original","_get","initModel","def","definition","assertions","name","extendModel","newProps","push","stackError","errors","expected","received","path","message","unstackErrors","errorCollector","nbErrors","length","map","err","concat","d","format","join","toString","call","match","bettertypeof","isModelInstance","i","Model","parseDefinition","keys","Array","isArray","undefined","formatDefinition","stack","parts","extendDefinition","newParts","reduce","ext","filter","index","self","indexOf","checkDefinition","shouldCast","indexFound","cast","formatPath","some","part","checkDefinitionPart","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","slice","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","isInDefinition","sealed","rejectUndeclaredProp","msg","defNode","BasicModel","suitableModels","console","warn","checkUndeclaredProps","subpath","getProxy","grantTemporaryPrivateAccess","ctx","args","Reflect","[object Object]","get","defPart","set","deleteProperty","ownKeys","descriptor","params","ObjectModel","default","validate","this","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","p","proto","newAssertions","submodel","parentInstance","initListModel","base","init","clone","mutators","otherTraps","list","l","testingClone","ArrayModel","initialDefinition","castAll","arg","a","copyWithin","fill","rest","pop","reverse","shift","sort","splice","start","end","vals","arr","setArrayKey","forEach","array","parseInt","testArray","isSuccess","FunctionModel","argsDef","arguments","argDef","return","Function","MapModel","initialKeyDefinition","initialValueDefinition","castKeyValue","k","v","it","delete","clear","SetModel","add","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","keyParts","valueParts","values"],"mappings":"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"}