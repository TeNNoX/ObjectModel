{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/list-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\n\tgetProto = Object.getPrototypeOf,\n\tsetProto = Object.setPrototypeOf,\n\n\thas = (o, prop) => o.hasOwnProperty(prop),\n\tis = (Constructor, obj) => obj instanceof Constructor,\n\tisFunction = f => typeof f === \"function\",\n\tisObject = o => o && typeof o === \"object\",\n\tisPlainObject = o => isObject(o) && getProto(o) === Object.prototype,\n\tisIterable = x => x && isFunction(x[Symbol.iterator]),\n\n\tproxify = (val, traps) => new Proxy(val, traps),\n\n\tmerge = (target, src = {}) => {\n\t\tfor (let key in src) {\n\t\t\tif (isPlainObject(src[key])) {\n\t\t\t\tlet o = {}\n\t\t\t\tmerge(o, target[key])\n\t\t\t\tmerge(o, src[key])\n\t\t\t\ttarget[key] = o\n\t\t\t} else {\n\t\t\t\ttarget[key] = src[key]\n\t\t\t}\n\t\t}\n\t\treturn target\n\t},\n\n\tdefine = (obj, key, value, enumerable = false) => {\n\t\tObject.defineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\n\t},\n\n\textend = (child, parent, props) => {\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\n\t\t\tconstructor: {\n\t\t\t\tvalue: child,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t}\n\t\t}), props)\n\t\tsetProto(child, parent)\n\t}","import {\n\tbettertypeof, define, extend, getProto, has, is, isFunction, isObject, isPlainObject,\n\tmerge, proxify, setProto\n} from \"./helpers.js\"\n\nexport const\n\t_check = Symbol(),\n\t_checked = Symbol(), // used to skip validation at instanciation for perf\n\t_original = Symbol(), // used to bypass proxy\n\n\tinitModel = (def, constructor, parent, init, getTraps, useNew) => {\n\t\tlet model = function (val = model.default, mode) {\n\t\t\tif (useNew && !is(model, this)) return new model(val)\n\t\t\tif (init) val = init(val, model, this)\n\n\t\t\tif (mode === _checked || check(model, val))\n\t\t\t\treturn getTraps ? proxify(val, getTraps(model)) : val\n\t\t}\n\n\t\tif (parent) extend(model, parent)\n\t\tsetProto(model, constructor.prototype)\n\t\tmodel.constructor = constructor\n\t\tmodel.definition = def\n\t\tmodel.assertions = [...model.assertions]\n\t\tdefine(model, \"errors\", [])\n\t\tdelete model.name\n\t\treturn model\n\t},\n\n\tinitObjectModel = (obj, model, _this) => {\n\t\tif (is(model, obj)) return obj\n\n\t\tif (!isObject(obj) && !isFunction(obj) && obj !== undefined) {\n\t\t\tstackError(model.errors, Object, obj)\n\t\t}\n\n\t\tmerge(_this, model.default)\n\t\tif (model.parentClass) merge(obj, new model.parentClass(obj))\n\t\tmerge(_this, obj)\n\t\treturn _this\n\t},\n\n\textendModel = (child, parent, newProps) => {\n\t\textend(child, parent, newProps)\n\t\tchild.assertions.push(...parent.assertions)\n\t\treturn child\n\t},\n\n\tstackError = (errors, expected, received, path, message) => {\n\t\terrors.push({ expected, received, path, message })\n\t},\n\n\tunstackErrors = (model, collector = model.errorCollector) => {\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors > 0) {\n\t\t\tlet errors = model.errors.map(err => {\n\t\t\t\tif (!err.message) {\n\t\t\t\t\tlet def = [].concat(err.expected)\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\n\t\t\t\t}\n\t\t\t\treturn err\n\t\t\t})\n\n\t\t\tmodel.errors.length = 0\n\t\t\tcollector.call(model, errors) // throw all errors collected\n\t\t}\n\t\treturn nbErrors\n\t},\n\n\tisModelInstance = i => i && getProto(i) && is(Model, getProto(i).constructor),\n\n\tparseDefinition = (def) => {\n\t\tif (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => { def[key] = parseDefinition(def[key]) })\n\t\t}\n\t\telse if (!Array.isArray(def)) return [def]\n\t\telse if (def.length === 1) return [...def, undefined, null]\n\n\t\treturn def\n\t},\n\n\tformatDefinition = (def, stack) => {\n\t\tlet parts = parseDefinition(def).map(d => format(d, stack))\n\t\treturn parts.length > 1 ? `(${parts.join(\" or \")})` : parts[0]\n\t},\n\n\textendDefinition = (def, newParts = []) => {\n\t\tnewParts = [].concat(newParts)\n\t\tif (newParts.length > 0) {\n\t\t\tdef = newParts\n\t\t\t\t.reduce((def, ext) => def.concat(ext), [].concat(def)) // clone to lose ref\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\n\t\t}\n\n\t\treturn def\n\t},\n\n\tcheck = (model, obj) => {\n\t\tmodel[_check](obj, null, model.errors, [], true);\n\t\treturn !unstackErrors(model)\n\t},\n\n\tcheckDefinition = (obj, def, path, errors, stack, shouldCast) => {\n\t\tlet indexFound = stack.indexOf(def)\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\n\t\t\treturn obj // if found twice in call stack, cycle detected, skip validation\n\n\t\tif (is(Model, def)) {\n\t\t\tif (shouldCast) obj = cast(obj, def)\n\t\t\tdef[_check](obj, path, errors, stack.concat(def))\n\t\t}\n\t\telse if (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => {\n\t\t\t\tlet val = obj ? obj[key] : undefined\n\t\t\t\tcheckDefinition(val, def[key], formatPath(path, key), errors, stack, shouldCast)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tlet pdef = parseDefinition(def)\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack))) {\n\t\t\t\treturn shouldCast ? cast(obj, def) : obj\n\t\t\t}\n\n\t\t\tstackError(errors, def, obj, path)\n\t\t}\n\n\t\treturn obj\n\t},\n\n\tcheckDefinitionPart = (obj, def, path, stack, shouldCast) => {\n\t\tif (def === Any) return true\n\t\tif (obj == null) return obj === def\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\n\t\t\tlet errors = []\n\t\t\tcheckDefinition(obj, def, path, errors, stack, shouldCast)\n\t\t\treturn !errors.length\n\t\t}\n\t\tif (is(RegExp, def)) return def.test(obj)\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\n\t\treturn obj === def\n\t\t\t|| (isFunction(def) && is(def, obj))\n\t\t\t|| obj.constructor === def\n\t},\n\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\n\t\tfor (let assertion of model.assertions) {\n\t\t\tlet result\n\t\t\ttry {\n\t\t\t\tresult = assertion.call(model, obj)\n\t\t\t} catch (err) {\n\t\t\t\tresult = err\n\t\t\t}\n\t\t\tif (result !== true) {\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\n\t\t\t\t\t+ `for ${path ? path + \" =\" : \"value\"} ${format(value)}`\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\n\t\t\t}\n\t\t}\n\t},\n\n\tformat = (obj, stack = []) => {\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\n\t\tif (obj === null || obj === undefined) return String(obj)\n\t\tif (typeof obj === \"string\") return `\"${obj}\"`\n\t\tif (is(Model, obj)) return obj.toString(stack)\n\n\t\tstack.unshift(obj)\n\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\n\t\tif (Array.isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\n\t\tif (isObject(obj)) {\n\t\t\tlet props = Object.keys(obj),\n\t\t\t\tindent = '\\t'.repeat(stack.length)\n\t\t\treturn `{${props.map(\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], [...stack])}`\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\n\t\t}\n\n\t\treturn String(obj)\n\t},\n\n\tformatPath = (path, key) => path ? path + '.' + key : key,\n\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\n\t\tlet newPath = formatPath(path, key),\n\t\t\tisPrivate = model.conventionForPrivate(key),\n\t\t\tisConstant = model.conventionForConstant(key),\n\t\t\tisOwnProperty = has(o, key),\n\t\t\tinitialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\n\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\n\n\t\tapplyMutation(newPath)\n\t\tif (has(def, key)) checkDefinition(o[key], def[key], newPath, model.errors, [])\n\t\tcheckAssertions(o, model, newPath)\n\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors) {\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\n\n\t\t\tunstackErrors(model)\n\t\t}\n\n\t\treturn !nbErrors\n\t},\n\n\tcannot = (msg, model) => {\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\n\t},\n\n\tcast = (obj, defNode = []) => {\n\t\tif (!obj || isPlainObject(defNode) || is(BasicModel, defNode) || isModelInstance(obj))\n\t\t\treturn obj // no value or not leaf or already a model instance\n\n\t\tlet def = parseDefinition(defNode),\n\t\t\tsuitableModels = []\n\n\t\tfor (let part of def) {\n\t\t\tif (is(Model, part) && !is(BasicModel, part) && part.test(obj))\n\t\t\t\tsuitableModels.push(part)\n\t\t}\n\n\t\tif (suitableModels.length === 1) {\n\t\t\t// automatically cast to suitable model when explicit (autocasting)\n\t\t\treturn new suitableModels[0](obj, _checked)\n\t\t}\n\n\t\tif (suitableModels.length > 1)\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\n\n\t\treturn obj\n\t},\n\n\n\tgetProp = (val, model, def, path, privateAccess) => {\n\t\tif (!isPlainObject(def)) return cast(val, def)\n\t\treturn proxify(val, getTraps(model, def, path, privateAccess))\n\t},\n\n\tgetTraps = (model, def, path, privateAccess) => {\n\t\tconst grantPrivateAccess = f => proxify(f, {\n\t\t\tapply(fn, ctx, args) {\n\t\t\t\tprivateAccess = true\n\t\t\t\tlet result = Reflect.apply(fn, ctx, args)\n\t\t\t\tprivateAccess = false\n\t\t\t\treturn result\n\t\t\t}\n\t\t})\n\n\t\treturn {\n\t\t\tgetPrototypeOf: obj => path ? Object.prototype : getProto(obj),\n\n\t\t\tget(o, key) {\n\t\t\t\tif (key === _original) return o\n\n\t\t\t\tif (typeof key !== \"string\") return Reflect.get(o, key)\n\n\t\t\t\tlet newPath = formatPath(path, key),\n\t\t\t\t\tdefPart = def[key]\n\n\t\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\n\t\t\t\t\tcannot(`access to private property ${newPath}`, model)\n\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\n\t\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(o[key]) && key !== \"constructor\" && !privateAccess) {\n\t\t\t\t\treturn grantPrivateAccess(o[key])\n\t\t\t\t}\n\n\t\t\t\tif (isPlainObject(defPart) && !o[key]) {\n\t\t\t\t\to[key] = {} // null-safe traversal\n\t\t\t\t}\n\n\t\t\t\treturn getProp(o[key], model, defPart, newPath, privateAccess)\n\t\t\t},\n\n\t\t\tset(o, key, val) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\n\t\t\t\t\tnewPath => Reflect.set(o, key, getProp(val, model, def[key], newPath))\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tdeleteProperty(o, key) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\n\t\t\t},\n\n\t\t\tdefineProperty(o, key, args) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\n\t\t\t},\n\n\t\t\thas(o, key) {\n\t\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\n\t\t\t},\n\n\t\t\townKeys(o) {\n\t\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\n\t\t\t},\n\n\t\t\tgetOwnPropertyDescriptor(o, key) {\n\t\t\t\tlet descriptor\n\t\t\t\tif (!model.conventionForPrivate(key)) {\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key)\n\t\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key]\n\t\t\t\t}\n\n\t\t\t\treturn descriptor\n\t\t\t}\n\t\t}\n\t}\n\n\nexport function Model(def, params) {\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\n}\n\nObject.assign(Model.prototype, {\n\tname: \"Model\",\n\tassertions: [],\n\n\tconventionForConstant: key => key.toUpperCase() === key,\n\tconventionForPrivate: key => key[0] === \"_\",\n\n\ttoString(stack) {\n\t\treturn formatDefinition(this.definition, stack)\n\t},\n\n\tas(name) {\n\t\tdefine(this, \"name\", name)\n\t\treturn this\n\t},\n\n\tdefaultTo(val) {\n\t\tthis.default = val\n\t\treturn this\n\t},\n\n\t[_check](obj, path, errors, stack) {\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\n\t\tcheckAssertions(obj, this, path, errors)\n\t},\n\n\ttest(obj, errorCollector) {\n\t\tlet model = this\n\t\twhile (!has(model, \"errorCollector\")) {\n\t\t\tmodel = getProto(model)\n\t\t}\n\n\t\tlet initialErrorCollector = model.errorCollector,\n\t\t\tfailed\n\n\t\tmodel.errorCollector = errors => {\n\t\t\tfailed = true\n\t\t\tif (errorCollector) errorCollector.call(this, errors)\n\t\t}\n\n\t\tnew this(obj) // may trigger errorCollector\n\n\t\tmodel.errorCollector = initialErrorCollector\n\t\treturn !failed\n\t},\n\n\terrorCollector(errors) {\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\n\t\tthrow e\n\t},\n\n\tassert(assertion, description = format(assertion)) {\n\t\tdefine(assertion, \"description\", description)\n\t\tthis.assertions = this.assertions.concat(assertion)\n\t\treturn this\n\t}\n})\n\n\nexport function BasicModel(def) {\n\treturn initModel(def, BasicModel)\n}\n\nextend(BasicModel, Model, {\n\textend(...newParts) {\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\n\t\tfor (let part of newParts) {\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\n\t\t}\n\n\t\treturn child\n\t}\n})\n\nexport function ObjectModel(def) {\n\treturn initModel(def, ObjectModel, Object, initObjectModel, model => getTraps(model, def), true)\n}\n\nextend(ObjectModel, Model, {\n\tdefaultTo(obj) {\n\t\tlet def = this.definition\n\t\tfor (let key in obj) {\n\t\t\tif (has(def, key)) {\n\t\t\t\tobj[key] = checkDefinition(obj[key], def[key], key, this.errors, [], true)\n\t\t\t}\n\t\t}\n\t\tunstackErrors(this)\n\t\tthis.default = obj;\n\t\treturn this\n\t},\n\n\ttoString(stack) {\n\t\treturn format(this.definition, stack)\n\t},\n\n\textend(...newParts) {\n\t\tlet definition = { ...this.definition },\n\t\t\tproto = { ...this.prototype },\n\t\t\tdefaults = { ...this.default },\n\t\t\tnewAssertions = []\n\n\t\tfor (let part of newParts) {\n\t\t\tif (is(Model, part)) {\n\t\t\t\tmerge(definition, part.definition)\n\t\t\t\tmerge(defaults, part.default)\n\t\t\t\tnewAssertions.push(...part.assertions)\n\t\t\t}\n\t\t\tif (isFunction(part)) merge(proto, part.prototype)\n\t\t\tif (isObject(part)) merge(definition, part)\n\t\t}\n\n\t\tlet submodel = extendModel(new ObjectModel(definition), this, proto).defaultTo(defaults)\n\t\tsubmodel.assertions = [...this.assertions, ...newAssertions]\n\n\t\tif (getProto(this) !== ObjectModel.prototype) { // extended class\n\t\t\tsubmodel.parentClass = this\n\t\t}\n\n\t\treturn submodel\n\t},\n\n\t[_check](obj, path, errors, stack, shouldCast) {\n\t\tif (isObject(obj)) {\n\t\t\tlet def = this.definition\n\t\t\tcheckDefinition(obj[_original] || obj, def, path, errors, stack, shouldCast)\n\t\t}\n\t\telse stackError(errors, this, obj, path)\n\n\t\tcheckAssertions(obj, this, path, errors)\n\t}\n})\n\nexport const Any = proxify(BasicModel(), {\n\tapply(target, ctx, [def]) {\n\t\treturn Object.assign(Object.create(Any), { definition: def })\n\t}\n})\nAny.definition = Any\nAny.toString = () => \"Any\"\n\nAny.remaining = function (def) { this.definition = def }\nextend(Any.remaining, Any, {\n\ttoString() { return \"...\" + formatDefinition(this.definition) }\n})\nAny[Symbol.iterator] = function* () { yield new Any.remaining(this.definition) }","\nimport { _original, checkAssertions, checkDefinition, initModel, unstackErrors } from \"./object-model.js\"\nimport { has, isFunction, proxify } from \"./helpers.js\"\n\nexport const initListModel = (base, constructor, def, init, clone, mutators, otherTraps) => {\n\n\treturn initModel(def, constructor, base, init, model => Object.assign({\n\t\tgetPrototypeOf: () => model.prototype,\n\t\tget(l, key) {\n\t\t\tif (key === _original) return l\n\n\t\t\tlet val = l[key]\n\t\t\treturn isFunction(val) ? proxify(val, {\n\t\t\t\tapply(fn, ctx, args) {\n\t\t\t\t\tif (has(mutators, key)) {\n\t\t\t\t\t\t// indexes of arguments to check def + cast\n\t\t\t\t\t\tlet [begin, end = args.length - 1, getArgDef] = mutators[key]\n\t\t\t\t\t\tfor (let i = begin; i <= end; i++) {\n\t\t\t\t\t\t\tlet argDef = getArgDef ? getArgDef(i) : model.definition\n\t\t\t\t\t\t\targs[i] = checkDefinition(\n\t\t\t\t\t\t\t\targs[i],\n\t\t\t\t\t\t\t\targDef,\n\t\t\t\t\t\t\t\t`${base.name}.${key} arguments[${i}]`,\n\t\t\t\t\t\t\t\tmodel.errors,\n\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (model.assertions.length > 0) {\n\t\t\t\t\t\t\tlet testingClone = clone(l)\n\t\t\t\t\t\t\tfn.apply(testingClone, args)\n\t\t\t\t\t\t\tcheckAssertions(testingClone, model, `after ${key} mutation`)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn fn.apply(l, args)\n\t\t\t\t}\n\t\t\t}) : val\n\t\t}\n\t}, otherTraps))\n}","import {\n\t_original, _check, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, formatDefinition, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend } from \"./helpers.js\"\n\nexport default function ArrayModel(initialDefinition) {\n\tlet model = initListModel(\n\t\tArray,\n\t\tArrayModel,\n\t\tinitialDefinition,\n\t\ta => Array.isArray(a) ? a.map(arg => cast(arg, model.definition)) : a,\n\t\ta => [...a],\n\t\t{\n\t\t\t\"copyWithin\": [],\n\t\t\t\"fill\": [0, 0],\n\t\t\t\"pop\": [],\n\t\t\t\"push\": [0],\n\t\t\t\"reverse\": [],\n\t\t\t\"shift\": [],\n\t\t\t\"sort\": [],\n\t\t\t\"splice\": [2],\n\t\t\t\"unshift\": [0]\n\t\t},\n\t\t{\n\t\t\tset(arr, key, val) {\n\t\t\t\treturn controlMutation(model, arr, key, val, (a, v) => a[key] = v, true)\n\t\t\t},\n\n\t\t\tdeleteProperty(arr, key) {\n\t\t\t\treturn controlMutation(model, arr, key, undefined, a => delete a[key])\n\t\t\t}\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(ArrayModel, Model, {\n\ttoString(stack) {\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\n\t},\n\n\t[_check](arr, path, errors, stack) {\n\t\tif (Array.isArray(arr))\n\t\t\t(arr[_original] || arr).forEach((a, i) => checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack))\n\t\telse stackError(errors, this, arr, path)\n\n\t\tcheckAssertions(arr, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})\n\nlet controlMutation = (model, array, key, value, applyMutation, canBeExtended) => {\n\tlet path = `Array[${key}]`\n\tlet isInDef = (+key >= 0 && (canBeExtended || key in array))\n\tif (isInDef) value = checkDefinition(value, model.definition, path, model.errors, [], true)\n\n\tlet testArray = [...array]\n\tapplyMutation(testArray)\n\tcheckAssertions(testArray, model, path)\n\tlet isSuccess = !unstackErrors(model)\n\tif (isSuccess) applyMutation(array, value)\n\treturn isSuccess\n}","import {\n\t_check, _original, Any, checkAssertions, checkDefinition, extendDefinition, extendModel,\n\tformat, formatDefinition, initModel, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { extend, is, isFunction } from \"./helpers.js\"\n\nexport default function FunctionModel(...argsDef) {\n\treturn initModel({ arguments: argsDef }, FunctionModel, Function, null, model => ({\n\t\tgetPrototypeOf: () => model.prototype,\n\n\t\tget(fn, key) {\n\t\t\treturn key === _original ? fn : fn[key]\n\t\t},\n\n\t\tapply(fn, ctx, args) {\n\t\t\tlet def = model.definition,\n\t\t\t\tremainingArgDef = def.arguments.find(argDef => is(Any.remaining, argDef)),\n\t\t\t\tnbArgsToCheck = remainingArgDef ? Math.max(args.length, def.arguments.length - 1) : def.arguments.length\n\n\t\t\tfor (let i = 0; i < nbArgsToCheck; i++) {\n\t\t\t\tlet argDef = remainingArgDef && i >= def.arguments.length - 1 ? remainingArgDef.definition : def.arguments[i]\n\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\n\t\t\t}\n\n\t\t\tcheckAssertions(args, model, \"arguments\")\n\n\t\t\tlet result\n\t\t\tif (!model.errors.length) {\n\t\t\t\tresult = Reflect.apply(fn, ctx, args)\n\t\t\t\tif (\"return\" in def)\n\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\n\t\t\t}\n\t\t\tunstackErrors(model)\n\t\t\treturn result\n\t\t}\n\t}))\n}\n\nextend(FunctionModel, Model, {\n\ttoString(stack = []) {\n\t\tlet out = `Function(${this.definition.arguments.map(\n\t\t\targDef => formatDefinition(argDef, [...stack])\n\t\t).join(\", \")})`\n\n\t\tif (\"return\" in this.definition) {\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\n\t\t}\n\t\treturn out\n\t},\n\n\treturn(def) {\n\t\tthis.definition.return = def\n\t\treturn this\n\t},\n\n\textend(newArgs, newReturns) {\n\t\tlet args = this.definition.arguments,\n\t\t\tmixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\n\t\t\tmixedReturns = extendDefinition(this.definition.return, newReturns)\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\n\t},\n\n\t[_check](f, path, errors) {\n\t\tif (!isFunction(f)) stackError(errors, \"Function\", f, path)\n\t}\n})\n\nFunctionModel.prototype.assert(function numberOfArgs(args) {\n\tlet argsDef = this.definition.arguments;\n\treturn (args.length > argsDef.length && !argsDef.some(argDef => is(Any.remaining, argDef))) ? args : true\n}, function (args) {\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\n})","import {\n\t_check, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, format, formatDefinition, Model, stackError\n} from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function MapModel(initialKeyDefinition, initialValueDefinition) {\n\tlet getDef = i => i === 0 ? model.definition.key : model.definition.value,\n\t\tmodel = initListModel(\n\t\t\tMap,\n\t\t\tMapModel,\n\t\t\t{ key: initialKeyDefinition, value: initialValueDefinition },\n\t\t\tit => isIterable(it) ? new Map([...it].map(pair => pair.map((x, i) => cast(x, getDef(i))))) : it,\n\t\t\tmap => new Map(map),\n\t\t\t{\n\t\t\t\t\"set\": [0, 1, getDef],\n\t\t\t\t\"delete\": [],\n\t\t\t\t\"clear\": []\n\t\t\t}\n\t\t)\n\n\treturn model\n}\n\nextend(MapModel, Model, {\n\ttoString(stack) {\n\t\treturn `Map of ${formatDefinition(this.definition.key, stack)} : ${formatDefinition(this.definition.value, stack)}`\n\t},\n\n\t[_check](map, path, errors, stack) {\n\t\tif (is(Map, map)) {\n\t\t\tpath = path || 'Map'\n\t\t\tfor (let [key, value] of map) {\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, map, path)\n\n\t\tcheckAssertions(map, this, path, errors)\n\t},\n\n\textend(keyParts, valueParts) {\n\t\treturn extendModel(new MapModel(\n\t\t\textendDefinition(this.definition.key, keyParts),\n\t\t\textendDefinition(this.definition.value, valueParts)\n\t\t), this)\n\t}\n})","import {\n\t_check, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, formatDefinition, Model, stackError\n} from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function SetModel(initialDefinition) {\n\tlet model = initListModel(\n\t\tSet,\n\t\tSetModel,\n\t\tinitialDefinition,\n\t\tit => isIterable(it) ? new Set([...it].map(val => cast(val, model.definition))) : it,\n\t\tset => new Set(set),\n\t\t{\n\t\t\t\"add\": [0, 0],\n\t\t\t\"delete\": [],\n\t\t\t\"clear\": []\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(SetModel, Model, {\n\ttoString(stack) {\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\n\t},\n\n\t[_check](set, path, errors, stack) {\n\t\tif (is(Set, set)) {\n\t\t\tfor (let item of set.values()) {\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, set, path)\n\t\tcheckAssertions(set, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})"],"names":["getProto","Object","getPrototypeOf","setProto","setPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isFunction","f","isObject","isPlainObject","prototype","isIterable","x","Symbol","iterator","proxify","val","traps","Proxy","merge","target","src","key","define","value","enumerable","defineProperty","writable","configurable","extend","child","parent","props","assign","create","constructor","_check","_checked","_original","initModel","def","init","getTraps","useNew","model","default","mode","this","check","definition","assertions","name","initObjectModel","_this","undefined","stackError","errors","parentClass","extendModel","newProps","push","expected","received","path","message","unstackErrors","collector","errorCollector","nbErrors","length","map","err","concat","d","format","join","toString","call","match","bettertypeof","isModelInstance","i","Model","parseDefinition","keys","Array","isArray","formatDefinition","stack","parts","extendDefinition","newParts","reduce","ext","filter","index","self","indexOf","checkDefinition","shouldCast","indexFound","cast","formatPath","some","part","checkDefinitionPart","Any","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","slice","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","msg","defNode","BasicModel","suitableModels","console","warn","getProp","[object Object]","Reflect","get","defPart","fn","ctx","args","apply","grantPrivateAccess","set","deleteProperty","ownKeys","descriptor","params","ObjectModel","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","proto","defaults","newAssertions","submodel","defaultTo","remaining","initListModel","base","clone","mutators","otherTraps","l","begin","end","getArgDef","argDef","testingClone","ArrayModel","initialDefinition","a","arg","copyWithin","fill","pop","reverse","shift","sort","splice","arr","v","forEach","array","canBeExtended","testArray","isSuccess","FunctionModel","argsDef","arguments","Function","remainingArgDef","find","nbArgsToCheck","Math","max","return","MapModel","initialKeyDefinition","initialValueDefinition","getDef","it","pair","delete","clear","SetModel","add","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","keyParts","valueParts","values"],"mappings":"6MAAO,MAENA,EAAWC,OAAOC,eAClBC,EAAWF,OAAOG,eAElBC,EAAM,CAACC,EAAGC,IAASD,EAAEE,eAAeD,GACpCE,EAAK,CAACC,EAAaC,IAAQA,aAAeD,EAC1CE,EAAaC,GAAkB,mBAANA,EACzBC,EAAWR,GAAKA,GAAkB,iBAANA,EAC5BS,EAAgBT,GAAKQ,EAASR,IAAMN,EAASM,KAAOL,OAAOe,UAC3DC,EAAaC,GAAKA,GAAKN,EAAWM,EAAEC,OAAOC,WAE3CC,EAAU,CAACC,EAAKC,IAAU,IAAIC,MAAMF,EAAKC,GAEzCE,EAAQ,CAACC,EAAQC,EAAM,MACtB,IAAK,IAAIC,KAAOD,EACf,GAAIZ,EAAcY,EAAIC,IAAO,CAC5B,IAAItB,EAAI,GACRmB,EAAMnB,EAAGoB,EAAOE,IAChBH,EAAMnB,EAAGqB,EAAIC,IACbF,EAAOE,GAAOtB,OAEdoB,EAAOE,GAAOD,EAAIC,GAGpB,OAAOF,GAGRG,EAAS,CAAClB,EAAKiB,EAAKE,EAAOC,GAAa,KACvC9B,OAAO+B,eAAerB,EAAKiB,EAAK,CAAEE,MAAAA,EAAOC,WAAAA,EAAYE,UAAU,EAAMC,cAAc,KAGpFC,EAAS,CAACC,EAAOC,EAAQC,KACxBF,EAAMpB,UAAYf,OAAOsC,OAAOtC,OAAOuC,OAAOH,EAAOrB,UAAW,CAC/DyB,YAAa,CACZX,MAAOM,EACPH,UAAU,EACVC,cAAc,KAEZI,GACJnC,EAASiC,EAAOC,IClCjBK,EAASvB,SACTwB,EAAWxB,SACXyB,EAAYzB,SAEZ0B,EAAY,CAACC,EAAKL,EAAaJ,EAAQU,EAAMC,EAAUC,KACtD,IAAIC,EAAQ,SAAU5B,EAAM4B,EAAMC,QAASC,GAC1C,OAAIH,IAAWxC,EAAGyC,EAAOG,MAAc,IAAIH,EAAM5B,IAC7CyB,IAAMzB,EAAMyB,EAAKzB,EAAK4B,EAAOG,OAE7BD,IAAST,GAAYW,EAAMJ,EAAO5B,GAC9B0B,EAAW3B,EAAQC,EAAK0B,EAASE,IAAU5B,OADnD,IAWD,OAPIe,GAAQF,EAAOe,EAAOb,GAC1BlC,EAAS+C,EAAOT,EAAYzB,WAC5BkC,EAAMT,YAAcA,EACpBS,EAAMK,WAAaT,EACnBI,EAAMM,WAAa,IAAIN,EAAMM,YAC7B3B,EAAOqB,EAAO,SAAU,WACjBA,EAAMO,KACNP,GAGRQ,EAAkB,CAAC/C,EAAKuC,EAAOS,IAC1BlD,EAAGyC,EAAOvC,GAAaA,GAEtBG,EAASH,IAASC,EAAWD,SAAgBiD,IAARjD,GACzCkD,EAAWX,EAAMY,OAAQ7D,OAAQU,GAGlCc,EAAMkC,EAAOT,EAAMC,SACfD,EAAMa,aAAatC,EAAMd,EAAK,IAAIuC,EAAMa,YAAYpD,IACxDc,EAAMkC,EAAOhD,GACNgD,GAGRK,EAAc,CAAC5B,EAAOC,EAAQ4B,KAC7B9B,EAAOC,EAAOC,EAAQ4B,GACtB7B,EAAMoB,WAAWU,QAAQ7B,EAAOmB,YACzBpB,GAGRyB,EAAa,CAACC,EAAQK,EAAUC,EAAUC,EAAMC,KAC/CR,EAAOI,KAAK,CAAEC,SAAAA,EAAUC,SAAAA,EAAUC,KAAAA,EAAMC,QAAAA,KAGzCC,EAAgB,CAACrB,EAAOsB,EAAYtB,EAAMuB,kBACzC,IAAIC,EAAWxB,EAAMY,OAAOa,OAC5B,GAAID,EAAW,EAAG,CACjB,IAAIZ,EAASZ,EAAMY,OAAOc,IAAIC,IAC7B,IAAKA,EAAIP,QAAS,CACjB,IAAIxB,EAAM,GAAGgC,OAAOD,EAAIV,UACxBU,EAAIP,QAAU,cAAgBO,EAAIR,KAAOQ,EAAIR,KAAO,UAAY,IAAMvB,EAAI8B,IAAIG,GAAKC,EAAOD,IAAIE,KAAK,QAChG,UAA4B,MAAhBJ,EAAIT,SD1DRlD,CAAAA,GAAKjB,OAAOe,UAAUkE,SAASC,KAAKjE,GAAGkE,MAAM,iBAAiB,GC0DnCC,CAAaR,EAAIT,UAAY,IAAM,IAAMY,EAAOH,EAAIT,UAE3F,OAAOS,IAGR3B,EAAMY,OAAOa,OAAS,EACtBH,EAAUW,KAAKjC,EAAOY,GAEvB,OAAOY,GAGRY,EAAkBC,GAAKA,GAAKvF,EAASuF,IAAM9E,EAAG+E,EAAOxF,EAASuF,GAAG9C,aAEjEgD,EAAmB3C,IAClB,GAAI/B,EAAc+B,GACjB7C,OAAOyF,KAAK5C,GAAK8B,IAAIhD,IAASkB,EAAIlB,GAAO6D,EAAgB3C,EAAIlB,UAEzD,CAAA,IAAK+D,MAAMC,QAAQ9C,GAAM,MAAO,CAACA,GACjC,GAAmB,IAAfA,EAAI6B,OAAc,MAAO,IAAI7B,OAAKc,EAAW,MAEtD,OAAOd,GAGR+C,EAAmB,CAAC/C,EAAKgD,KACxB,IAAIC,EAAQN,EAAgB3C,GAAK8B,IAAIG,GAAKC,EAAOD,EAAGe,IACpD,OAAOC,EAAMpB,OAAS,MAAQoB,EAAMd,KAAK,WAAac,EAAM,IAG7DC,EAAmB,CAAClD,EAAKmD,EAAW,OACnCA,EAAW,GAAGnB,OAAOmB,IACRtB,OAAS,IACrB7B,EAAMmD,EACJC,OAAO,CAACpD,EAAKqD,IAAQrD,EAAIgC,OAAOqB,GAAM,GAAGrB,OAAOhC,IAChDsD,OAAO,CAACtE,EAAOuE,EAAOC,IAASA,EAAKC,QAAQzE,KAAWuE,IAGnDvD,GAGRQ,EAAQ,CAACJ,EAAOvC,KACfuC,EAAMR,GAAQ/B,EAAK,KAAMuC,EAAMY,OAAQ,IAAI,IACnCS,EAAcrB,IAGvBsD,EAAkB,CAAC7F,EAAKmC,EAAKuB,EAAMP,EAAQgC,EAAOW,KACjD,IAAIC,EAAaZ,EAAMS,QAAQzD,GAC/B,IAAoB,IAAhB4D,IAA6D,IAAxCZ,EAAMS,QAAQzD,EAAK4D,EAAa,GACxD,OAAO/F,EAER,GAAIF,EAAG+E,EAAO1C,GACT2D,IAAY9F,EAAMgG,EAAKhG,EAAKmC,IAChCA,EAAIJ,GAAQ/B,EAAK0D,EAAMP,EAAQgC,EAAMhB,OAAOhC,SAExC,GAAI/B,EAAc+B,GACtB7C,OAAOyF,KAAK5C,GAAK8B,IAAIhD,IACpB,IAAIN,EAAMX,EAAMA,EAAIiB,QAAOgC,EAC3B4C,EAAgBlF,EAAKwB,EAAIlB,GAAMgF,EAAWvC,EAAMzC,GAAMkC,EAAQgC,EAAOW,SAGlE,CAEJ,GADWhB,EAAgB3C,GAClB+D,KAAKC,GAAQC,EAAoBpG,EAAKmG,EAAMzC,EAAMyB,IAC1D,OAAOW,EAAaE,EAAKhG,EAAKmC,GAAOnC,EAGtCkD,EAAWC,EAAQhB,EAAKnC,EAAK0D,GAG9B,OAAO1D,GAGRoG,EAAsB,CAACpG,EAAKmC,EAAKuB,EAAMyB,EAAOW,KAC7C,GAAI3D,IAAQkE,EAAK,OAAO,EACxB,GAAW,MAAPrG,EAAa,OAAOA,IAAQmC,EAChC,GAAI/B,EAAc+B,IAAQrC,EAAG+E,EAAO1C,GAAM,CACzC,IAAIgB,EAAS,GAEb,OADA0C,EAAgB7F,EAAKmC,EAAKuB,EAAMP,EAAQgC,EAAOW,IACvC3C,EAAOa,OAEhB,OAAIlE,EAAGwG,OAAQnE,GAAaA,EAAIoE,KAAKvG,GACjCmC,IAAQqE,QAAUrE,IAAQsE,KAAazG,EAAI8B,cAAgBK,IAAQuE,MAAM1G,GACtEA,IAAQmC,GACVlC,EAAWkC,IAAQrC,EAAGqC,EAAKnC,IAC5BA,EAAI8B,cAAgBK,GAGzBwE,EAAkB,CAAC3G,EAAKuC,EAAOmB,EAAMP,EAASZ,EAAMY,UACnD,IAAK,IAAIyD,KAAarE,EAAMM,WAAY,CACvC,IAAIgE,EACJ,IACCA,EAASD,EAAUpC,KAAKjC,EAAOvC,GAC9B,MAAOkE,GACR2C,EAAS3C,EAEV,IAAe,IAAX2C,EAAiB,CACpB,IAAIC,EAAS7G,EAAW2G,EAAUG,aAAeH,EAAUG,YAAc,CAACC,EAAiB7F,kBAC5EyF,EAAUG,yBAAyB1C,EAAO2C,aAC/CtD,EAAOA,EAAO,KAAO,WAAWW,EAAOlD,KACjD+B,EAAWC,EAAQyD,EAAW5G,EAAK0D,EAAMoD,EAAOtC,KAAKjC,EAAOsE,EAAQ7G,EAAK0D,OAK5EW,EAAS,CAACrE,EAAKmF,EAAQ,MACtB,GAAIA,EAAMnB,OAAS,IAAMmB,EAAM8B,SAASjH,GAAM,MAAO,MACrD,GAAIA,MAAAA,EAAmC,OAAOkH,OAAOlH,GACrD,GAAmB,iBAARA,EAAkB,UAAWA,KACxC,GAAIF,EAAG+E,EAAO7E,GAAM,OAAOA,EAAIuE,SAASY,GAIxC,GAFAA,EAAMgC,QAAQnH,GAEVC,EAAWD,GAAM,OAAOA,EAAI8C,MAAQ9C,EAAIuE,WAC5C,GAAIzE,EAAGsH,IAAKpH,IAAQF,EAAGuH,IAAKrH,GAAM,OAAOqE,EAAO,IAAIrE,IACpD,GAAIgF,MAAMC,QAAQjF,GAAM,UAAWA,EAAIiE,IAAIqD,GAAQjD,EAAOiD,EAAMnC,IAAQb,KAAK,SAC7E,GAAItE,EAAIuE,WAAajF,OAAOe,UAAUkE,SAAU,OAAOvE,EAAIuE,WAC3D,GAAIpE,EAASH,GAAM,CAClB,IAAI2B,EAAQrC,OAAOyF,KAAK/E,GACvBuH,EAAS,KAAKC,OAAOrC,EAAMnB,QAC5B,UAAWrC,EAAMsC,IAChBhD,QAAYsG,EAAStG,MAAQoD,EAAOrE,EAAIiB,GAAM,IAAIkE,OACjDb,KAAK,QAAQ3C,EAAMqC,YAAcuD,EAAOE,MAAM,KAAO,MAGxD,OAAOP,OAAOlH,IAGfiG,EAAa,CAACvC,EAAMzC,IAAQyC,EAAOA,EAAO,IAAMzC,EAAMA,EAEtDyG,EAAkB,CAACnF,EAAOJ,EAAKuB,EAAM/D,EAAGsB,EAAK0G,EAAeC,KAC3D,IAAIC,EAAU5B,EAAWvC,EAAMzC,GAC9B6G,EAAYvF,EAAMwF,qBAAqB9G,GACvC+G,EAAazF,EAAM0F,sBAAsBhH,GACzCiH,EAAgBxI,EAAIC,EAAGsB,GACvBkH,EAAwBD,GAAiB5I,OAAO8I,yBAAyBzI,EAAGsB,GAEzEA,KAAOkB,IAAS2F,IAAcH,GAAmBK,QAAyB/E,IAAXtD,EAAEsB,KACpEoH,YAAiBP,EAAY,UAAY,uBAAuB7G,IAAOsB,GAExEqF,EAAcC,GACVnI,EAAIyC,EAAKlB,IAAM4E,EAAgBlG,EAAEsB,GAAMkB,EAAIlB,GAAM4G,EAAStF,EAAMY,OAAQ,IAC5EwD,EAAgBhH,EAAG4C,EAAOsF,GAE1B,IAAI9D,EAAWxB,EAAMY,OAAOa,OAQ5B,OAPID,IACCmE,EAAe5I,OAAO+B,eAAe1B,EAAGsB,EAAKkH,UACrCxI,EAAEsB,GAEd2C,EAAcrB,KAGPwB,GAGTsE,EAAS,CAACC,EAAK/F,KACdA,EAAMY,OAAOI,KAAK,CAAEI,QAAS,UAAY2E,KAG1CtC,EAAO,CAAChG,EAAKuI,EAAU,MACtB,IAAKvI,GAAOI,EAAcmI,IAAYzI,EAAG0I,EAAYD,IAAY5D,EAAgB3E,GAChF,OAAOA,EAER,IAAImC,EAAM2C,EAAgByD,GACzBE,EAAiB,GAElB,IAAK,IAAItC,KAAQhE,EACZrC,EAAG+E,EAAOsB,KAAUrG,EAAG0I,EAAYrC,IAASA,EAAKI,KAAKvG,IACzDyI,EAAelF,KAAK4C,GAGtB,OAA8B,IAA1BsC,EAAezE,OAEX,IAAIyE,EAAe,GAAGzI,EAAKgC,IAG/ByG,EAAezE,OAAS,GAC3B0E,QAAQC,kCAAkCtE,EAAOrE,gBAAkByI,EAAenE,KAAK,WAEjFtE,IAIR4I,EAAU,CAACjI,EAAK4B,EAAOJ,EAAKuB,EAAMiE,IAC5BvH,EAAc+B,GACZzB,EAAQC,EAAK0B,EAASE,EAAOJ,EAAKuB,EAAMiE,IADf3B,EAAKrF,EAAKwB,GAI3CE,EAAW,CAACE,EAAOJ,EAAKuB,EAAMiE,KAU7B,MAAO,CACNpI,eAAgBS,GAAO0D,EAAOpE,OAAOe,UAAYhB,EAASW,GAE1D6I,IAAIlJ,EAAGsB,GACN,GAAIA,IAAQgB,EAAW,OAAOtC,EAE9B,GAAmB,iBAARsB,EAAkB,OAAO6H,QAAQC,IAAIpJ,EAAGsB,GAEnD,IAAI4G,EAAU5B,EAAWvC,EAAMzC,GAC9B+H,EAAU7G,EAAIlB,GAEf,OAAK0G,GAAiB1G,KAAOkB,GAAOI,EAAMwF,qBAAqB9G,IAC9DoH,gCAAqCR,IAAWtF,QAChDqB,EAAcrB,KAIX5C,EAAEsB,IAAQvB,EAAIC,EAAGsB,KAASb,EAAc4I,KAAarE,EAAgBhF,EAAEsB,MAC1EtB,EAAEsB,GAAO+E,EAAKrG,EAAEsB,GAAM+H,IAGnB/I,EAAWN,EAAEsB,KAAiB,gBAARA,IAA0B0G,EA9B3BzH,CAAAA,GAAKQ,EAAQR,EAAG,CAC1C2I,MAAMI,EAAIC,EAAKC,GACdxB,GAAgB,EAChB,IAAId,EAASiC,QAAQM,MAAMH,EAAIC,EAAKC,GAEpC,OADAxB,GAAgB,EACTd,KA0BCwC,CAAmB1J,EAAEsB,KAGzBb,EAAc4I,KAAarJ,EAAEsB,KAChCtB,EAAEsB,GAAO,IAGH2H,EAAQjJ,EAAEsB,GAAMsB,EAAOyG,EAASnB,EAASF,MAGjD2B,IAAG,CAAC3J,EAAGsB,EAAKN,IACJ+G,EAAgBnF,EAAOJ,EAAKuB,EAAM/D,EAAGsB,EAAK0G,EAChDE,GAAWiB,QAAQQ,IAAI3J,EAAGsB,EAAK2H,EAAQjI,EAAK4B,EAAOJ,EAAIlB,GAAM4G,KAI/D0B,eAAc,CAAC5J,EAAGsB,IACVyG,EAAgBnF,EAAOJ,EAAKuB,EAAM/D,EAAGsB,EAAK0G,EAAe,IAAMmB,QAAQS,eAAe5J,EAAGsB,IAGjGI,eAAc,CAAC1B,EAAGsB,EAAKkI,IACfzB,EAAgBnF,EAAOJ,EAAKuB,EAAM/D,EAAGsB,EAAK0G,EAAe,IAAMmB,QAAQzH,eAAe1B,EAAGsB,EAAKkI,IAGtGzJ,IAAG,CAACC,EAAGsB,IACC6H,QAAQpJ,IAAIC,EAAGsB,IAAQ6H,QAAQpJ,IAAIyC,EAAKlB,KAASsB,EAAMwF,qBAAqB9G,GAGpFuI,QAAQ7J,GACAmJ,QAAQU,QAAQ7J,GAAG8F,OAAOxE,GAAO6H,QAAQpJ,IAAIyC,EAAKlB,KAASsB,EAAMwF,qBAAqB9G,IAG9F4H,yBAAyBlJ,EAAGsB,GAC3B,IAAIwI,EAMJ,OALKlH,EAAMwF,qBAAqB9G,SAEZgC,KADnBwG,EAAanK,OAAO8I,yBAAyBjG,EAAKlB,MACpBwI,EAAWtI,MAAQxB,EAAEsB,IAG7CwI,KAMJ,SAAS5E,EAAM1C,EAAKuH,GAC1B,OAAOtJ,EAAc+B,GAAO,IAAIwH,EAAYxH,EAAKuH,GAAU,IAAIlB,EAAWrG,GA+DpE,SAASqG,EAAWrG,GAC1B,OAAOD,EAAUC,EAAKqG,GAchB,SAASmB,EAAYxH,GAC3B,OAAOD,EAAUC,EAAKwH,EAAarK,OAAQyD,EAAiBR,GAASF,EAASE,EAAOJ,IAAM,GA5E5F7C,OAAOsC,OAAOiD,EAAMxE,UAAW,CAC9ByC,KAAM,QACND,WAAY,GAEZoF,sBAAuBhH,GAAOA,EAAI2I,gBAAkB3I,EACpD8G,qBAAsB9G,GAAkB,MAAXA,EAAI,GAEjC4H,SAAS1D,GACR,OAAOD,EAAiBxC,KAAKE,WAAYuC,IAG1C0D,GAAG/F,GAEF,OADA5B,EAAOwB,KAAM,OAAQI,GACdJ,MAGRmG,UAAUlI,GAET,OADA+B,KAAKF,QAAU7B,EACR+B,MAGRmG,CAAC9G,GAAQ/B,EAAK0D,EAAMP,EAAQgC,GAC3BU,EAAgB7F,EAAK0C,KAAKE,WAAYc,EAAMP,EAAQgC,GACpDwB,EAAgB3G,EAAK0C,KAAMgB,EAAMP,IAGlC0F,KAAK7I,EAAK8D,GACT,IAAIvB,EAAQG,KACZ,MAAQhD,EAAI6C,EAAO,mBAClBA,EAAQlD,EAASkD,GAGlB,IACCsH,EADGC,EAAwBvH,EAAMuB,eAWlC,OARAvB,EAAMuB,eAAiBX,CAAAA,IACtB0G,GAAS,EACL/F,GAAgBA,EAAeU,KAAK9B,KAAMS,KAG/C,IAAIT,KAAK1C,GAETuC,EAAMuB,eAAiBgG,GACfD,GAGThB,eAAe1F,GACd,IAAI4G,EAAI,IAAIC,UAAU7G,EAAOc,IAAI8F,GAAKA,EAAEpG,SAASW,KAAK,OAEtD,MADAyF,EAAE5E,MAAQ4E,EAAE5E,MAAM8E,QAAQ,wCAAyC,IAC7DF,GAGPlB,OAAOjC,EAAWG,EAAc1C,EAAOuC,IAGtC,OAFA1F,EAAO0F,EAAW,cAAeG,GACjCrE,KAAKG,WAAaH,KAAKG,WAAWsB,OAAOyC,GAClClE,QASTlB,EAAOgH,EAAY3D,EAAO,CACzBgE,UAAUvD,GACT,IAAI7D,EAAQ4B,EAAY,IAAImF,EAAWnD,EAAiB3C,KAAKE,WAAY0C,IAAY5C,MACrF,IAAK,IAAIyD,KAAQb,EACZxF,EAAG0I,EAAYrC,IAAO1E,EAAMoB,WAAWU,QAAQ4C,EAAKtD,YAGzD,OAAOpB,KAQTD,EAAOmI,EAAa9E,EAAO,CAC1BgE,UAAU7I,GACT,IAAImC,EAAMO,KAAKE,WACf,IAAK,IAAI3B,KAAOjB,EACXN,EAAIyC,EAAKlB,KACZjB,EAAIiB,GAAO4E,EAAgB7F,EAAIiB,GAAMkB,EAAIlB,GAAMA,EAAKyB,KAAKS,OAAQ,IAAI,IAKvE,OAFAS,EAAclB,MACdA,KAAKF,QAAUxC,EACR0C,MAGRmG,SAAS1D,GACR,OAAOd,EAAO3B,KAAKE,WAAYuC,IAGhC0D,UAAUvD,GACT,IAAI1C,EAAa,IAAKF,KAAKE,YAC1BsH,EAAQ,IAAKxH,KAAKrC,WAClB8J,EAAW,IAAKzH,KAAKF,SACrB4H,EAAgB,GAEjB,IAAK,IAAIjE,KAAQb,EACZxF,EAAG+E,EAAOsB,KACbrF,EAAM8B,EAAYuD,EAAKvD,YACvB9B,EAAMqJ,EAAUhE,EAAK3D,SACrB4H,EAAc7G,QAAQ4C,EAAKtD,aAExB5C,EAAWkG,IAAOrF,EAAMoJ,EAAO/D,EAAK9F,WACpCF,EAASgG,IAAOrF,EAAM8B,EAAYuD,GAGvC,IAAIkE,EAAWhH,EAAY,IAAIsG,EAAY/G,GAAaF,KAAMwH,GAAOI,UAAUH,GAO/E,OANAE,EAASxH,WAAa,IAAIH,KAAKG,cAAeuH,GAE1C/K,EAASqD,QAAUiH,EAAYtJ,YAClCgK,EAASjH,YAAcV,MAGjB2H,GAGRxB,CAAC9G,GAAQ/B,EAAK0D,EAAMP,EAAQgC,EAAOW,GAClC,GAAI3F,EAASH,GAAM,CAClB,IAAImC,EAAMO,KAAKE,WACfiD,EAAgB7F,EAAIiC,IAAcjC,EAAKmC,EAAKuB,EAAMP,EAAQgC,EAAOW,QAE7D5C,EAAWC,EAAQT,KAAM1C,EAAK0D,GAEnCiD,EAAgB3G,EAAK0C,KAAMgB,EAAMP,YAItBkD,EAAM3F,EAAQ8H,IAAc,CACxCY,MAAK,CAACrI,EAAQmI,GAAM/G,KACZ7C,OAAOsC,OAAOtC,OAAOuC,OAAOwE,GAAM,CAAEzD,WAAYT,MAGzDkE,EAAIzD,WAAayD,EACjBA,EAAI9B,SAAW,KAAM,OAErB8B,EAAIkE,UAAY,SAAUpI,GAAOO,KAAKE,WAAaT,GACnDX,EAAO6E,EAAIkE,UAAWlE,EAAK,CAC1BwC,WAAa,MAAO,MAAQ3D,EAAiBxC,KAAKE,eAEnDyD,EAAI7F,OAAOC,UAAY,kBAAqB,IAAI4F,EAAIkE,UAAU7H,KAAKE,aCnd5D,MAAM4H,EAAgB,CAACC,EAAM3I,EAAaK,EAAKC,EAAMsI,EAAOC,EAAUC,IAErE1I,EAAUC,EAAKL,EAAa2I,EAAMrI,EAAMG,GAASjD,OAAOsC,OAAO,CACrErC,eAAgB,IAAMgD,EAAMlC,UAC5BwI,IAAIgC,EAAG5J,GACN,GAAIA,IAAQgB,EAAW,OAAO4I,EAE9B,IAAIlK,EAAMkK,EAAE5J,GACZ,OAAOhB,EAAWU,GAAOD,EAAQC,EAAK,CACrCkI,MAAMI,EAAIC,EAAKC,GACd,GAAIzJ,EAAIiL,EAAU1J,GAAM,CAEvB,IAAK6J,EAAOC,EAAM5B,EAAKnF,OAAS,EAAGgH,GAAaL,EAAS1J,GACzD,IAAK,IAAI2D,EAAIkG,EAAOlG,GAAKmG,EAAKnG,IAAK,CAClC,IAAIqG,EAASD,EAAYA,EAAUpG,GAAKrC,EAAMK,WAC9CuG,EAAKvE,GAAKiB,EACTsD,EAAKvE,GACLqG,KACGR,EAAK3H,QAAQ7B,eAAiB2D,KACjCrC,EAAMY,OACN,IACA,GAIF,GAAIZ,EAAMM,WAAWmB,OAAS,EAAG,CAChC,IAAIkH,EAAeR,EAAMG,GACzB5B,EAAGG,MAAM8B,EAAc/B,GACvBxC,EAAgBuE,EAAc3I,WAAgBtB,cAG/C2C,EAAcrB,GAGf,OAAO0G,EAAGG,MAAMyB,EAAG1B,MAEhBxI,IAEJiK,ICnCW,SAASO,EAAWC,GAClC,IAAI7I,EAAQiI,EACXxF,MACAmG,EACAC,EACAC,GAAKrG,MAAMC,QAAQoG,GAAKA,EAAEpH,IAAIqH,GAAOtF,EAAKsF,EAAK/I,EAAMK,aAAeyI,EACpEA,GAAK,IAAIA,GACT,CACCE,WAAc,GACdC,KAAQ,CAAC,EAAG,GACZC,IAAO,GACPlI,KAAQ,CAAC,GACTmI,QAAW,GACXC,MAAS,GACTC,KAAQ,GACRC,OAAU,CAAC,GACX1E,QAAW,CAAC,IAEb,CACCmC,IAAG,CAACwC,EAAK7K,EAAKN,IACN+G,EAAgBnF,EAAOuJ,EAAK7K,EAAKN,EAAK,CAAC0K,EAAGU,IAAMV,EAAEpK,GAAO8K,GAAG,GAGpExC,eAAc,CAACuC,EAAK7K,IACZyG,EAAgBnF,EAAOuJ,EAAK7K,OAAKgC,EAAWoI,UAAYA,EAAEpK,MAKpE,OAAOsB,EAGRf,EAAO2J,EAAYtG,EAAO,CACzBgE,SAAS1D,GACR,MAAO,YAAcD,EAAiBxC,KAAKE,WAAYuC,IAGxD0D,CAAC9G,GAAQ+J,EAAKpI,EAAMP,EAAQgC,GACvBH,MAAMC,QAAQ6G,IAChBA,EAAI7J,IAAc6J,GAAKE,QAAQ,CAACX,EAAGzG,IAAMiB,EAAgBwF,EAAG3I,KAAKE,cAAec,GAAQ,WAAWkB,KAAMzB,EAAQgC,IAC9GjC,EAAWC,EAAQT,KAAMoJ,EAAKpI,GAEnCiD,EAAgBmF,EAAKpJ,KAAMgB,EAAMP,IAGlC0F,UAAUvD,GACT,OAAOjC,EAAY,IAAI8H,EAAW9F,EAAiB3C,KAAKE,WAAY0C,IAAY5C,SAIlF,IAAIgF,EAAkB,CAACnF,EAAO0J,EAAOhL,EAAKE,EAAOyG,EAAesE,KAC/D,IAAIxI,WAAgBzC,MACJA,GAAO,IAAMiL,GAAiBjL,KAAOgL,KACxC9K,EAAQ0E,EAAgB1E,EAAOoB,EAAMK,WAAYc,EAAMnB,EAAMY,OAAQ,IAAI,IAEtF,IAAIgJ,EAAY,IAAIF,GACpBrE,EAAcuE,GACdxF,EAAgBwF,EAAW5J,EAAOmB,GAClC,IAAI0I,GAAaxI,EAAcrB,GAE/B,OADI6J,GAAWxE,EAAcqE,EAAO9K,GAC7BiL,GC7DO,SAASC,KAAiBC,GACxC,OAAOpK,EAAU,CAAEqK,UAAWD,GAAWD,EAAeG,SAAU,KAAMjK,KACvEhD,eAAgB,IAAMgD,EAAMlC,UAE5B0I,IAAG,CAACE,EAAIhI,IACAA,IAAQgB,EAAYgH,EAAKA,EAAGhI,GAGpC4H,MAAMI,EAAIC,EAAKC,GACd,IAWItC,EAXA1E,EAAMI,EAAMK,WACf6J,EAAkBtK,EAAIoK,UAAUG,KAAKzB,GAAUnL,EAAGuG,EAAIkE,UAAWU,IACjE0B,EAAgBF,EAAkBG,KAAKC,IAAI1D,EAAKnF,OAAQ7B,EAAIoK,UAAUvI,OAAS,GAAK7B,EAAIoK,UAAUvI,OAEnG,IAAK,IAAIY,EAAI,EAAGA,EAAI+H,EAAe/H,IAAK,CACvC,IAAIqG,EAASwB,GAAmB7H,GAAKzC,EAAIoK,UAAUvI,OAAS,EAAIyI,EAAgB7J,WAAaT,EAAIoK,UAAU3H,GAC3GuE,EAAKvE,GAAKiB,EAAgBsD,EAAKvE,GAAIqG,eAAqBrG,KAAMrC,EAAMY,OAAQ,IAAI,GAYjF,OATAwD,EAAgBwC,EAAM5G,EAAO,aAGxBA,EAAMY,OAAOa,SACjB6C,EAASiC,QAAQM,MAAMH,EAAIC,EAAKC,GAC5B,WAAYhH,IACf0E,EAAShB,EAAgBgB,EAAQ1E,EAAI2K,OAAQ,eAAgBvK,EAAMY,OAAQ,IAAI,KAEjFS,EAAcrB,GACPsE,MC1BK,SAASkG,EAASC,EAAsBC,GACtD,IAAIC,EAAStI,GAAW,IAANA,EAAUrC,EAAMK,WAAW3B,IAAMsB,EAAMK,WAAWzB,MACnEoB,EAAQiI,EACPpD,IACA2F,EACA,CAAE9L,IAAK+L,EAAsB7L,MAAO8L,GACpCE,GAAM7M,EAAW6M,GAAM,IAAI/F,IAAI,IAAI+F,GAAIlJ,IAAImJ,GAAQA,EAAKnJ,IAAI,CAAC1D,EAAGqE,IAAMoB,EAAKzF,EAAG2M,EAAOtI,OAASuI,EAC9FlJ,GAAO,IAAImD,IAAInD,GACf,CACCqF,IAAO,CAAC,EAAG,EAAG4D,GACdG,OAAU,GACVC,MAAS,KAIZ,OAAO/K,ECfO,SAASgL,EAASnC,GAChC,IAAI7I,EAAQiI,EACXnD,IACAkG,EACAnC,EACA+B,GAAM7M,EAAW6M,GAAM,IAAI9F,IAAI,IAAI8F,GAAIlJ,IAAItD,GAAOqF,EAAKrF,EAAK4B,EAAMK,cAAgBuK,EAClF7D,GAAO,IAAIjC,IAAIiC,GACf,CACCkE,IAAO,CAAC,EAAG,GACXH,OAAU,GACVC,MAAS,KAIX,OAAO/K,EFiBRf,EAAO6K,EAAexH,EAAO,CAC5BgE,SAAS1D,EAAQ,IAChB,IAAIsI,cAAkB/K,KAAKE,WAAW2J,UAAUtI,IAC/CgH,GAAU/F,EAAiB+F,EAAQ,IAAI9F,KACtCb,KAAK,SAKP,MAHI,WAAY5B,KAAKE,aACpB6K,GAAO,OAASvI,EAAiBxC,KAAKE,WAAWkK,OAAQ3H,IAEnDsI,GAGR5E,OAAO1G,GAEN,OADAO,KAAKE,WAAWkK,OAAS3K,EAClBO,MAGRmG,OAAO6E,EAASC,GACf,IAAIxE,EAAOzG,KAAKE,WAAW2J,UAC1BqB,EAAYF,EAAQzJ,IAAI,CAACoH,EAAGzG,IAAMS,EAAiBT,KAAKuE,EAAOA,EAAKvE,GAAK,GAAI8I,EAAQ9I,KACrFiJ,EAAexI,EAAiB3C,KAAKE,WAAWkK,OAAQa,GACzD,OAAOtK,EAAY,IAAIgJ,KAAiBuB,GAAWd,OAAOe,GAAenL,OAG1EmG,CAAC9G,GAAQ7B,EAAGwD,EAAMP,GACZlD,EAAWC,IAAIgD,EAAWC,EAAQ,WAAYjD,EAAGwD,MAIxD2I,EAAchM,UAAUyN,OAAO,SAAsB3E,GACpD,IAAImD,EAAU5J,KAAKE,WAAW2J,UAC9B,QAAQpD,EAAKnF,OAASsI,EAAQtI,SAAWsI,EAAQpG,KAAK+E,GAAUnL,EAAGuG,EAAIkE,UAAWU,MAAY9B,GAC5F,SAAUA,GACZ,mBAAoBzG,KAAKE,WAAW2J,UAAUvI,wBAAwBK,EAAO3B,cAAcyG,EAAKnF,WC9CjGxC,EAAOuL,EAAUlI,EAAO,CACvBgE,SAAS1D,GACR,gBAAiBD,EAAiBxC,KAAKE,WAAW3B,IAAKkE,QAAYD,EAAiBxC,KAAKE,WAAWzB,MAAOgE,MAG5G0D,CAAC9G,GAAQkC,EAAKP,EAAMP,EAAQgC,GAC3B,GAAIrF,EAAGsH,IAAKnD,GAAM,CACjBP,EAAOA,GAAQ,MACf,IAAK,IAAKzC,EAAKE,KAAU8C,EACxB4B,EAAgB5E,EAAKyB,KAAKE,WAAW3B,OAAQyC,QAAYP,EAAQgC,GACjEU,EAAgB1E,EAAOuB,KAAKE,WAAWzB,SAAUuC,KAAQW,EAAOpD,MAASkC,EAAQgC,QAE5EjC,EAAWC,EAAQT,KAAMuB,EAAKP,GAErCiD,EAAgB1C,EAAKvB,KAAMgB,EAAMP,IAGlC0F,OAAOkF,EAAUC,GAChB,OAAO3K,EAAY,IAAI0J,EACtB1H,EAAiB3C,KAAKE,WAAW3B,IAAK8M,GACtC1I,EAAiB3C,KAAKE,WAAWzB,MAAO6M,IACtCtL,SCtBLlB,EAAO+L,EAAU1I,EAAO,CACvBgE,SAAS1D,GACR,MAAO,UAAYD,EAAiBxC,KAAKE,WAAYuC,IAGtD0D,CAAC9G,GAAQuH,EAAK5F,EAAMP,EAAQgC,GAC3B,GAAIrF,EAAGuH,IAAKiC,GACX,IAAK,IAAIhC,KAAQgC,EAAI2E,SACpBpI,EAAgByB,EAAM5E,KAAKE,cAAec,GAAQ,cAAeP,EAAQgC,QAEpEjC,EAAWC,EAAQT,KAAM4G,EAAK5F,GACrCiD,EAAgB2C,EAAK5G,KAAMgB,EAAMP,IAGlC0F,UAAUvD,GACT,OAAOjC,EAAY,IAAIkK,EAASlI,EAAiB3C,KAAKE,WAAY0C,IAAY5C"}