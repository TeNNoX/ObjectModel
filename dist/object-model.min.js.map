{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/list-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\n\tObjectProto = Object.prototype,\n\tbettertypeof = x => ObjectProto.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\n\tgetProto = Object.getPrototypeOf,\n\tsetProto = Object.setPrototypeOf,\n\n\thas = (o, prop) => ObjectProto.hasOwnProperty.call(o, prop),\n\tis = (Constructor, obj) => obj instanceof Constructor,\n\tisFunction = f => typeof f === \"function\",\n\tisObject = o => o && typeof o === \"object\",\n\tisString = s => typeof s === \"string\",\n\tisPlainObject = o => isObject(o) && getProto(o) === ObjectProto,\n\tisIterable = x => x && isFunction(x[Symbol.iterator]),\n\n\tproxify = (val, traps) => new Proxy(val, traps),\n\n\tmerge = (target, src = {}) => {\n\t\tfor (let key in src) {\n\t\t\tif (isPlainObject(src[key])) {\n\t\t\t\tconst o = {}\n\t\t\t\tmerge(o, target[key])\n\t\t\t\tmerge(o, src[key])\n\t\t\t\ttarget[key] = o\n\t\t\t} else {\n\t\t\t\ttarget[key] = src[key]\n\t\t\t}\n\t\t}\n\t\treturn target\n\t},\n\n\tdefine = (obj, key, value, enumerable = false) => {\n\t\tObject.defineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\n\t},\n\n\textend = (child, parent, props) => {\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\n\t\t\tconstructor: {\n\t\t\t\tvalue: child,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t}\n\t\t}), props)\n\t\tsetProto(child, parent)\n\t}","import {\n\tbettertypeof, define, extend, getProto, has,\n\tis, isFunction, isObject, isPlainObject, isString,\n\tmerge, ObjectProto, proxify, setProto\n} from \"./helpers.js\"\n\nexport const\n\t_check = Symbol(),\n\t_checked = Symbol(), // used to skip validation at instanciation for perf\n\t_original = Symbol(), // used to bypass proxy\n\n\tinitModel = (def, constructor, parent, init, getTraps, useNew) => {\n\t\tconst model = function (val = model.default, mode) {\n\t\t\tif (useNew && !is(model, this)) return new model(val)\n\t\t\tif (init) val = init(val, model, this)\n\n\t\t\tif (mode === _checked || check(model, val))\n\t\t\t\treturn getTraps ? proxify(val, getTraps(model)) : val\n\t\t}\n\n\t\tif (parent) extend(model, parent)\n\t\tsetProto(model, constructor.prototype)\n\t\tmodel.constructor = constructor\n\t\tmodel.definition = def\n\t\tmodel.assertions = [...model.assertions]\n\t\tdefine(model, \"errors\", [])\n\t\tdelete model.name\n\t\treturn model\n\t},\n\n\tinitObjectModel = (obj, model, _this) => {\n\t\tif (is(model, obj)) return obj\n\n\t\tif (!isObject(obj) && !isFunction(obj) && obj !== undefined) {\n\t\t\tstackError(model.errors, Object, obj)\n\t\t}\n\n\t\tmerge(_this, model.default)\n\t\tif (model.parentClass) merge(obj, new model.parentClass(obj))\n\t\tmerge(_this, obj)\n\t\treturn _this\n\t},\n\n\textendModel = (child, parent, newProps) => {\n\t\textend(child, parent, newProps)\n\t\tchild.assertions.push(...parent.assertions)\n\t\treturn child\n\t},\n\n\tstackError = (errors, expected, received, path, message) => {\n\t\terrors.push({ expected, received, path, message })\n\t},\n\n\tunstackErrors = (model, collector = model.errorCollector) => {\n\t\tconst nbErrors = model.errors.length\n\t\tif (nbErrors > 0) {\n\t\t\tconst errors = model.errors.map(err => {\n\t\t\t\tif (!err.message) {\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + formatDefinition(err.expected)\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\n\t\t\t\t}\n\t\t\t\treturn err\n\t\t\t})\n\n\t\t\tmodel.errors.length = 0\n\t\t\tcollector.call(model, errors) // throw all errors collected\n\t\t}\n\t\treturn nbErrors\n\t},\n\n\tisModelInstance = i => i && getProto(i) && is(Model, getProto(i).constructor),\n\n\tparseDefinition = (def) => {\n\t\tif (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => { def[key] = parseDefinition(def[key]) })\n\t\t}\n\t\telse if (!Array.isArray(def)) return [def]\n\t\telse if (def.length === 1) return [def[0], undefined, null]\n\n\t\treturn def\n\t},\n\n\tformatDefinition = (def, stack) => {\n\t\tconst parts = parseDefinition(def).map(d => format(d, stack))\n\t\treturn parts.length > 1 ? parts.join(\" or \") : parts[0]\n\t},\n\n\tformatAssertions = fns => fns.length ? `(${fns.map(f => f.name || f.description || f)})` : \"\",\n\n\textendDefinition = (def, newParts = []) => {\n\t\tnewParts = [].concat(newParts)\n\t\tif (newParts.length > 0) {\n\t\t\tdef = newParts\n\t\t\t\t.reduce((def, ext) => def.concat(ext), [].concat(def)) // clone to lose ref\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\n\t\t}\n\n\t\treturn def\n\t},\n\n\tcheck = (model, obj) => {\n\t\tmodel[_check](obj, null, model.errors, [], true);\n\t\treturn !unstackErrors(model)\n\t},\n\n\tcheckDefinition = (obj, def, path, errors, stack, shouldCast) => {\n\t\tconst indexFound = stack.indexOf(def)\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\n\t\t\treturn obj // if found twice in call stack, cycle detected, skip validation\n\n\t\tif (Array.isArray(def) && def.length === 1 && obj != null) {\n\t\t\tdef = def[0] // shorten validation path for optionals\n\t\t}\n\n\t\tif (is(Model, def)) {\n\t\t\tif (shouldCast) obj = cast(obj, def)\n\t\t\tdef[_check](obj, path, errors, stack.concat(def))\n\t\t}\n\t\telse if (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => {\n\t\t\t\tconst val = obj ? obj[key] : undefined\n\t\t\t\tcheckDefinition(val, def[key], formatPath(path, key), errors, stack, shouldCast)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tconst pdef = parseDefinition(def)\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack))) {\n\t\t\t\treturn shouldCast ? cast(obj, def) : obj\n\t\t\t}\n\n\t\t\tstackError(errors, def, obj, path)\n\t\t}\n\n\t\treturn obj\n\t},\n\n\tcheckDefinitionPart = (obj, def, path, stack, shouldCast) => {\n\t\tif (def === Any) return true\n\t\tif (obj == null) return obj === def\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\n\t\t\tconst errors = []\n\t\t\tcheckDefinition(obj, def, path, errors, stack, shouldCast)\n\t\t\treturn !errors.length\n\t\t}\n\t\tif (is(RegExp, def)) return def.test(obj)\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\n\t\treturn obj === def\n\t\t\t|| (isFunction(def) && is(def, obj))\n\t\t\t|| obj.constructor === def\n\t},\n\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\n\t\tfor (let assertion of model.assertions) {\n\t\t\tlet result\n\t\t\ttry {\n\t\t\t\tresult = assertion.call(model, obj)\n\t\t\t} catch (err) {\n\t\t\t\tresult = err\n\t\t\t}\n\t\t\tif (result !== true) {\n\t\t\t\tconst onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\n\t\t\t\t\t+ `for ${path ? path + \" =\" : \"value\"} ${format(value)}`\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\n\t\t\t}\n\t\t}\n\t},\n\n\tformat = (obj, stack = []) => {\n\t\tif (stack.length > 15 || stack.includes(obj)) return \"...\"\n\t\tif (obj === null || obj === undefined) return String(obj)\n\t\tif (isString(obj)) return `\"${obj}\"`\n\t\tif (is(Model, obj)) return obj.toString(stack)\n\n\t\tstack.unshift(obj)\n\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\n\t\tif (Array.isArray(obj)) return `[${obj.map(item => format(item, stack)).join(\", \")}]`\n\t\tif (obj.toString && obj.toString !== ObjectProto.toString) return obj.toString()\n\t\tif (isObject(obj)) {\n\t\t\tconst props = Object.keys(obj),\n\t\t\t\tindent = \"\\t\".repeat(stack.length)\n\t\t\treturn `{${props.map(\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], [...stack])}`\n\t\t\t).join(\", \")} ${props.length ? `\\n${indent.slice(1)}` : \"\"}}`\n\t\t}\n\n\t\treturn String(obj)\n\t},\n\n\tformatPath = (path, key) => path ? path + \".\" + key : key,\n\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\n\t\tconst newPath = formatPath(path, key),\n\t\t\t  isPrivate = model.conventionForPrivate(key),\n\t\t\t  isConstant = model.conventionForConstant(key),\n\t\t\t  isOwnProperty = has(o, key),\n\t\t\t  initialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\n\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\n\n\t\tapplyMutation(newPath)\n\t\tif (has(def, key)) checkDefinition(o[key], def[key], newPath, model.errors, [])\n\t\tcheckAssertions(o, model, newPath)\n\n\t\tconst nbErrors = model.errors.length\n\t\tif (nbErrors) {\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\n\n\t\t\tunstackErrors(model)\n\t\t}\n\n\t\treturn !nbErrors\n\t},\n\n\tcannot = (msg, model) => {\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\n\t},\n\n\tcast = (obj, defNode = []) => {\n\t\tif (!obj || isPlainObject(defNode) || is(BasicModel, defNode) || isModelInstance(obj))\n\t\t\treturn obj // no value or not leaf or already a model instance\n\n\t\tconst def = parseDefinition(defNode),\n\t\t\t  suitableModels = []\n\n\t\tfor (let part of def) {\n\t\t\tif (is(Model, part) && !is(BasicModel, part) && part.test(obj))\n\t\t\t\tsuitableModels.push(part)\n\t\t}\n\n\t\tif (suitableModels.length === 1) {\n\t\t\t// automatically cast to suitable model when explicit (autocasting)\n\t\t\treturn new suitableModels[0](obj, _checked)\n\t\t}\n\n\t\tif (suitableModels.length > 1)\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\n\n\t\treturn obj\n\t},\n\n\n\tgetProp = (val, model, def, path, privateAccess) => {\n\t\tif (!isPlainObject(def)) return cast(val, def)\n\t\treturn proxify(val, getTraps(model, def, path, privateAccess))\n\t},\n\n\tgetTraps = (model, def, path, privateAccess) => {\n\t\tconst grantPrivateAccess = f => proxify(f, {\n\t\t\tapply(fn, ctx, args) {\n\t\t\t\tprivateAccess = true\n\t\t\t\tconst result = Reflect.apply(fn, ctx, args)\n\t\t\t\tprivateAccess = false\n\t\t\t\treturn result\n\t\t\t}\n\t\t})\n\n\t\treturn {\n\t\t\tgetPrototypeOf: obj => path ? ObjectProto : getProto(obj),\n\n\t\t\tget(o, key) {\n\t\t\t\tif (key === _original) return o\n\n\t\t\t\tif (!isString(key)) return Reflect.get(o, key)\n\n\t\t\t\tconst newPath = formatPath(path, key)\n\t\t\t\tconst defPart = def[key]\n\n\t\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\n\t\t\t\t\tcannot(`access to private property ${newPath}`, model)\n\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tlet value = o[key]\n\n\t\t\t\tif (value && has(o, key) && !isPlainObject(defPart) && !isModelInstance(value)) {\n\t\t\t\t\to[key] = value = cast(value, defPart) // cast nested models\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(value) && key !== \"constructor\" && !privateAccess) {\n\t\t\t\t\treturn grantPrivateAccess(value)\n\t\t\t\t}\n\n\t\t\t\tif (isPlainObject(defPart) && !value) {\n\t\t\t\t\to[key] = value = {} // null-safe traversal\n\t\t\t\t}\n\n\t\t\t\treturn getProp(value, model, defPart, newPath, privateAccess)\n\t\t\t},\n\n\t\t\tset(o, key, val) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\n\t\t\t\t\tnewPath => Reflect.set(o, key, getProp(val, model, def[key], newPath))\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tdeleteProperty(o, key) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\n\t\t\t},\n\n\t\t\tdefineProperty(o, key, args) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\n\t\t\t},\n\n\t\t\thas(o, key) {\n\t\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\n\t\t\t},\n\n\t\t\townKeys(o) {\n\t\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\n\t\t\t},\n\n\t\t\tgetOwnPropertyDescriptor(o, key) {\n\t\t\t\tlet descriptor\n\t\t\t\tif (!model.conventionForPrivate(key)) {\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key)\n\t\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key]\n\t\t\t\t}\n\n\t\t\t\treturn descriptor\n\t\t\t}\n\t\t}\n\t}\n\n\nexport function Model(def, params) {\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\n}\n\nObject.assign(Model.prototype, {\n\tname: \"Model\",\n\tassertions: [],\n\n\tconventionForConstant: key => key.toUpperCase() === key,\n\tconventionForPrivate: key => key[0] === \"_\",\n\n\ttoString(stack) {\n\t\treturn has(this, \"name\") ? this.name : formatDefinition(this.definition, stack) + formatAssertions(this.assertions)\n\t},\n\n\tas(name) {\n\t\tdefine(this, \"name\", name)\n\t\treturn this\n\t},\n\n\tdefaultTo(val) {\n\t\tthis.default = val\n\t\treturn this\n\t},\n\n\t[_check](obj, path, errors, stack) {\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\n\t\tcheckAssertions(obj, this, path, errors)\n\t},\n\n\ttest(obj, errorCollector) {\n\t\tlet model = this\n\t\twhile (!has(model, \"errorCollector\")) {\n\t\t\tmodel = getProto(model)\n\t\t}\n\n\t\tconst initialErrorCollector = model.errorCollector\n\t\tlet failed\n\n\t\tmodel.errorCollector = errors => {\n\t\t\tfailed = true\n\t\t\tif (errorCollector) errorCollector.call(this, errors)\n\t\t}\n\n\t\tnew this(obj) // may trigger errorCollector\n\n\t\tmodel.errorCollector = initialErrorCollector\n\t\treturn !failed\n\t},\n\n\terrorCollector(errors) {\n\t\tconst e = new TypeError(errors.map(e => e.message).join(\"\\n\"))\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\n\t\tthrow e\n\t},\n\n\tassert(assertion, description = format(assertion)) {\n\t\tdefine(assertion, \"description\", description)\n\t\tthis.assertions = this.assertions.concat(assertion)\n\t\treturn this\n\t}\n})\n\n\nexport function BasicModel(def) {\n\treturn initModel(def, BasicModel)\n}\n\nextend(BasicModel, Model, {\n\textend(...newParts) {\n\t\tconst child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\n\t\tfor (let part of newParts) {\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\n\t\t}\n\n\t\treturn child\n\t}\n})\n\nexport function ObjectModel(def) {\n\treturn initModel(def, ObjectModel, Object, initObjectModel, model => getTraps(model, def), true)\n}\n\nextend(ObjectModel, Model, {\n\tdefaultTo(obj) {\n\t\tconst def = this.definition\n\t\tfor (let key in obj) {\n\t\t\tif (has(def, key)) {\n\t\t\t\tobj[key] = checkDefinition(obj[key], def[key], key, this.errors, [], true)\n\t\t\t}\n\t\t}\n\t\tunstackErrors(this)\n\t\tthis.default = obj;\n\t\treturn this\n\t},\n\n\ttoString(stack) {\n\t\treturn format(this.definition, stack)\n\t},\n\n\textend(...newParts) {\n\t\tconst definition = { ...this.definition }\n\t\tconst proto = { ...this.prototype }\n\t\tconst defaults = { ...this.default }\n\t\tconst newAssertions = []\n\n\t\tfor (let part of newParts) {\n\t\t\tif (is(Model, part)) {\n\t\t\t\tmerge(definition, part.definition)\n\t\t\t\tmerge(defaults, part.default)\n\t\t\t\tnewAssertions.push(...part.assertions)\n\t\t\t}\n\t\t\tif (isFunction(part)) merge(proto, part.prototype)\n\t\t\tif (isObject(part)) merge(definition, part)\n\t\t}\n\n\t\tconst submodel = extendModel(new ObjectModel(definition), this, proto).defaultTo(defaults)\n\t\tsubmodel.assertions = [...this.assertions, ...newAssertions]\n\n\t\tif (getProto(this) !== ObjectModel.prototype) { // extended class\n\t\t\tsubmodel.parentClass = this\n\t\t}\n\n\t\treturn submodel\n\t},\n\n\t[_check](obj, path, errors, stack, shouldCast) {\n\t\tif (isObject(obj)) {\n\t\t\tcheckDefinition(obj[_original] || obj, this.definition, path, errors, stack, shouldCast)\n\t\t}\n\t\telse stackError(errors, this, obj, path)\n\n\t\tcheckAssertions(obj, this, path, errors)\n\t}\n})\n\nexport const Any = proxify(BasicModel(), {\n\tapply(target, ctx, [def]) {\n\t\tconst anyOf = Object.create(Any)\n\t\tanyOf.definition = def;\n\t\treturn anyOf\n\t}\n})\nAny.definition = Any\nAny.toString = () => \"Any\"\n\nAny.remaining = function (def) { this.definition = def }\nextend(Any.remaining, Any, {\n\ttoString() { return \"...\" + formatDefinition(this.definition) }\n})\nAny[Symbol.iterator] = function* () { yield new Any.remaining(this.definition) }","\nimport { _original, checkAssertions, checkDefinition, initModel, unstackErrors } from \"./object-model.js\"\nimport { has, isFunction, proxify } from \"./helpers.js\"\n\nexport const initListModel = (base, constructor, def, init, clone, mutators, otherTraps) => {\n\n\treturn initModel(def, constructor, base, init, model => Object.assign({\n\t\tgetPrototypeOf: () => model.prototype,\n\t\tget(l, key) {\n\t\t\tif (key === _original) return l\n\n\t\t\tconst val = l[key]\n\t\t\treturn isFunction(val) ? proxify(val, {\n\t\t\t\tapply(fn, ctx, args) {\n\t\t\t\t\tif (has(mutators, key)) {\n\t\t\t\t\t\t// indexes of arguments to check def + cast\n\t\t\t\t\t\tconst [begin, end = args.length - 1, getArgDef] = mutators[key]\n\t\t\t\t\t\tfor (let i = begin; i <= end; i++) {\n\t\t\t\t\t\t\tconst argDef = getArgDef ? getArgDef(i) : model.definition\n\t\t\t\t\t\t\targs[i] = checkDefinition(\n\t\t\t\t\t\t\t\targs[i],\n\t\t\t\t\t\t\t\targDef,\n\t\t\t\t\t\t\t\t`${base.name}.${key} arguments[${i}]`,\n\t\t\t\t\t\t\t\tmodel.errors,\n\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (model.assertions.length > 0) {\n\t\t\t\t\t\t\tconst testingClone = clone(l)\n\t\t\t\t\t\t\tfn.apply(testingClone, args)\n\t\t\t\t\t\t\tcheckAssertions(testingClone, model, `after ${key} mutation`)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn fn.apply(l, args)\n\t\t\t\t}\n\t\t\t}) : val\n\t\t}\n\t}, otherTraps))\n}","import {\n\t_original, _check, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, formatDefinition, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend } from \"./helpers.js\"\n\nexport default function ArrayModel(initialDefinition) {\n\tconst model = initListModel(\n\t\tArray,\n\t\tArrayModel,\n\t\tinitialDefinition,\n\t\ta => Array.isArray(a) ? a.map(arg => cast(arg, model.definition)) : a,\n\t\ta => [...a],\n\t\t{\n\t\t\t\"copyWithin\": [],\n\t\t\t\"fill\": [0, 0],\n\t\t\t\"pop\": [],\n\t\t\t\"push\": [0],\n\t\t\t\"reverse\": [],\n\t\t\t\"shift\": [],\n\t\t\t\"sort\": [],\n\t\t\t\"splice\": [2],\n\t\t\t\"unshift\": [0]\n\t\t},\n\t\t{\n\t\t\tset(arr, key, val) {\n\t\t\t\treturn controlMutation(model, arr, key, val, (a, v) => a[key] = v, true)\n\t\t\t},\n\n\t\t\tdeleteProperty(arr, key) {\n\t\t\t\treturn controlMutation(model, arr, key, undefined, a => delete a[key])\n\t\t\t}\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(ArrayModel, Model, {\n\ttoString(stack) {\n\t\treturn \"Array of \" + formatDefinition(this.definition, stack)\n\t},\n\n\t[_check](arr, path, errors, stack) {\n\t\tif (Array.isArray(arr))\n\t\t\t(arr[_original] || arr).forEach((a, i) => checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack))\n\t\telse stackError(errors, this, arr, path)\n\n\t\tcheckAssertions(arr, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})\n\nconst controlMutation = (model, array, key, value, applyMutation, canBeExtended) => {\n\tconst path = `Array[${key}]`\n\tconst isInDef = (+key >= 0 && (canBeExtended || key in array))\n\tif (isInDef) value = checkDefinition(value, model.definition, path, model.errors, [], true)\n\n\tconst testArray = [...array]\n\tapplyMutation(testArray)\n\tcheckAssertions(testArray, model, path)\n\tconst isSuccess = !unstackErrors(model)\n\tif (isSuccess) applyMutation(array, value)\n\treturn isSuccess\n}","import {\n\t_check, _original, Any, checkAssertions, checkDefinition, extendDefinition, extendModel,\n\tformatDefinition, initModel, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { extend, is, isFunction } from \"./helpers.js\"\n\nexport default function FunctionModel(...argsDef) {\n\treturn initModel({ arguments: argsDef }, FunctionModel, Function, null, model => ({\n\t\tgetPrototypeOf: () => model.prototype,\n\n\t\tget(fn, key) {\n\t\t\treturn key === _original ? fn : fn[key]\n\t\t},\n\n\t\tapply(fn, ctx, args) {\n\t\t\tconst def = model.definition\n\t\t\tconst remainingArgDef = def.arguments.find(argDef => is(Any.remaining, argDef))\n\t\t\tconst nbArgsToCheck = remainingArgDef ? Math.max(args.length, def.arguments.length - 1) : def.arguments.length\n\n\t\t\tfor (let i = 0; i < nbArgsToCheck; i++) {\n\t\t\t\tconst argDef = remainingArgDef && i >= def.arguments.length - 1 ? remainingArgDef.definition : def.arguments[i]\n\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\n\t\t\t}\n\n\t\t\tcheckAssertions(args, model, \"arguments\")\n\n\t\t\tlet result\n\t\t\tif (!model.errors.length) {\n\t\t\t\tresult = Reflect.apply(fn, ctx, args)\n\t\t\t\tif (\"return\" in def)\n\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\n\t\t\t}\n\t\t\tunstackErrors(model)\n\t\t\treturn result\n\t\t}\n\t}))\n}\n\nextend(FunctionModel, Model, {\n\ttoString(stack = []) {\n\t\tlet out = `Function(${this.definition.arguments.map(\n\t\t\targDef => formatDefinition(argDef, [...stack])\n\t\t).join(\", \")})`\n\n\t\tif (\"return\" in this.definition) {\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\n\t\t}\n\t\treturn out\n\t},\n\n\treturn(def) {\n\t\tthis.definition.return = def\n\t\treturn this\n\t},\n\n\textend(newArgs, newReturns) {\n\t\tconst args = this.definition.arguments,\n\t\t\t  mixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\n\t\t\t  mixedReturns = extendDefinition(this.definition.return, newReturns)\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\n\t},\n\n\t[_check](f, path, errors) {\n\t\tif (!isFunction(f)) stackError(errors, \"Function\", f, path)\n\t}\n})","import {\n\t_check, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, format, formatDefinition, Model, stackError\n} from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function MapModel(initialKeyDefinition, initialValueDefinition) {\n\tconst getDef = i => i === 0 ? model.definition.key : model.definition.value;\n\tconst model = initListModel(\n\t\tMap,\n\t\tMapModel,\n\t\t{ key: initialKeyDefinition, value: initialValueDefinition },\n\t\tit => isIterable(it) ? new Map([...it].map(pair => pair.map((x, i) => cast(x, getDef(i))))) : it,\n\t\tmap => new Map(map),\n\t\t{\n\t\t\t\"set\": [0, 1, getDef],\n\t\t\t\"delete\": [],\n\t\t\t\"clear\": []\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(MapModel, Model, {\n\ttoString(stack) {\n\t\treturn `Map of ${formatDefinition(this.definition.key, stack)} : ${formatDefinition(this.definition.value, stack)}`\n\t},\n\n\t[_check](map, path, errors, stack) {\n\t\tif (is(Map, map)) {\n\t\t\tpath = path || \"Map\"\n\t\t\tfor (let [key, value] of map) {\n\t\t\t\tcheckDefinition(key, this.definition.key, `${path} key`, errors, stack)\n\t\t\t\tcheckDefinition(value, this.definition.value, `${path}[${format(key)}]`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, map, path)\n\n\t\tcheckAssertions(map, this, path, errors)\n\t},\n\n\textend(keyParts, valueParts) {\n\t\treturn extendModel(new MapModel(\n\t\t\textendDefinition(this.definition.key, keyParts),\n\t\t\textendDefinition(this.definition.value, valueParts)\n\t\t), this)\n\t}\n})","import {\n\t_check, cast, checkAssertions, checkDefinition,\n\textendDefinition, extendModel, formatDefinition, Model, stackError\n} from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function SetModel(initialDefinition) {\n\tconst model = initListModel(\n\t\tSet,\n\t\tSetModel,\n\t\tinitialDefinition,\n\t\tit => isIterable(it) ? new Set([...it].map(val => cast(val, model.definition))) : it,\n\t\tset => new Set(set),\n\t\t{\n\t\t\t\"add\": [0, 0],\n\t\t\t\"delete\": [],\n\t\t\t\"clear\": []\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(SetModel, Model, {\n\ttoString(stack) {\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\n\t},\n\n\t[_check](set, path, errors, stack) {\n\t\tif (is(Set, set)) {\n\t\t\tfor (let item of set.values()) {\n\t\t\t\tcheckDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack)\n\t\t\t}\n\t\t} else stackError(errors, this, set, path)\n\t\tcheckAssertions(set, this, path, errors)\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})"],"names":["ObjectProto","Object","prototype","getProto","getPrototypeOf","setProto","setPrototypeOf","has","o","prop","hasOwnProperty","call","is","Constructor","obj","isFunction","f","isObject","isString","s","isPlainObject","isIterable","x","Symbol","iterator","proxify","val","traps","Proxy","merge","target","src","key","define","value","enumerable","defineProperty","writable","configurable","extend","child","parent","props","assign","create","constructor","_check","_checked","_original","initModel","def","init","getTraps","useNew","model","default","mode","this","check","definition","assertions","name","initObjectModel","_this","undefined","stackError","errors","parentClass","extendModel","newProps","push","expected","received","path","message","unstackErrors","collector","errorCollector","nbErrors","length","map","err","formatDefinition","toString","match","format","isModelInstance","i","Model","parseDefinition","keys","Array","isArray","stack","parts","d","join","extendDefinition","newParts","concat","reduce","ext","filter","index","self","indexOf","checkDefinition","shouldCast","indexFound","cast","formatPath","some","part","checkDefinitionPart","Any","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","slice","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","msg","defNode","BasicModel","suitableModels","console","warn","getProp","[object Object]","Reflect","get","defPart","fn","ctx","args","apply","set","deleteProperty","ownKeys","descriptor","params","ObjectModel","toUpperCase","fns","initialErrorCollector","failed","e","TypeError","replace","proto","defaults","newAssertions","submodel","defaultTo","anyOf","remaining","initListModel","base","clone","mutators","otherTraps","l","begin","end","getArgDef","argDef","testingClone","ArrayModel","initialDefinition","a","arg","copyWithin","fill","pop","reverse","shift","sort","splice","arr","v","forEach","array","canBeExtended","testArray","isSuccess","FunctionModel","argsDef","arguments","Function","remainingArgDef","find","nbArgsToCheck","Math","max","return","MapModel","initialKeyDefinition","initialValueDefinition","getDef","it","pair","delete","clear","SetModel","add","out","newArgs","newReturns","mixedArgs","mixedReturns","keyParts","valueParts","values"],"mappings":"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"}